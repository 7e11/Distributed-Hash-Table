<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1062.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1045" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1045" > </text>
<g id="frames">
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.27%)</title><rect x="901.8" y="549" width="3.2" height="15.0" fill="rgb(237,162,37)" rx="2" ry="2" />
<text  x="904.80" y="559.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (3 samples, 0.41%)</title><rect x="725.7" y="629" width="4.8" height="15.0" fill="rgb(211,125,29)" rx="2" ry="2" />
<text  x="728.69" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="645" width="1.6" height="15.0" fill="rgb(221,199,46)" rx="2" ry="2" />
<text  x="1004.07" y="655.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="40.4" y="789" width="1.6" height="15.0" fill="rgb(252,139,27)" rx="2" ry="2" />
<text  x="43.42" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 8.14%)</title><rect x="267.8" y="677" width="96.0" height="15.0" fill="rgb(217,105,26)" rx="2" ry="2" />
<text  x="270.77" y="687.5" >[[kernel.ka..</text>
</g>
<g >
<title>std::thread::current (2 samples, 0.27%)</title><rect x="986.7" y="821" width="3.2" height="15.0" fill="rgb(252,127,34)" rx="2" ry="2" />
<text  x="989.66" y="831.5" ></text>
</g>
<g >
<title>__libc_recv (59 samples, 8.01%)</title><rect x="413.5" y="725" width="94.4" height="15.0" fill="rgb(247,38,33)" rx="2" ry="2" />
<text  x="416.47" y="735.5" >__libc_recv</text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::EnumAccess&gt;::variant_seed (169 samples, 22.93%)</title><rect x="106.1" y="805" width="270.5" height="15.0" fill="rgb(238,220,53)" rx="2" ry="2" />
<text  x="109.07" y="815.5" >&lt;serde_json::de::VariantAccess&lt;R&gt; as..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 2.17%)</title><rect x="338.2" y="501" width="25.6" height="15.0" fill="rgb(248,119,0)" rx="2" ry="2" />
<text  x="341.22" y="511.5" >[..</text>
</g>
<g >
<title>std::io::stdio::Stdout::lock (4 samples, 0.54%)</title><rect x="962.6" y="741" width="6.5" height="15.0" fill="rgb(239,2,42)" rx="2" ry="2" />
<text  x="965.65" y="751.5" ></text>
</g>
<g >
<title>__libc_recv (45 samples, 6.11%)</title><rect x="178.1" y="661" width="72.1" height="15.0" fill="rgb(229,185,28)" rx="2" ry="2" />
<text  x="181.11" y="671.5" >__libc_r..</text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (101 samples, 13.70%)</title><rect x="738.5" y="661" width="161.7" height="15.0" fill="rgb(215,8,5)" rx="2" ry="2" />
<text  x="741.49" y="671.5" >&lt;std::io::buffered::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 1.63%)</title><rect x="78.8" y="341" width="19.3" height="15.0" fill="rgb(215,129,54)" rx="2" ry="2" />
<text  x="81.85" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="725" width="1.6" height="15.0" fill="rgb(229,95,42)" rx="2" ry="2" />
<text  x="1004.07" y="735.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.14%)</title><rect x="102.9" y="389" width="1.6" height="15.0" fill="rgb(253,40,5)" rx="2" ry="2" />
<text  x="105.86" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="247.0" y="485" width="1.6" height="15.0" fill="rgb(207,26,52)" rx="2" ry="2" />
<text  x="249.96" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::raw (2 samples, 0.27%)</title><rect x="368.6" y="693" width="3.2" height="15.0" fill="rgb(253,0,51)" rx="2" ry="2" />
<text  x="371.64" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="709" width="1.6" height="15.0" fill="rgb(218,50,46)" rx="2" ry="2" />
<text  x="1189.80" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="237.4" y="533" width="11.2" height="15.0" fill="rgb(236,80,10)" rx="2" ry="2" />
<text  x="240.35" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 2.17%)</title><rect x="72.4" y="405" width="25.7" height="15.0" fill="rgb(223,109,32)" rx="2" ry="2" />
<text  x="75.44" y="415.5" >[..</text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::Command&gt;::deserialize (294 samples, 39.89%)</title><rect x="37.2" y="821" width="470.7" height="15.0" fill="rgb(231,167,36)" rx="2" ry="2" />
<text  x="40.22" y="831.5" >cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 1.22%)</title><rect x="948.2" y="629" width="14.4" height="15.0" fill="rgb(227,133,6)" rx="2" ry="2" />
<text  x="951.24" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 1.09%)</title><rect x="949.8" y="597" width="12.8" height="15.0" fill="rgb(241,133,17)" rx="2" ry="2" />
<text  x="952.84" y="607.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="911.4" y="453" width="1.6" height="15.0" fill="rgb(211,125,8)" rx="2" ry="2" />
<text  x="914.41" y="463.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (87 samples, 11.80%)</title><rect x="112.5" y="773" width="139.3" height="15.0" fill="rgb(214,115,10)" rx="2" ry="2" />
<text  x="115.47" y="783.5" >&lt;serde_json::read..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.81%)</title><rect x="86.9" y="149" width="9.6" height="15.0" fill="rgb(224,172,50)" rx="2" ry="2" />
<text  x="89.85" y="159.5" ></text>
</g>
<g >
<title>core::fmt::write (155 samples, 21.03%)</title><rect x="714.5" y="725" width="248.1" height="15.0" fill="rgb(232,180,49)" rx="2" ry="2" />
<text  x="717.48" y="735.5" >core::fmt::write</text>
</g>
<g >
<title>[[kernel.kallsyms]] (41 samples, 5.56%)</title><rect x="632.8" y="341" width="65.7" height="15.0" fill="rgb(210,163,29)" rx="2" ry="2" />
<text  x="635.82" y="351.5" >[[kerne..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="724.1" y="517" width="1.6" height="15.0" fill="rgb(234,121,40)" rx="2" ry="2" />
<text  x="727.08" y="527.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.27%)</title><rect x="378.2" y="661" width="3.3" height="15.0" fill="rgb(208,225,16)" rx="2" ry="2" />
<text  x="381.25" y="671.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (23 samples, 3.12%)</title><rect x="509.5" y="789" width="36.9" height="15.0" fill="rgb(205,5,5)" rx="2" ry="2" />
<text  x="512.54" y="799.5" >std..</text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="1188.4" y="789" width="1.6" height="15.0" fill="rgb(224,130,54)" rx="2" ry="2" />
<text  x="1191.40" y="799.5" ></text>
</g>
<g >
<title>serde_json::read::next_or_eof (49 samples, 6.65%)</title><rect x="173.3" y="757" width="78.5" height="15.0" fill="rgb(230,33,39)" rx="2" ry="2" />
<text  x="176.31" y="767.5" >serde_jso..</text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="911.4" y="469" width="1.6" height="15.0" fill="rgb(234,14,46)" rx="2" ry="2" />
<text  x="914.41" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="738.5" y="597" width="1.6" height="15.0" fill="rgb(240,155,5)" rx="2" ry="2" />
<text  x="741.49" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="375.0" y="677" width="1.6" height="15.0" fill="rgb(250,137,48)" rx="2" ry="2" />
<text  x="378.05" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="40.4" y="677" width="1.6" height="15.0" fill="rgb(206,67,36)" rx="2" ry="2" />
<text  x="43.42" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (4 samples, 0.54%)</title><rect x="977.1" y="693" width="6.4" height="15.0" fill="rgb(247,141,22)" rx="2" ry="2" />
<text  x="980.06" y="703.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.14%)</title><rect x="921.0" y="453" width="1.6" height="15.0" fill="rgb(220,5,9)" rx="2" ry="2" />
<text  x="924.02" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="309" width="1.6" height="15.0" fill="rgb(235,46,22)" rx="2" ry="2" />
<text  x="1191.40" y="319.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="901.8" y="597" width="3.2" height="15.0" fill="rgb(246,58,49)" rx="2" ry="2" />
<text  x="904.80" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (95 samples, 12.89%)</title><rect x="746.5" y="501" width="152.1" height="15.0" fill="rgb(210,83,43)" rx="2" ry="2" />
<text  x="749.50" y="511.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="724.1" y="597" width="1.6" height="15.0" fill="rgb(237,70,38)" rx="2" ry="2" />
<text  x="727.08" y="607.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.14%)</title><rect x="96.5" y="197" width="1.6" height="15.0" fill="rgb(219,192,7)" rx="2" ry="2" />
<text  x="99.46" y="207.5" ></text>
</g>
<g >
<title>__libc_send (1 samples, 0.14%)</title><rect x="1188.4" y="741" width="1.6" height="15.0" fill="rgb(253,15,24)" rx="2" ry="2" />
<text  x="1191.40" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="677" width="1.6" height="15.0" fill="rgb(234,220,7)" rx="2" ry="2" />
<text  x="1004.07" y="687.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.27%)</title><rect x="986.7" y="773" width="3.2" height="15.0" fill="rgb(232,208,11)" rx="2" ry="2" />
<text  x="989.66" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new (1 samples, 0.14%)</title><rect x="1002.7" y="773" width="1.6" height="15.0" fill="rgb(216,35,33)" rx="2" ry="2" />
<text  x="1005.67" y="783.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::parallel::ConcurrentHashTable::get (8 samples, 1.09%)</title><rect x="16.4" y="821" width="12.8" height="15.0" fill="rgb(217,59,53)" rx="2" ry="2" />
<text  x="19.40" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="693" width="1.6" height="15.0" fill="rgb(225,174,37)" rx="2" ry="2" />
<text  x="1189.80" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="629" width="1.6" height="15.0" fill="rgb(208,128,20)" rx="2" ry="2" />
<text  x="1191.40" y="639.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (2 samples, 0.27%)</title><rect x="969.1" y="645" width="3.2" height="15.0" fill="rgb(231,132,30)" rx="2" ry="2" />
<text  x="972.05" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.14%)</title><rect x="898.6" y="613" width="1.6" height="15.0" fill="rgb(243,123,43)" rx="2" ry="2" />
<text  x="901.60" y="623.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (160 samples, 21.71%)</title><rect x="712.9" y="757" width="256.2" height="15.0" fill="rgb(211,162,9)" rx="2" ry="2" />
<text  x="715.88" y="767.5" >&lt;std::io::stdio::Stdout as std::io..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 2.17%)</title><rect x="72.4" y="389" width="25.7" height="15.0" fill="rgb(209,20,22)" rx="2" ry="2" />
<text  x="75.44" y="399.5" >[..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.27%)</title><rect x="738.5" y="613" width="3.2" height="15.0" fill="rgb(229,86,0)" rx="2" ry="2" />
<text  x="741.49" y="623.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.68%)</title><rect x="927.4" y="629" width="8.0" height="15.0" fill="rgb(232,143,8)" rx="2" ry="2" />
<text  x="930.42" y="639.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="906.6" y="549" width="1.6" height="15.0" fill="rgb(244,104,22)" rx="2" ry="2" />
<text  x="909.61" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="725" width="1.6" height="15.0" fill="rgb(242,126,44)" rx="2" ry="2" />
<text  x="1005.67" y="735.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="736.9" y="549" width="1.6" height="15.0" fill="rgb(219,66,19)" rx="2" ry="2" />
<text  x="739.89" y="559.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 1.09%)</title><rect x="384.7" y="789" width="12.8" height="15.0" fill="rgb(226,135,10)" rx="2" ry="2" />
<text  x="387.65" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 1.49%)</title><rect x="477.5" y="309" width="17.6" height="15.0" fill="rgb(216,108,7)" rx="2" ry="2" />
<text  x="480.52" y="319.5" ></text>
</g>
<g >
<title>&lt;std::net::ip::Ipv4Addr as core::fmt::Display&gt;::fmt (7 samples, 0.95%)</title><rect x="913.0" y="501" width="11.2" height="15.0" fill="rgb(248,109,25)" rx="2" ry="2" />
<text  x="916.01" y="511.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (121 samples, 16.42%)</title><rect x="993.1" y="869" width="193.7" height="15.0" fill="rgb(251,62,32)" rx="2" ry="2" />
<text  x="996.07" y="879.5" >std::panicking::try::do_c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="93.3" y="85" width="3.2" height="15.0" fill="rgb(245,74,16)" rx="2" ry="2" />
<text  x="96.26" y="95.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (1 samples, 0.14%)</title><rect x="991.5" y="837" width="1.6" height="15.0" fill="rgb(242,167,14)" rx="2" ry="2" />
<text  x="994.47" y="847.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (98 samples, 13.30%)</title><rect x="741.7" y="549" width="156.9" height="15.0" fill="rgb(251,139,19)" rx="2" ry="2" />
<text  x="744.70" y="559.5" >std::sys::unix::fd::..</text>
</g>
<g >
<title>std::sys_common::thread_info::current_thread (2 samples, 0.27%)</title><rect x="986.7" y="805" width="3.2" height="15.0" fill="rgb(236,142,21)" rx="2" ry="2" />
<text  x="989.66" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="893.8" y="357" width="4.8" height="15.0" fill="rgb(240,76,11)" rx="2" ry="2" />
<text  x="896.80" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (12 samples, 1.63%)</title><rect x="908.2" y="581" width="19.2" height="15.0" fill="rgb(217,188,8)" rx="2" ry="2" />
<text  x="911.21" y="591.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (1 samples, 0.14%)</title><rect x="700.1" y="437" width="1.6" height="15.0" fill="rgb(207,134,19)" rx="2" ry="2" />
<text  x="703.07" y="447.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::debug_tuple (1 samples, 0.14%)</title><rect x="719.3" y="693" width="1.6" height="15.0" fill="rgb(218,1,21)" rx="2" ry="2" />
<text  x="722.28" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (79 samples, 10.72%)</title><rect x="772.1" y="405" width="126.5" height="15.0" fill="rgb(244,58,53)" rx="2" ry="2" />
<text  x="775.12" y="415.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>getsockname (11 samples, 1.49%)</title><rect x="945.0" y="645" width="17.6" height="15.0" fill="rgb(207,66,14)" rx="2" ry="2" />
<text  x="948.03" y="655.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugStruct::field::_$u7b$$u7b$closure$u7d$$u7d$::h3b01fba9667c3f0c (19 samples, 2.58%)</title><rect x="905.0" y="661" width="30.4" height="15.0" fill="rgb(248,11,12)" rx="2" ry="2" />
<text  x="908.01" y="671.5" >co..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 1.36%)</title><rect x="82.0" y="245" width="16.1" height="15.0" fill="rgb(230,179,10)" rx="2" ry="2" />
<text  x="85.05" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (2 samples, 0.27%)</title><rect x="378.2" y="693" width="3.3" height="15.0" fill="rgb(247,98,48)" rx="2" ry="2" />
<text  x="381.25" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::ReentrantMutex::lock (4 samples, 0.54%)</title><rect x="962.6" y="709" width="6.5" height="15.0" fill="rgb(224,3,34)" rx="2" ry="2" />
<text  x="965.65" y="719.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugStruct::finish::_$u7b$$u7b$closure$u7d$$u7d$::h88bc6c44697adc70 (1 samples, 0.14%)</title><rect x="935.4" y="661" width="1.6" height="15.0" fill="rgb(214,10,36)" rx="2" ry="2" />
<text  x="938.43" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30 samples, 4.07%)</title><rect x="200.5" y="645" width="48.1" height="15.0" fill="rgb(254,44,10)" rx="2" ry="2" />
<text  x="203.53" y="655.5" >[[ke..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="133" width="1.6" height="15.0" fill="rgb(227,68,44)" rx="2" ry="2" />
<text  x="1191.40" y="143.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (170 samples, 23.07%)</title><rect x="711.3" y="789" width="272.2" height="15.0" fill="rgb(250,202,36)" rx="2" ry="2" />
<text  x="714.28" y="799.5" >std::thread::local::LocalKey&lt;T&gt;::try..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 1.22%)</title><rect x="234.2" y="549" width="14.4" height="15.0" fill="rgb(214,137,1)" rx="2" ry="2" />
<text  x="237.15" y="559.5" ></text>
</g>
<g >
<title>__read_nocancel (1 samples, 0.14%)</title><rect x="1186.8" y="821" width="1.6" height="15.0" fill="rgb(228,21,16)" rx="2" ry="2" />
<text  x="1189.80" y="831.5" ></text>
</g>
<g >
<title>clone (612 samples, 83.04%)</title><rect x="10.0" y="981" width="979.9" height="15.0" fill="rgb(250,77,53)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >clone</text>
</g>
<g >
<title>std::panicking::try (121 samples, 16.42%)</title><rect x="993.1" y="901" width="193.7" height="15.0" fill="rgb(208,162,21)" rx="2" ry="2" />
<text  x="996.07" y="911.5" >std::panicking::try</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="93.3" y="101" width="3.2" height="15.0" fill="rgb(241,24,22)" rx="2" ry="2" />
<text  x="96.26" y="111.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.14%)</title><rect x="1186.8" y="901" width="1.6" height="15.0" fill="rgb(233,114,44)" rx="2" ry="2" />
<text  x="1189.80" y="911.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (40 samples, 5.43%)</title><rect x="42.0" y="725" width="64.1" height="15.0" fill="rgb(210,55,33)" rx="2" ry="2" />
<text  x="45.02" y="735.5" >std::sy..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.27%)</title><rect x="381.5" y="757" width="3.2" height="15.0" fill="rgb(224,180,34)" rx="2" ry="2" />
<text  x="384.45" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="379.9" y="565" width="1.6" height="15.0" fill="rgb(238,226,13)" rx="2" ry="2" />
<text  x="382.85" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="474.3" y="389" width="20.8" height="15.0" fill="rgb(248,197,9)" rx="2" ry="2" />
<text  x="477.31" y="399.5" ></text>
</g>
<g >
<title>__libc_recv (6 samples, 0.81%)</title><rect x="387.9" y="677" width="9.6" height="15.0" fill="rgb(233,120,53)" rx="2" ry="2" />
<text  x="390.86" y="687.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::field::_$u7b$$u7b$closure$u7d$$u7d$::h12b878fe9fc55756 (6 samples, 0.81%)</title><rect x="720.9" y="661" width="9.6" height="15.0" fill="rgb(221,214,8)" rx="2" ry="2" />
<text  x="723.88" y="671.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="906.6" y="469" width="1.6" height="15.0" fill="rgb(205,126,22)" rx="2" ry="2" />
<text  x="909.61" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (46 samples, 6.24%)</title><rect x="178.1" y="693" width="73.7" height="15.0" fill="rgb(237,229,1)" rx="2" ry="2" />
<text  x="181.11" y="703.5" >std::sys..</text>
</g>
<g >
<title>std::memchr::memrchr (1 samples, 0.14%)</title><rect x="906.6" y="517" width="1.6" height="15.0" fill="rgb(210,75,20)" rx="2" ry="2" />
<text  x="909.61" y="527.5" ></text>
</g>
<g >
<title>std::thread::Thread::name (1 samples, 0.14%)</title><rect x="985.1" y="821" width="1.6" height="15.0" fill="rgb(206,130,4)" rx="2" ry="2" />
<text  x="988.06" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41 samples, 5.56%)</title><rect x="632.8" y="357" width="65.7" height="15.0" fill="rgb(223,150,49)" rx="2" ry="2" />
<text  x="635.82" y="367.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="597" width="1.6" height="15.0" fill="rgb(238,84,16)" rx="2" ry="2" />
<text  x="1004.07" y="607.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (156 samples, 21.17%)</title><rect x="712.9" y="741" width="249.7" height="15.0" fill="rgb(227,175,18)" rx="2" ry="2" />
<text  x="715.88" y="751.5" >std::io::Write::write_fmt</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="40.4" y="693" width="1.6" height="15.0" fill="rgb(216,219,0)" rx="2" ry="2" />
<text  x="43.42" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="1005.9" y="661" width="3.2" height="15.0" fill="rgb(243,95,5)" rx="2" ry="2" />
<text  x="1008.88" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (66 samples, 8.96%)</title><rect x="792.9" y="373" width="105.7" height="15.0" fill="rgb(234,51,10)" rx="2" ry="2" />
<text  x="795.93" y="383.5" >[[kernel.kal..</text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="544.8" y="725" width="1.6" height="15.0" fill="rgb(219,36,6)" rx="2" ry="2" />
<text  x="547.76" y="735.5" ></text>
</g>
<g >
<title>_IO_file_underflow (1 samples, 0.14%)</title><rect x="1186.8" y="837" width="1.6" height="15.0" fill="rgb(249,71,7)" rx="2" ry="2" />
<text  x="1189.80" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26 samples, 3.53%)</title><rect x="463.1" y="485" width="41.6" height="15.0" fill="rgb(243,21,17)" rx="2" ry="2" />
<text  x="466.11" y="495.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 2.04%)</title><rect x="471.1" y="421" width="24.0" height="15.0" fill="rgb(209,33,5)" rx="2" ry="2" />
<text  x="474.11" y="431.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 3.26%)</title><rect x="660.0" y="149" width="38.5" height="15.0" fill="rgb(216,153,26)" rx="2" ry="2" />
<text  x="663.04" y="159.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 6.78%)</title><rect x="424.7" y="677" width="80.0" height="15.0" fill="rgb(252,164,9)" rx="2" ry="2" />
<text  x="427.68" y="687.5" >[[kernel...</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (103 samples, 13.98%)</title><rect x="546.4" y="773" width="164.9" height="15.0" fill="rgb(223,167,0)" rx="2" ry="2" />
<text  x="549.36" y="783.5" >std::sys_common::net:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (77 samples, 10.45%)</title><rect x="1060.3" y="709" width="123.3" height="15.0" fill="rgb(219,174,50)" rx="2" ry="2" />
<text  x="1063.31" y="719.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 1.90%)</title><rect x="522.3" y="677" width="22.5" height="15.0" fill="rgb(222,203,50)" rx="2" ry="2" />
<text  x="525.35" y="687.5" >[..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="972.3" y="725" width="1.6" height="15.0" fill="rgb(248,91,36)" rx="2" ry="2" />
<text  x="975.25" y="735.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::debug_tuple (1 samples, 0.14%)</title><rect x="732.1" y="693" width="1.6" height="15.0" fill="rgb(216,143,34)" rx="2" ry="2" />
<text  x="735.09" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.27%)</title><rect x="973.9" y="693" width="3.2" height="15.0" fill="rgb(236,218,26)" rx="2" ry="2" />
<text  x="976.85" y="703.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (1 samples, 0.14%)</title><rect x="991.5" y="869" width="1.6" height="15.0" fill="rgb(249,21,5)" rx="2" ry="2" />
<text  x="994.47" y="879.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (611 samples, 82.90%)</title><rect x="11.6" y="853" width="978.3" height="15.0" fill="rgb(207,228,24)" rx="2" ry="2" />
<text  x="14.60" y="863.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::peer_addr (5 samples, 0.68%)</title><rect x="937.0" y="693" width="8.0" height="15.0" fill="rgb(207,41,13)" rx="2" ry="2" />
<text  x="940.03" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="645" width="1.6" height="15.0" fill="rgb(248,4,39)" rx="2" ry="2" />
<text  x="1191.40" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.68%)</title><rect x="400.7" y="613" width="8.0" height="15.0" fill="rgb(223,166,30)" rx="2" ry="2" />
<text  x="403.66" y="623.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="40.4" y="725" width="1.6" height="15.0" fill="rgb(221,19,26)" rx="2" ry="2" />
<text  x="43.42" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::net::sockname (5 samples, 0.68%)</title><rect x="937.0" y="677" width="8.0" height="15.0" fill="rgb(247,21,53)" rx="2" ry="2" />
<text  x="940.03" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="639.2" y="261" width="59.3" height="15.0" fill="rgb(205,196,54)" rx="2" ry="2" />
<text  x="642.23" y="271.5" >[[kern..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.81%)</title><rect x="720.9" y="677" width="9.6" height="15.0" fill="rgb(227,92,7)" rx="2" ry="2" />
<text  x="723.88" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="394.3" y="661" width="3.2" height="15.0" fill="rgb(233,219,33)" rx="2" ry="2" />
<text  x="397.26" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="661" width="1.6" height="15.0" fill="rgb(248,143,41)" rx="2" ry="2" />
<text  x="1005.67" y="671.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (46 samples, 6.24%)</title><rect x="178.1" y="709" width="73.7" height="15.0" fill="rgb(232,123,24)" rx="2" ry="2" />
<text  x="181.11" y="719.5" >std::sys..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 1.63%)</title><rect x="475.9" y="341" width="19.2" height="15.0" fill="rgb(219,149,38)" rx="2" ry="2" />
<text  x="478.92" y="351.5" ></text>
</g>
<g >
<title>__libc_thread_freeres (1 samples, 0.14%)</title><rect x="10.0" y="949" width="1.6" height="15.0" fill="rgb(219,2,18)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>clone (1 samples, 0.14%)</title><rect x="1188.4" y="981" width="1.6" height="15.0" fill="rgb(246,16,34)" rx="2" ry="2" />
<text  x="1191.40" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29 samples, 3.93%)</title><rect x="652.0" y="197" width="46.5" height="15.0" fill="rgb(234,223,42)" rx="2" ry="2" />
<text  x="655.04" y="207.5" >[[ke..</text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.41%)</title><rect x="371.8" y="789" width="4.8" height="15.0" fill="rgb(240,131,28)" rx="2" ry="2" />
<text  x="374.85" y="799.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="722.5" y="597" width="1.6" height="15.0" fill="rgb(245,11,29)" rx="2" ry="2" />
<text  x="725.48" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (94 samples, 12.75%)</title><rect x="560.8" y="709" width="150.5" height="15.0" fill="rgb(217,190,18)" rx="2" ry="2" />
<text  x="563.77" y="719.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>cse403_distributed_hash_table::parallel::ConcurrentHashTable::new (3 samples, 0.41%)</title><rect x="1004.3" y="805" width="4.8" height="15.0" fill="rgb(206,92,41)" rx="2" ry="2" />
<text  x="1007.27" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 8.14%)</title><rect x="267.8" y="661" width="96.0" height="15.0" fill="rgb(234,159,18)" rx="2" ry="2" />
<text  x="270.77" y="671.5" >[[kernel.ka..</text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_lock (4 samples, 0.54%)</title><rect x="977.1" y="709" width="6.4" height="15.0" fill="rgb(237,69,3)" rx="2" ry="2" />
<text  x="980.06" y="719.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.27%)</title><rect x="969.1" y="709" width="3.2" height="15.0" fill="rgb(214,162,25)" rx="2" ry="2" />
<text  x="972.05" y="719.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 5.43%)</title><rect x="42.0" y="757" width="64.1" height="15.0" fill="rgb(222,196,14)" rx="2" ry="2" />
<text  x="45.02" y="767.5" >&lt;&amp;std::..</text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (60 samples, 8.14%)</title><rect x="411.9" y="757" width="96.0" height="15.0" fill="rgb(224,4,19)" rx="2" ry="2" />
<text  x="414.87" y="767.5" >std::sys::u..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (94 samples, 12.75%)</title><rect x="748.1" y="453" width="150.5" height="15.0" fill="rgb(248,39,35)" rx="2" ry="2" />
<text  x="751.10" y="463.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="722.5" y="581" width="1.6" height="15.0" fill="rgb(253,186,28)" rx="2" ry="2" />
<text  x="725.48" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 3.12%)</title><rect x="69.2" y="469" width="36.9" height="15.0" fill="rgb(209,10,45)" rx="2" ry="2" />
<text  x="72.24" y="479.5" >[[k..</text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="935.4" y="629" width="1.6" height="15.0" fill="rgb(246,81,1)" rx="2" ry="2" />
<text  x="938.43" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="541.6" y="549" width="3.2" height="15.0" fill="rgb(249,205,32)" rx="2" ry="2" />
<text  x="544.56" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40 samples, 5.43%)</title><rect x="634.4" y="309" width="64.1" height="15.0" fill="rgb(210,143,46)" rx="2" ry="2" />
<text  x="637.42" y="319.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 4.75%)</title><rect x="307.8" y="549" width="56.0" height="15.0" fill="rgb(232,102,45)" rx="2" ry="2" />
<text  x="310.80" y="559.5" >[[ker..</text>
</g>
<g >
<title>std::memchr::memrchr (1 samples, 0.14%)</title><rect x="724.1" y="565" width="1.6" height="15.0" fill="rgb(218,71,16)" rx="2" ry="2" />
<text  x="727.08" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="629" width="1.6" height="15.0" fill="rgb(231,98,21)" rx="2" ry="2" />
<text  x="398.86" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46 samples, 6.24%)</title><rect x="624.8" y="437" width="73.7" height="15.0" fill="rgb(240,135,45)" rx="2" ry="2" />
<text  x="627.82" y="447.5" >[[kernel..</text>
</g>
<g >
<title>ipv4_conntrack_local (4 samples, 0.54%)</title><rect x="700.1" y="469" width="6.4" height="15.0" fill="rgb(205,97,54)" rx="2" ry="2" />
<text  x="703.07" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 3.39%)</title><rect x="658.4" y="181" width="40.1" height="15.0" fill="rgb(241,186,0)" rx="2" ry="2" />
<text  x="661.44" y="191.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="403.9" y="565" width="4.8" height="15.0" fill="rgb(219,82,1)" rx="2" ry="2" />
<text  x="406.87" y="575.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (2 samples, 0.27%)</title><rect x="378.2" y="773" width="3.3" height="15.0" fill="rgb(212,127,20)" rx="2" ry="2" />
<text  x="381.25" y="783.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.14%)</title><rect x="1001.1" y="789" width="1.6" height="15.0" fill="rgb(240,177,30)" rx="2" ry="2" />
<text  x="1004.07" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.41%)</title><rect x="371.8" y="773" width="4.8" height="15.0" fill="rgb(225,46,38)" rx="2" ry="2" />
<text  x="374.85" y="783.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (102 samples, 13.84%)</title><rect x="738.5" y="709" width="163.3" height="15.0" fill="rgb(220,206,21)" rx="2" ry="2" />
<text  x="741.49" y="719.5" >&lt;std::io::Write::writ..</text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (1 samples, 0.14%)</title><rect x="736.9" y="501" width="1.6" height="15.0" fill="rgb(243,7,34)" rx="2" ry="2" />
<text  x="739.89" y="511.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="911.4" y="501" width="1.6" height="15.0" fill="rgb(217,229,25)" rx="2" ry="2" />
<text  x="914.41" y="511.5" ></text>
</g>
<g >
<title>__rdl_alloc (4 samples, 0.54%)</title><rect x="154.1" y="741" width="6.4" height="15.0" fill="rgb(228,14,18)" rx="2" ry="2" />
<text  x="157.10" y="751.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.27%)</title><rect x="901.8" y="533" width="3.2" height="15.0" fill="rgb(212,203,36)" rx="2" ry="2" />
<text  x="904.80" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.27%)</title><rect x="973.9" y="677" width="3.2" height="15.0" fill="rgb(222,144,41)" rx="2" ry="2" />
<text  x="976.85" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="490.3" y="133" width="1.6" height="15.0" fill="rgb(218,210,14)" rx="2" ry="2" />
<text  x="493.33" y="143.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.14%)</title><rect x="29.2" y="805" width="1.6" height="15.0" fill="rgb(217,101,23)" rx="2" ry="2" />
<text  x="32.21" y="815.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::tuple_variant (20 samples, 2.71%)</title><rect x="376.6" y="805" width="32.1" height="15.0" fill="rgb(245,133,22)" rx="2" ry="2" />
<text  x="379.65" y="815.5" >&lt;s..</text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::barrier_broadcast (1 samples, 0.14%)</title><rect x="1188.4" y="821" width="1.6" height="15.0" fill="rgb(226,214,42)" rx="2" ry="2" />
<text  x="1191.40" y="831.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.14%)</title><rect x="988.3" y="709" width="1.6" height="15.0" fill="rgb(244,84,21)" rx="2" ry="2" />
<text  x="991.26" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="1005.9" y="693" width="3.2" height="15.0" fill="rgb(213,181,40)" rx="2" ry="2" />
<text  x="1008.88" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36 samples, 4.88%)</title><rect x="447.1" y="549" width="57.6" height="15.0" fill="rgb(250,167,53)" rx="2" ry="2" />
<text  x="450.10" y="559.5" >[[kern..</text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (2 samples, 0.27%)</title><rect x="901.8" y="565" width="3.2" height="15.0" fill="rgb(233,139,21)" rx="2" ry="2" />
<text  x="904.80" y="575.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (611 samples, 82.90%)</title><rect x="11.6" y="933" width="978.3" height="15.0" fill="rgb(236,213,39)" rx="2" ry="2" />
<text  x="14.60" y="943.5" >std::sys_common::thread::start_thread</text>
</g>
<g >
<title>[[kernel.kallsyms]] (44 samples, 5.97%)</title><rect x="434.3" y="597" width="70.4" height="15.0" fill="rgb(216,49,42)" rx="2" ry="2" />
<text  x="437.29" y="607.5" >[[kerne..</text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="901.8" y="613" width="3.2" height="15.0" fill="rgb(241,162,3)" rx="2" ry="2" />
<text  x="904.80" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 2.44%)</title><rect x="515.9" y="725" width="28.9" height="15.0" fill="rgb(220,27,34)" rx="2" ry="2" />
<text  x="518.94" y="735.5" >[[..</text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="913.0" y="421" width="1.6" height="15.0" fill="rgb(226,119,11)" rx="2" ry="2" />
<text  x="916.01" y="431.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (121 samples, 16.42%)</title><rect x="993.1" y="885" width="193.7" height="15.0" fill="rgb(247,114,40)" rx="2" ry="2" />
<text  x="996.07" y="895.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.54%)</title><rect x="242.2" y="517" width="6.4" height="15.0" fill="rgb(244,220,38)" rx="2" ry="2" />
<text  x="245.16" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="549" width="1.6" height="15.0" fill="rgb(246,72,54)" rx="2" ry="2" />
<text  x="1191.40" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="693" width="1.6" height="15.0" fill="rgb(209,91,5)" rx="2" ry="2" />
<text  x="1191.40" y="703.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (101 samples, 13.70%)</title><rect x="738.5" y="677" width="161.7" height="15.0" fill="rgb(230,153,11)" rx="2" ry="2" />
<text  x="741.49" y="687.5" >&lt;std::io::stdio::Std..</text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::CommandResponse as core::fmt::Debug&gt;::fmt (4 samples, 0.54%)</title><rect x="732.1" y="709" width="6.4" height="15.0" fill="rgb(232,189,46)" rx="2" ry="2" />
<text  x="735.09" y="719.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (1 samples, 0.14%)</title><rect x="991.5" y="853" width="1.6" height="15.0" fill="rgb(253,229,8)" rx="2" ry="2" />
<text  x="994.47" y="863.5" ></text>
</g>
<g >
<title>core::fmt::write (5 samples, 0.68%)</title><rect x="916.2" y="469" width="8.0" height="15.0" fill="rgb(244,175,43)" rx="2" ry="2" />
<text  x="919.21" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (71 samples, 9.63%)</title><rect x="258.2" y="725" width="113.6" height="15.0" fill="rgb(221,172,19)" rx="2" ry="2" />
<text  x="261.17" y="735.5" >std::sys::unix..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (27 samples, 3.66%)</title><rect x="62.8" y="501" width="43.3" height="15.0" fill="rgb(213,97,21)" rx="2" ry="2" />
<text  x="65.84" y="511.5" >[[ke..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (93 samples, 12.62%)</title><rect x="749.7" y="437" width="148.9" height="15.0" fill="rgb(222,222,42)" rx="2" ry="2" />
<text  x="752.70" y="447.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (24 samples, 3.26%)</title><rect x="67.6" y="485" width="38.5" height="15.0" fill="rgb(212,14,28)" rx="2" ry="2" />
<text  x="70.64" y="495.5" >[[k..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (23 samples, 3.12%)</title><rect x="509.5" y="757" width="36.9" height="15.0" fill="rgb(221,183,37)" rx="2" ry="2" />
<text  x="512.54" y="767.5" >std..</text>
</g>
<g >
<title>std::io::stdio::print_to::_$u7b$$u7b$closure$u7d$$u7d$::h1d47eeacce4d7020 (170 samples, 23.07%)</title><rect x="711.3" y="773" width="272.2" height="15.0" fill="rgb(252,22,50)" rx="2" ry="2" />
<text  x="714.28" y="783.5" >std::io::stdio::print_to::_$u7b$$u7b..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="453" width="1.6" height="15.0" fill="rgb(210,78,5)" rx="2" ry="2" />
<text  x="1191.40" y="463.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal (122 samples, 16.55%)</title><rect x="993.1" y="933" width="195.3" height="15.0" fill="rgb(232,41,12)" rx="2" ry="2" />
<text  x="996.07" y="943.5" >std::rt::lang_start_inter..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="245" width="1.6" height="15.0" fill="rgb(242,98,40)" rx="2" ry="2" />
<text  x="1191.40" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="565" width="1.6" height="15.0" fill="rgb(222,74,47)" rx="2" ry="2" />
<text  x="398.86" y="575.5" ></text>
</g>
<g >
<title>realloc (5 samples, 0.68%)</title><rect x="162.1" y="741" width="8.0" height="15.0" fill="rgb(248,223,21)" rx="2" ry="2" />
<text  x="165.10" y="751.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="10.0" y="933" width="1.6" height="15.0" fill="rgb(217,172,5)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38 samples, 5.16%)</title><rect x="637.6" y="277" width="60.9" height="15.0" fill="rgb(244,6,15)" rx="2" ry="2" />
<text  x="640.63" y="287.5" >[[kern..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="247.0" y="501" width="1.6" height="15.0" fill="rgb(228,161,15)" rx="2" ry="2" />
<text  x="249.96" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (4 samples, 0.54%)</title><rect x="962.6" y="725" width="6.5" height="15.0" fill="rgb(233,171,38)" rx="2" ry="2" />
<text  x="965.65" y="735.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 6.51%)</title><rect x="174.9" y="741" width="76.9" height="15.0" fill="rgb(218,83,35)" rx="2" ry="2" />
<text  x="177.91" y="751.5" >&lt;std::io..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (73 samples, 9.91%)</title><rect x="1066.7" y="693" width="116.9" height="15.0" fill="rgb(233,134,27)" rx="2" ry="2" />
<text  x="1069.72" y="703.5" >[[kernel.kalls..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (49 samples, 6.65%)</title><rect x="285.4" y="597" width="78.4" height="15.0" fill="rgb(242,19,18)" rx="2" ry="2" />
<text  x="288.39" y="607.5" >[[kernel...</text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 5.43%)</title><rect x="42.0" y="709" width="64.1" height="15.0" fill="rgb(236,21,19)" rx="2" ry="2" />
<text  x="45.02" y="719.5" >std::sy..</text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.14%)</title><rect x="720.9" y="645" width="1.6" height="15.0" fill="rgb(219,42,25)" rx="2" ry="2" />
<text  x="723.88" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26 samples, 3.53%)</title><rect x="463.1" y="501" width="41.6" height="15.0" fill="rgb(236,10,29)" rx="2" ry="2" />
<text  x="466.11" y="511.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="661" width="1.6" height="15.0" fill="rgb(239,100,2)" rx="2" ry="2" />
<text  x="1191.40" y="671.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::field::_$u7b$$u7b$closure$u7d$$u7d$::h12b878fe9fc55756 (3 samples, 0.41%)</title><rect x="733.7" y="661" width="4.8" height="15.0" fill="rgb(224,141,54)" rx="2" ry="2" />
<text  x="736.69" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="437" width="1.6" height="15.0" fill="rgb(207,99,4)" rx="2" ry="2" />
<text  x="1191.40" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 2.71%)</title><rect x="331.8" y="517" width="32.0" height="15.0" fill="rgb(249,49,32)" rx="2" ry="2" />
<text  x="334.82" y="527.5" >[[..</text>
</g>
<g >
<title>start_thread (1 samples, 0.14%)</title><rect x="1188.4" y="965" width="1.6" height="15.0" fill="rgb(210,22,22)" rx="2" ry="2" />
<text  x="1191.40" y="975.5" ></text>
</g>
<g >
<title>std::thread::Thread::cname (1 samples, 0.14%)</title><rect x="985.1" y="805" width="1.6" height="15.0" fill="rgb(253,187,11)" rx="2" ry="2" />
<text  x="988.06" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="741" width="1.6" height="15.0" fill="rgb(213,194,17)" rx="2" ry="2" />
<text  x="1004.07" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30 samples, 4.07%)</title><rect x="200.5" y="629" width="48.1" height="15.0" fill="rgb(248,198,43)" rx="2" ry="2" />
<text  x="203.53" y="639.5" >[[ke..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 1.22%)</title><rect x="82.0" y="213" width="14.5" height="15.0" fill="rgb(235,71,26)" rx="2" ry="2" />
<text  x="85.05" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (94 samples, 12.75%)</title><rect x="748.1" y="485" width="150.5" height="15.0" fill="rgb(234,202,12)" rx="2" ry="2" />
<text  x="751.10" y="495.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (44 samples, 5.97%)</title><rect x="628.0" y="389" width="70.5" height="15.0" fill="rgb(225,26,4)" rx="2" ry="2" />
<text  x="631.02" y="399.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (52 samples, 7.06%)</title><rect x="421.5" y="709" width="83.2" height="15.0" fill="rgb(211,15,25)" rx="2" ry="2" />
<text  x="424.48" y="719.5" >[[kernel...</text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 0.95%)</title><rect x="397.5" y="725" width="11.2" height="15.0" fill="rgb(214,15,14)" rx="2" ry="2" />
<text  x="400.46" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (6 samples, 0.81%)</title><rect x="387.9" y="725" width="9.6" height="15.0" fill="rgb(206,187,1)" rx="2" ry="2" />
<text  x="390.86" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="40.4" y="757" width="1.6" height="15.0" fill="rgb(205,226,37)" rx="2" ry="2" />
<text  x="43.42" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 6.38%)</title><rect x="429.5" y="629" width="75.2" height="15.0" fill="rgb(231,229,45)" rx="2" ry="2" />
<text  x="432.48" y="639.5" >[[kernel..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="961.0" y="533" width="1.6" height="15.0" fill="rgb(245,65,46)" rx="2" ry="2" />
<text  x="964.04" y="543.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="930.6" y="597" width="3.2" height="15.0" fill="rgb(221,51,52)" rx="2" ry="2" />
<text  x="933.62" y="607.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.27%)</title><rect x="1183.6" y="757" width="3.2" height="15.0" fill="rgb(226,139,15)" rx="2" ry="2" />
<text  x="1186.60" y="767.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (12 samples, 1.63%)</title><rect x="908.2" y="613" width="19.2" height="15.0" fill="rgb(217,7,0)" rx="2" ry="2" />
<text  x="911.21" y="623.5" ></text>
</g>
<g >
<title>__pthread_create_2_1 (1 samples, 0.14%)</title><rect x="1002.7" y="757" width="1.6" height="15.0" fill="rgb(252,227,0)" rx="2" ry="2" />
<text  x="1005.67" y="767.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.14%)</title><rect x="922.6" y="453" width="1.6" height="15.0" fill="rgb(237,120,40)" rx="2" ry="2" />
<text  x="925.62" y="463.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (60 samples, 8.14%)</title><rect x="411.9" y="773" width="96.0" height="15.0" fill="rgb(229,44,7)" rx="2" ry="2" />
<text  x="414.87" y="783.5" >std::sys_co..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="985.1" y="789" width="1.6" height="15.0" fill="rgb(247,46,6)" rx="2" ry="2" />
<text  x="988.06" y="799.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (19 samples, 2.58%)</title><rect x="905.0" y="677" width="30.4" height="15.0" fill="rgb(240,23,20)" rx="2" ry="2" />
<text  x="908.01" y="687.5" >co..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="645" width="59.3" height="15.0" fill="rgb(207,186,28)" rx="2" ry="2" />
<text  x="49.82" y="655.5" >[[kern..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="629" width="1.6" height="15.0" fill="rgb(215,52,6)" rx="2" ry="2" />
<text  x="1005.67" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="613" width="59.3" height="15.0" fill="rgb(235,189,29)" rx="2" ry="2" />
<text  x="49.82" y="623.5" >[[kern..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="740.1" y="597" width="1.6" height="15.0" fill="rgb(230,32,35)" rx="2" ry="2" />
<text  x="743.09" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="523.9" y="613" width="20.9" height="15.0" fill="rgb(222,157,9)" rx="2" ry="2" />
<text  x="526.95" y="623.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="248.6" y="645" width="1.6" height="15.0" fill="rgb(250,145,32)" rx="2" ry="2" />
<text  x="251.56" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="149" width="1.6" height="15.0" fill="rgb(250,168,19)" rx="2" ry="2" />
<text  x="1191.40" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.81%)</title><rect x="86.9" y="165" width="9.6" height="15.0" fill="rgb(209,205,38)" rx="2" ry="2" />
<text  x="89.85" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="677" width="59.3" height="15.0" fill="rgb(220,210,25)" rx="2" ry="2" />
<text  x="49.82" y="687.5" >[[kern..</text>
</g>
<g >
<title>std::sys_common::thread_info::current_thread::_$u7b$$u7b$closure$u7d$$u7d$::h04b35b2e7e380ad2 (1 samples, 0.14%)</title><rect x="983.5" y="805" width="1.6" height="15.0" fill="rgb(208,165,26)" rx="2" ry="2" />
<text  x="986.46" y="815.5" ></text>
</g>
<g >
<title>getpeername (5 samples, 0.68%)</title><rect x="937.0" y="645" width="8.0" height="15.0" fill="rgb(222,90,3)" rx="2" ry="2" />
<text  x="940.03" y="655.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::field (3 samples, 0.41%)</title><rect x="733.7" y="693" width="4.8" height="15.0" fill="rgb(228,169,14)" rx="2" ry="2" />
<text  x="736.69" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::thread_info::ThreadInfo::with::_$u7b$$u7b$closure$u7d$$u7d$::h6562354d74e299f9 (1 samples, 0.14%)</title><rect x="983.5" y="821" width="1.6" height="15.0" fill="rgb(217,156,48)" rx="2" ry="2" />
<text  x="986.46" y="831.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::field::_$u7b$$u7b$closure$u7d$$u7d$::h12b878fe9fc55756 (12 samples, 1.63%)</title><rect x="908.2" y="597" width="19.2" height="15.0" fill="rgb(208,205,32)" rx="2" ry="2" />
<text  x="911.21" y="607.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (41 samples, 5.56%)</title><rect x="40.4" y="805" width="65.7" height="15.0" fill="rgb(207,23,26)" rx="2" ry="2" />
<text  x="43.42" y="815.5" >&lt;core::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="645" width="1.6" height="15.0" fill="rgb(233,2,40)" rx="2" ry="2" />
<text  x="1005.67" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 1.09%)</title><rect x="949.8" y="565" width="12.8" height="15.0" fill="rgb(214,45,26)" rx="2" ry="2" />
<text  x="952.84" y="575.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h466eafb91b985aea (1 samples, 0.14%)</title><rect x="1188.4" y="885" width="1.6" height="15.0" fill="rgb(253,198,5)" rx="2" ry="2" />
<text  x="1191.40" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 1.09%)</title><rect x="949.8" y="581" width="12.8" height="15.0" fill="rgb(250,91,8)" rx="2" ry="2" />
<text  x="952.84" y="591.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (1 samples, 0.14%)</title><rect x="503.1" y="469" width="1.6" height="15.0" fill="rgb(209,157,9)" rx="2" ry="2" />
<text  x="506.13" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (60 samples, 8.14%)</title><rect x="411.9" y="741" width="96.0" height="15.0" fill="rgb(218,137,23)" rx="2" ry="2" />
<text  x="414.87" y="751.5" >std::sys::u..</text>
</g>
<g >
<title>ipv4_conntrack_local (4 samples, 0.54%)</title><rect x="98.1" y="421" width="6.4" height="15.0" fill="rgb(236,215,51)" rx="2" ry="2" />
<text  x="101.06" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="941.8" y="629" width="3.2" height="15.0" fill="rgb(239,29,13)" rx="2" ry="2" />
<text  x="944.83" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="661" width="59.3" height="15.0" fill="rgb(240,159,10)" rx="2" ry="2" />
<text  x="49.82" y="671.5" >[[kern..</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.27%)</title><rect x="913.0" y="485" width="3.2" height="15.0" fill="rgb(247,127,11)" rx="2" ry="2" />
<text  x="916.01" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="485" width="1.6" height="15.0" fill="rgb(247,159,3)" rx="2" ry="2" />
<text  x="1191.40" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="613" width="1.6" height="15.0" fill="rgb(249,209,2)" rx="2" ry="2" />
<text  x="1191.40" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48 samples, 6.51%)</title><rect x="287.0" y="581" width="76.8" height="15.0" fill="rgb(252,61,54)" rx="2" ry="2" />
<text  x="289.99" y="591.5" >[[kernel..</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="935.4" y="645" width="1.6" height="15.0" fill="rgb(240,117,3)" rx="2" ry="2" />
<text  x="938.43" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (46 samples, 6.24%)</title><rect x="178.1" y="677" width="73.7" height="15.0" fill="rgb(219,15,38)" rx="2" ry="2" />
<text  x="181.11" y="687.5" >std::sys..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="523.9" y="629" width="20.9" height="15.0" fill="rgb(218,155,30)" rx="2" ry="2" />
<text  x="526.95" y="639.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (2 samples, 0.27%)</title><rect x="989.9" y="965" width="3.2" height="15.0" fill="rgb(216,202,23)" rx="2" ry="2" />
<text  x="992.86" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="741" width="1.6" height="15.0" fill="rgb(207,189,11)" rx="2" ry="2" />
<text  x="1005.67" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52 samples, 7.06%)</title><rect x="421.5" y="693" width="83.2" height="15.0" fill="rgb(210,24,23)" rx="2" ry="2" />
<text  x="424.48" y="703.5" >[[kernel...</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="469" width="1.6" height="15.0" fill="rgb(207,10,9)" rx="2" ry="2" />
<text  x="1191.40" y="479.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.27%)</title><rect x="34.0" y="773" width="3.2" height="15.0" fill="rgb(226,91,24)" rx="2" ry="2" />
<text  x="37.02" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="394.3" y="645" width="3.2" height="15.0" fill="rgb(214,152,32)" rx="2" ry="2" />
<text  x="397.26" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.14%)</title><rect x="1186.8" y="885" width="1.6" height="15.0" fill="rgb(238,28,33)" rx="2" ry="2" />
<text  x="1189.80" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (95 samples, 12.89%)</title><rect x="559.2" y="741" width="152.1" height="15.0" fill="rgb(251,146,8)" rx="2" ry="2" />
<text  x="562.17" y="751.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.27%)</title><rect x="969.1" y="629" width="3.2" height="15.0" fill="rgb(221,1,46)" rx="2" ry="2" />
<text  x="972.05" y="639.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_SERIALIZE_FOR_CommandResponse::&lt;impl serde::ser::Serialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::serialize (127 samples, 17.23%)</title><rect x="507.9" y="821" width="203.4" height="15.0" fill="rgb(245,172,29)" rx="2" ry="2" />
<text  x="510.94" y="831.5" >cse403_distributed_hash_ta..</text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::raw (1 samples, 0.14%)</title><rect x="250.2" y="661" width="1.6" height="15.0" fill="rgb(212,193,49)" rx="2" ry="2" />
<text  x="253.16" y="671.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (1 samples, 0.14%)</title><rect x="1188.4" y="933" width="1.6" height="15.0" fill="rgb(235,122,1)" rx="2" ry="2" />
<text  x="1191.40" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="709" width="1.6" height="15.0" fill="rgb(237,198,21)" rx="2" ry="2" />
<text  x="1004.07" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (1 samples, 0.14%)</title><rect x="724.1" y="549" width="1.6" height="15.0" fill="rgb(223,175,38)" rx="2" ry="2" />
<text  x="727.08" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (5 samples, 0.68%)</title><rect x="376.6" y="789" width="8.1" height="15.0" fill="rgb(215,30,6)" rx="2" ry="2" />
<text  x="379.65" y="799.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.14%)</title><rect x="967.4" y="693" width="1.7" height="15.0" fill="rgb(232,178,43)" rx="2" ry="2" />
<text  x="970.45" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="523.9" y="661" width="20.9" height="15.0" fill="rgb(223,120,37)" rx="2" ry="2" />
<text  x="526.95" y="671.5" ></text>
</g>
<g >
<title>core::str::from_utf8 (2 samples, 0.27%)</title><rect x="170.1" y="757" width="3.2" height="15.0" fill="rgb(225,199,49)" rx="2" ry="2" />
<text  x="173.11" y="767.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugStruct::field (19 samples, 2.58%)</title><rect x="905.0" y="693" width="30.4" height="15.0" fill="rgb(251,46,52)" rx="2" ry="2" />
<text  x="908.01" y="703.5" >co..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.54%)</title><rect x="90.1" y="133" width="6.4" height="15.0" fill="rgb(239,226,34)" rx="2" ry="2" />
<text  x="93.05" y="143.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (2 samples, 0.27%)</title><rect x="491.9" y="277" width="3.2" height="15.0" fill="rgb(225,223,18)" rx="2" ry="2" />
<text  x="494.93" y="287.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (4 samples, 0.54%)</title><rect x="22.8" y="805" width="6.4" height="15.0" fill="rgb(223,166,48)" rx="2" ry="2" />
<text  x="25.81" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46 samples, 6.24%)</title><rect x="624.8" y="453" width="73.7" height="15.0" fill="rgb(213,178,51)" rx="2" ry="2" />
<text  x="627.82" y="463.5" >[[kernel..</text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.14%)</title><rect x="906.6" y="485" width="1.6" height="15.0" fill="rgb(248,160,38)" rx="2" ry="2" />
<text  x="909.61" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="375.0" y="693" width="1.6" height="15.0" fill="rgb(230,82,18)" rx="2" ry="2" />
<text  x="378.05" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 1.36%)</title><rect x="82.0" y="229" width="16.1" height="15.0" fill="rgb(252,16,2)" rx="2" ry="2" />
<text  x="85.05" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44 samples, 5.97%)</title><rect x="628.0" y="373" width="70.5" height="15.0" fill="rgb(242,140,14)" rx="2" ry="2" />
<text  x="631.02" y="383.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 1.36%)</title><rect x="82.0" y="293" width="16.1" height="15.0" fill="rgb(224,142,42)" rx="2" ry="2" />
<text  x="85.05" y="303.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.14%)</title><rect x="991.5" y="901" width="1.6" height="15.0" fill="rgb(230,170,39)" rx="2" ry="2" />
<text  x="994.47" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="94.9" y="69" width="1.6" height="15.0" fill="rgb(205,122,9)" rx="2" ry="2" />
<text  x="97.86" y="79.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write (2 samples, 0.27%)</title><rect x="738.5" y="629" width="3.2" height="15.0" fill="rgb(230,134,23)" rx="2" ry="2" />
<text  x="741.49" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40 samples, 5.43%)</title><rect x="634.4" y="293" width="64.1" height="15.0" fill="rgb(205,140,17)" rx="2" ry="2" />
<text  x="637.42" y="303.5" >[[kerne..</text>
</g>
<g >
<title>&lt;std::sys_common::mutex::MutexGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="973.9" y="709" width="3.2" height="15.0" fill="rgb(214,225,15)" rx="2" ry="2" />
<text  x="976.85" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="973.9" y="725" width="3.2" height="15.0" fill="rgb(251,184,42)" rx="2" ry="2" />
<text  x="976.85" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="969.1" y="757" width="3.2" height="15.0" fill="rgb(209,43,11)" rx="2" ry="2" />
<text  x="972.05" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28 samples, 3.80%)</title><rect x="459.9" y="517" width="44.8" height="15.0" fill="rgb(238,50,28)" rx="2" ry="2" />
<text  x="462.91" y="527.5" >[[ke..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="725" width="1.6" height="15.0" fill="rgb(223,69,40)" rx="2" ry="2" />
<text  x="1191.40" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="757" width="1.6" height="15.0" fill="rgb(226,29,28)" rx="2" ry="2" />
<text  x="1189.80" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (86 samples, 11.67%)</title><rect x="573.6" y="613" width="137.7" height="15.0" fill="rgb(239,157,33)" rx="2" ry="2" />
<text  x="576.58" y="623.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="959.4" y="549" width="3.2" height="15.0" fill="rgb(208,161,38)" rx="2" ry="2" />
<text  x="962.44" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23 samples, 3.12%)</title><rect x="466.3" y="469" width="36.8" height="15.0" fill="rgb(233,19,34)" rx="2" ry="2" />
<text  x="469.31" y="479.5" >[[k..</text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="906.6" y="533" width="1.6" height="15.0" fill="rgb(211,181,48)" rx="2" ry="2" />
<text  x="909.61" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21 samples, 2.85%)</title><rect x="72.4" y="453" width="33.7" height="15.0" fill="rgb(251,4,26)" rx="2" ry="2" />
<text  x="75.44" y="463.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="581" width="1.6" height="15.0" fill="rgb(250,134,10)" rx="2" ry="2" />
<text  x="1191.40" y="591.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="930.6" y="581" width="3.2" height="15.0" fill="rgb(226,187,49)" rx="2" ry="2" />
<text  x="933.62" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45 samples, 6.11%)</title><rect x="626.4" y="405" width="72.1" height="15.0" fill="rgb(241,92,47)" rx="2" ry="2" />
<text  x="629.42" y="415.5" >[[kernel..</text>
</g>
<g >
<title>server::listen_stream (611 samples, 82.90%)</title><rect x="11.6" y="837" width="978.3" height="15.0" fill="rgb(219,34,41)" rx="2" ry="2" />
<text  x="14.60" y="847.5" >server::listen_stream</text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.14%)</title><rect x="498.3" y="437" width="1.6" height="15.0" fill="rgb(243,185,15)" rx="2" ry="2" />
<text  x="501.33" y="447.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (164 samples, 22.25%)</title><rect x="109.3" y="789" width="262.5" height="15.0" fill="rgb(253,162,14)" rx="2" ry="2" />
<text  x="112.27" y="799.5" >&lt;core::marker::PhantomData&lt;T&gt; as se..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 6.78%)</title><rect x="1103.5" y="645" width="80.1" height="15.0" fill="rgb(214,113,41)" rx="2" ry="2" />
<text  x="1106.54" y="655.5" >[[kernel...</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="629" width="1.6" height="15.0" fill="rgb(211,111,39)" rx="2" ry="2" />
<text  x="1189.80" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="709" width="1.6" height="15.0" fill="rgb(254,56,53)" rx="2" ry="2" />
<text  x="1191.40" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="165" width="1.6" height="15.0" fill="rgb(205,13,12)" rx="2" ry="2" />
<text  x="1191.40" y="175.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 10.18%)</title><rect x="251.8" y="773" width="120.0" height="15.0" fill="rgb(236,126,29)" rx="2" ry="2" />
<text  x="254.76" y="783.5" >&lt;std::io::Byte..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="913.0" y="373" width="1.6" height="15.0" fill="rgb(223,133,25)" rx="2" ry="2" />
<text  x="916.01" y="383.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::finish (1 samples, 0.14%)</title><rect x="730.5" y="693" width="1.6" height="15.0" fill="rgb(233,127,46)" rx="2" ry="2" />
<text  x="733.49" y="703.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.14%)</title><rect x="900.2" y="677" width="1.6" height="15.0" fill="rgb(226,27,16)" rx="2" ry="2" />
<text  x="903.20" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19 samples, 2.58%)</title><rect x="218.1" y="581" width="30.5" height="15.0" fill="rgb(232,57,9)" rx="2" ry="2" />
<text  x="221.14" y="591.5" >[[..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="168.5" y="725" width="1.6" height="15.0" fill="rgb(206,61,36)" rx="2" ry="2" />
<text  x="171.51" y="735.5" ></text>
</g>
<g >
<title>core::fmt::builders::debug_tuple_new (1 samples, 0.14%)</title><rect x="906.6" y="613" width="1.6" height="15.0" fill="rgb(211,8,10)" rx="2" ry="2" />
<text  x="909.61" y="623.5" ></text>
</g>
<g >
<title>__rust_alloc (1 samples, 0.14%)</title><rect x="160.5" y="741" width="1.6" height="15.0" fill="rgb(232,145,49)" rx="2" ry="2" />
<text  x="163.50" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.68%)</title><rect x="400.7" y="661" width="8.0" height="15.0" fill="rgb(229,54,47)" rx="2" ry="2" />
<text  x="403.66" y="671.5" ></text>
</g>
<g >
<title>__libc_malloc (14 samples, 1.90%)</title><rect x="131.7" y="741" width="22.4" height="15.0" fill="rgb(254,106,32)" rx="2" ry="2" />
<text  x="134.68" y="751.5" >_..</text>
</g>
<g >
<title>__libc_send (103 samples, 13.98%)</title><rect x="546.4" y="757" width="164.9" height="15.0" fill="rgb(236,135,14)" rx="2" ry="2" />
<text  x="549.36" y="767.5" >__libc_send</text>
</g>
<g >
<title>[[kernel.kallsyms]] (53 samples, 7.19%)</title><rect x="279.0" y="629" width="84.8" height="15.0" fill="rgb(242,174,38)" rx="2" ry="2" />
<text  x="281.98" y="639.5" >[[kernel...</text>
</g>
<g >
<title>ipv4_conntrack_defrag (1 samples, 0.14%)</title><rect x="104.5" y="437" width="1.6" height="15.0" fill="rgb(236,56,20)" rx="2" ry="2" />
<text  x="107.46" y="447.5" ></text>
</g>
<g >
<title>nf_ct_deliver_cached_events (1 samples, 0.14%)</title><rect x="706.5" y="469" width="1.6" height="15.0" fill="rgb(220,229,18)" rx="2" ry="2" />
<text  x="709.47" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.14%)</title><rect x="933.8" y="565" width="1.6" height="15.0" fill="rgb(237,37,46)" rx="2" ry="2" />
<text  x="936.83" y="575.5" ></text>
</g>
<g >
<title>__libc_malloc (4 samples, 0.54%)</title><rect x="30.8" y="789" width="6.4" height="15.0" fill="rgb(214,174,46)" rx="2" ry="2" />
<text  x="33.81" y="799.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (98 samples, 13.30%)</title><rect x="741.7" y="565" width="156.9" height="15.0" fill="rgb(251,225,24)" rx="2" ry="2" />
<text  x="744.70" y="575.5" >&lt;std::sys::unix::std..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="488.7" y="165" width="3.2" height="15.0" fill="rgb(237,24,35)" rx="2" ry="2" />
<text  x="491.72" y="175.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::field (12 samples, 1.63%)</title><rect x="908.2" y="629" width="19.2" height="15.0" fill="rgb(206,61,46)" rx="2" ry="2" />
<text  x="911.21" y="639.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="911.4" y="437" width="1.6" height="15.0" fill="rgb(247,44,20)" rx="2" ry="2" />
<text  x="914.41" y="447.5" ></text>
</g>
<g >
<title>iptable_security_hook (2 samples, 0.27%)</title><rect x="495.1" y="453" width="3.2" height="15.0" fill="rgb(245,83,20)" rx="2" ry="2" />
<text  x="498.13" y="463.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (2 samples, 0.27%)</title><rect x="901.8" y="629" width="3.2" height="15.0" fill="rgb(246,88,23)" rx="2" ry="2" />
<text  x="904.80" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.14%)</title><rect x="1188.4" y="949" width="1.6" height="15.0" fill="rgb(253,130,4)" rx="2" ry="2" />
<text  x="1191.40" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="405" width="1.6" height="15.0" fill="rgb(221,154,7)" rx="2" ry="2" />
<text  x="1191.40" y="415.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="724.1" y="581" width="1.6" height="15.0" fill="rgb(227,102,8)" rx="2" ry="2" />
<text  x="727.08" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="725" width="1.6" height="15.0" fill="rgb(217,148,50)" rx="2" ry="2" />
<text  x="1189.80" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (109 samples, 14.79%)</title><rect x="1012.3" y="789" width="174.5" height="15.0" fill="rgb(238,41,53)" rx="2" ry="2" />
<text  x="1015.28" y="799.5" >std::sys::unix::thread..</text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.14%)</title><rect x="1001.1" y="805" width="1.6" height="15.0" fill="rgb(205,73,33)" rx="2" ry="2" />
<text  x="1004.07" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27 samples, 3.66%)</title><rect x="320.6" y="533" width="43.2" height="15.0" fill="rgb(210,195,53)" rx="2" ry="2" />
<text  x="323.61" y="543.5" >[[ke..</text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (1 samples, 0.14%)</title><rect x="906.6" y="501" width="1.6" height="15.0" fill="rgb(236,190,35)" rx="2" ry="2" />
<text  x="909.61" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (33 samples, 4.48%)</title><rect x="53.2" y="549" width="52.9" height="15.0" fill="rgb(233,0,47)" rx="2" ry="2" />
<text  x="56.23" y="559.5" >[[ker..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="1188.4" y="757" width="1.6" height="15.0" fill="rgb(243,161,47)" rx="2" ry="2" />
<text  x="1191.40" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::init (1 samples, 0.14%)</title><rect x="1186.8" y="917" width="1.6" height="15.0" fill="rgb(207,44,32)" rx="2" ry="2" />
<text  x="1189.80" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12 samples, 1.63%)</title><rect x="78.8" y="325" width="19.3" height="15.0" fill="rgb(234,94,48)" rx="2" ry="2" />
<text  x="81.85" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="736.9" y="533" width="1.6" height="15.0" fill="rgb(252,37,2)" rx="2" ry="2" />
<text  x="739.89" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="85.3" y="181" width="11.2" height="15.0" fill="rgb(218,179,0)" rx="2" ry="2" />
<text  x="88.25" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="613" width="1.6" height="15.0" fill="rgb(248,175,47)" rx="2" ry="2" />
<text  x="398.86" y="623.5" ></text>
</g>
<g >
<title>ipv4_helper (1 samples, 0.14%)</title><rect x="709.7" y="485" width="1.6" height="15.0" fill="rgb(245,229,48)" rx="2" ry="2" />
<text  x="712.67" y="495.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h3f01b769d2ac96ac (611 samples, 82.90%)</title><rect x="11.6" y="885" width="978.3" height="15.0" fill="rgb(218,151,29)" rx="2" ry="2" />
<text  x="14.60" y="895.5" >core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h3f01b769d2ac96ac</text>
</g>
<g >
<title>[[kernel.kallsyms]] (35 samples, 4.75%)</title><rect x="642.4" y="229" width="56.1" height="15.0" fill="rgb(212,125,11)" rx="2" ry="2" />
<text  x="645.43" y="239.5" >[[ker..</text>
</g>
<g >
<title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (98 samples, 13.30%)</title><rect x="741.7" y="613" width="156.9" height="15.0" fill="rgb(211,133,41)" rx="2" ry="2" />
<text  x="744.70" y="623.5" >std::io::buffered::B..</text>
</g>
<g >
<title>all (737 samples, 100%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(223,96,11)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="613" width="1.6" height="15.0" fill="rgb(254,129,20)" rx="2" ry="2" />
<text  x="1004.07" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 1.49%)</title><rect x="346.2" y="485" width="17.6" height="15.0" fill="rgb(216,6,54)" rx="2" ry="2" />
<text  x="349.23" y="495.5" ></text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.27%)</title><rect x="491.9" y="261" width="3.2" height="15.0" fill="rgb(229,196,25)" rx="2" ry="2" />
<text  x="494.93" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 3.80%)</title><rect x="125.3" y="757" width="44.8" height="15.0" fill="rgb(242,158,2)" rx="2" ry="2" />
<text  x="128.28" y="767.5" >allo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="405.5" y="533" width="3.2" height="15.0" fill="rgb(225,89,35)" rx="2" ry="2" />
<text  x="408.47" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="913.0" y="389" width="1.6" height="15.0" fill="rgb(220,77,34)" rx="2" ry="2" />
<text  x="916.01" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31 samples, 4.21%)</title><rect x="56.4" y="517" width="49.7" height="15.0" fill="rgb(249,80,51)" rx="2" ry="2" />
<text  x="59.43" y="527.5" >[[ker..</text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.27%)</title><rect x="495.1" y="437" width="3.2" height="15.0" fill="rgb(229,56,54)" rx="2" ry="2" />
<text  x="498.13" y="447.5" ></text>
</g>
<g >
<title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="983.5" y="789" width="1.6" height="15.0" fill="rgb(233,141,13)" rx="2" ry="2" />
<text  x="986.46" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write (1 samples, 0.14%)</title><rect x="913.0" y="405" width="1.6" height="15.0" fill="rgb(254,117,5)" rx="2" ry="2" />
<text  x="916.01" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::thread_info::THREAD_INFO::__getit (2 samples, 0.27%)</title><rect x="986.7" y="757" width="3.2" height="15.0" fill="rgb(251,138,0)" rx="2" ry="2" />
<text  x="989.66" y="767.5" ></text>
</g>
<g >
<title>std::io::stdio::stdout (7 samples, 0.95%)</title><rect x="972.3" y="757" width="11.2" height="15.0" fill="rgb(206,121,52)" rx="2" ry="2" />
<text  x="975.25" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="661" width="1.6" height="15.0" fill="rgb(230,88,48)" rx="2" ry="2" />
<text  x="1004.07" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 1.90%)</title><rect x="75.6" y="373" width="22.5" height="15.0" fill="rgb(253,178,32)" rx="2" ry="2" />
<text  x="78.64" y="383.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (64 samples, 8.68%)</title><rect x="608.8" y="549" width="102.5" height="15.0" fill="rgb(224,138,49)" rx="2" ry="2" />
<text  x="611.81" y="559.5" >[[kernel.kal..</text>
</g>
<g >
<title>nf_ct_get_tuple (1 samples, 0.14%)</title><rect x="499.9" y="421" width="1.6" height="15.0" fill="rgb(226,150,45)" rx="2" ry="2" />
<text  x="502.93" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 1.90%)</title><rect x="472.7" y="405" width="22.4" height="15.0" fill="rgb(223,36,9)" rx="2" ry="2" />
<text  x="475.71" y="415.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="645" width="1.6" height="15.0" fill="rgb(239,218,42)" rx="2" ry="2" />
<text  x="1189.80" y="655.5" ></text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::Command as core::fmt::Debug&gt;::fmt (9 samples, 1.22%)</title><rect x="717.7" y="709" width="14.4" height="15.0" fill="rgb(249,154,4)" rx="2" ry="2" />
<text  x="720.68" y="719.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.27%)</title><rect x="504.7" y="709" width="3.2" height="15.0" fill="rgb(206,117,2)" rx="2" ry="2" />
<text  x="507.74" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 6.78%)</title><rect x="283.8" y="613" width="80.0" height="15.0" fill="rgb(205,175,19)" rx="2" ry="2" />
<text  x="286.79" y="623.5" >[[kernel...</text>
</g>
<g >
<title>core::fmt::builders::debug_struct_new (2 samples, 0.27%)</title><rect x="901.8" y="677" width="3.2" height="15.0" fill="rgb(220,218,35)" rx="2" ry="2" />
<text  x="904.80" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="405.5" y="549" width="3.2" height="15.0" fill="rgb(253,111,25)" rx="2" ry="2" />
<text  x="408.47" y="559.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="925.8" y="469" width="1.6" height="15.0" fill="rgb(221,119,48)" rx="2" ry="2" />
<text  x="928.82" y="479.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.14%)</title><rect x="501.5" y="421" width="1.6" height="15.0" fill="rgb(207,85,10)" rx="2" ry="2" />
<text  x="504.53" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="533" width="1.6" height="15.0" fill="rgb(224,227,43)" rx="2" ry="2" />
<text  x="398.86" y="543.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.95%)</title><rect x="397.5" y="789" width="11.2" height="15.0" fill="rgb(212,30,18)" rx="2" ry="2" />
<text  x="400.46" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46 samples, 6.24%)</title><rect x="624.8" y="469" width="73.7" height="15.0" fill="rgb(221,87,39)" rx="2" ry="2" />
<text  x="627.82" y="479.5" >[[kernel..</text>
</g>
<g >
<title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="1188.4" y="773" width="1.6" height="15.0" fill="rgb(231,190,15)" rx="2" ry="2" />
<text  x="1191.40" y="783.5" ></text>
</g>
<g >
<title>__GI___nanosleep (107 samples, 14.52%)</title><rect x="1015.5" y="773" width="171.3" height="15.0" fill="rgb(212,36,9)" rx="2" ry="2" />
<text  x="1018.48" y="783.5" >__GI___nanosleep</text>
</g>
<g >
<title>__libc_recv (1 samples, 0.14%)</title><rect x="40.4" y="709" width="1.6" height="15.0" fill="rgb(235,33,5)" rx="2" ry="2" />
<text  x="43.42" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50 samples, 6.78%)</title><rect x="424.7" y="661" width="80.0" height="15.0" fill="rgb(248,111,34)" rx="2" ry="2" />
<text  x="427.68" y="671.5" >[[kernel...</text>
</g>
<g >
<title>core::mem::replace (2 samples, 0.27%)</title><rect x="969.1" y="677" width="3.2" height="15.0" fill="rgb(231,43,53)" rx="2" ry="2" />
<text  x="972.05" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::peer_addr::_$u7b$$u7b$closure$u7d$$u7d$::h48cc797c59ee9c49 (5 samples, 0.68%)</title><rect x="937.0" y="661" width="8.0" height="15.0" fill="rgb(207,54,44)" rx="2" ry="2" />
<text  x="940.03" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (75 samples, 10.18%)</title><rect x="591.2" y="581" width="120.1" height="15.0" fill="rgb(223,50,48)" rx="2" ry="2" />
<text  x="594.19" y="591.5" >[[kernel.kalls..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (39 samples, 5.29%)</title><rect x="442.3" y="565" width="62.4" height="15.0" fill="rgb(220,213,14)" rx="2" ry="2" />
<text  x="445.29" y="575.5" >[[kern..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="709" width="1.6" height="15.0" fill="rgb(248,179,38)" rx="2" ry="2" />
<text  x="1005.67" y="719.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (103 samples, 13.98%)</title><rect x="546.4" y="805" width="164.9" height="15.0" fill="rgb(253,176,15)" rx="2" ry="2" />
<text  x="549.36" y="815.5" >std::io::Write::write..</text>
</g>
<g >
<title>__libc_recv (7 samples, 0.95%)</title><rect x="397.5" y="709" width="11.2" height="15.0" fill="rgb(210,4,5)" rx="2" ry="2" />
<text  x="400.46" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45 samples, 6.11%)</title><rect x="626.4" y="421" width="72.1" height="15.0" fill="rgb(216,125,25)" rx="2" ry="2" />
<text  x="629.42" y="431.5" >[[kernel..</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="724.1" y="629" width="1.6" height="15.0" fill="rgb(251,203,41)" rx="2" ry="2" />
<text  x="727.08" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="480.7" y="229" width="11.2" height="15.0" fill="rgb(246,22,0)" rx="2" ry="2" />
<text  x="483.72" y="239.5" ></text>
</g>
<g >
<title>iptable_security_hook (1 samples, 0.14%)</title><rect x="96.5" y="213" width="1.6" height="15.0" fill="rgb(219,99,29)" rx="2" ry="2" />
<text  x="99.46" y="223.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.41%)</title><rect x="371.8" y="709" width="4.8" height="15.0" fill="rgb(251,225,40)" rx="2" ry="2" />
<text  x="374.85" y="719.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (1 samples, 0.14%)</title><rect x="1188.4" y="869" width="1.6" height="15.0" fill="rgb(216,93,48)" rx="2" ry="2" />
<text  x="1191.40" y="879.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 0.95%)</title><rect x="397.5" y="773" width="11.2" height="15.0" fill="rgb(226,213,37)" rx="2" ry="2" />
<text  x="400.46" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8 samples, 1.09%)</title><rect x="83.6" y="197" width="12.9" height="15.0" fill="rgb(226,145,54)" rx="2" ry="2" />
<text  x="86.65" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70 samples, 9.50%)</title><rect x="786.5" y="389" width="112.1" height="15.0" fill="rgb(224,83,11)" rx="2" ry="2" />
<text  x="789.53" y="399.5" >[[kernel.kall..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (91 samples, 12.35%)</title><rect x="565.6" y="645" width="145.7" height="15.0" fill="rgb(214,146,36)" rx="2" ry="2" />
<text  x="568.58" y="655.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (23 samples, 3.12%)</title><rect x="509.5" y="773" width="36.9" height="15.0" fill="rgb(221,173,29)" rx="2" ry="2" />
<text  x="512.54" y="783.5" >&lt;&amp;s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="533" width="1.6" height="15.0" fill="rgb(236,39,51)" rx="2" ry="2" />
<text  x="1191.40" y="543.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="722.5" y="613" width="1.6" height="15.0" fill="rgb(240,146,7)" rx="2" ry="2" />
<text  x="725.48" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="677" width="1.6" height="15.0" fill="rgb(237,155,33)" rx="2" ry="2" />
<text  x="1005.67" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (86 samples, 11.67%)</title><rect x="1045.9" y="757" width="137.7" height="15.0" fill="rgb(210,189,2)" rx="2" ry="2" />
<text  x="1048.90" y="767.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="1188.4" y="837" width="1.6" height="15.0" fill="rgb(250,155,15)" rx="2" ry="2" />
<text  x="1191.40" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="597" width="59.3" height="15.0" fill="rgb(251,131,24)" rx="2" ry="2" />
<text  x="49.82" y="607.5" >[[kern..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (40 samples, 5.43%)</title><rect x="42.0" y="741" width="64.1" height="15.0" fill="rgb(213,63,4)" rx="2" ry="2" />
<text  x="45.02" y="751.5" >std::sy..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 1.36%)</title><rect x="82.0" y="277" width="16.1" height="15.0" fill="rgb(240,73,47)" rx="2" ry="2" />
<text  x="85.05" y="287.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (98 samples, 13.30%)</title><rect x="741.7" y="645" width="156.9" height="15.0" fill="rgb(211,229,38)" rx="2" ry="2" />
<text  x="744.70" y="655.5" >&lt;std::io::buffered::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="94.9" y="53" width="1.6" height="15.0" fill="rgb(229,163,13)" rx="2" ry="2" />
<text  x="97.86" y="63.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.81%)</title><rect x="399.1" y="677" width="9.6" height="15.0" fill="rgb(221,119,15)" rx="2" ry="2" />
<text  x="402.06" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="407.1" y="517" width="1.6" height="15.0" fill="rgb(238,55,29)" rx="2" ry="2" />
<text  x="410.07" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="378.2" y="629" width="3.3" height="15.0" fill="rgb(213,16,3)" rx="2" ry="2" />
<text  x="381.25" y="639.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (2 samples, 0.27%)</title><rect x="989.9" y="917" width="3.2" height="15.0" fill="rgb(242,160,50)" rx="2" ry="2" />
<text  x="992.86" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15 samples, 2.04%)</title><rect x="471.1" y="437" width="24.0" height="15.0" fill="rgb(206,30,1)" rx="2" ry="2" />
<text  x="474.11" y="447.5" >[..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (48 samples, 6.51%)</title><rect x="174.9" y="725" width="76.9" height="15.0" fill="rgb(224,45,40)" rx="2" ry="2" />
<text  x="177.91" y="735.5" >&lt;&amp;std::n..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="403.9" y="581" width="4.8" height="15.0" fill="rgb(208,16,30)" rx="2" ry="2" />
<text  x="406.87" y="591.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_str (1 samples, 0.14%)</title><rect x="722.5" y="629" width="1.6" height="15.0" fill="rgb(240,170,47)" rx="2" ry="2" />
<text  x="725.48" y="639.5" ></text>
</g>
<g >
<title>std::memchr::memrchr (1 samples, 0.14%)</title><rect x="932.2" y="565" width="1.6" height="15.0" fill="rgb(252,148,43)" rx="2" ry="2" />
<text  x="935.23" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="357" width="1.6" height="15.0" fill="rgb(229,44,16)" rx="2" ry="2" />
<text  x="1191.40" y="367.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="736.9" y="565" width="1.6" height="15.0" fill="rgb(220,60,11)" rx="2" ry="2" />
<text  x="739.89" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="540.0" y="565" width="4.8" height="15.0" fill="rgb(250,63,41)" rx="2" ry="2" />
<text  x="542.96" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 1.90%)</title><rect x="226.1" y="565" width="22.5" height="15.0" fill="rgb(212,169,4)" rx="2" ry="2" />
<text  x="229.15" y="575.5" >[..</text>
</g>
<g >
<title>std::io::stdio::print_to (170 samples, 23.07%)</title><rect x="711.3" y="805" width="272.2" height="15.0" fill="rgb(227,145,34)" rx="2" ry="2" />
<text  x="714.28" y="815.5" >std::io::stdio::print_to</text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="474.3" y="373" width="20.8" height="15.0" fill="rgb(253,1,47)" rx="2" ry="2" />
<text  x="477.31" y="383.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="930.6" y="565" width="1.6" height="15.0" fill="rgb(244,17,43)" rx="2" ry="2" />
<text  x="933.62" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="94.9" y="37" width="1.6" height="15.0" fill="rgb(254,61,38)" rx="2" ry="2" />
<text  x="97.86" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="373" width="1.6" height="15.0" fill="rgb(210,147,25)" rx="2" ry="2" />
<text  x="1191.40" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (3 samples, 0.41%)</title><rect x="371.8" y="757" width="4.8" height="15.0" fill="rgb(235,200,43)" rx="2" ry="2" />
<text  x="374.85" y="767.5" ></text>
</g>
<g >
<title>tcp_packet (3 samples, 0.41%)</title><rect x="701.7" y="437" width="4.8" height="15.0" fill="rgb(211,229,23)" rx="2" ry="2" />
<text  x="704.67" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="1005.9" y="677" width="3.2" height="15.0" fill="rgb(237,49,21)" rx="2" ry="2" />
<text  x="1008.88" y="687.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.14%)</title><rect x="900.2" y="645" width="1.6" height="15.0" fill="rgb(215,125,34)" rx="2" ry="2" />
<text  x="903.20" y="655.5" ></text>
</g>
<g >
<title>main (122 samples, 16.55%)</title><rect x="993.1" y="949" width="195.3" height="15.0" fill="rgb(228,195,45)" rx="2" ry="2" />
<text  x="996.07" y="959.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (34 samples, 4.61%)</title><rect x="644.0" y="213" width="54.5" height="15.0" fill="rgb(233,143,25)" rx="2" ry="2" />
<text  x="647.03" y="223.5" >[[ker..</text>
</g>
<g >
<title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="914.6" y="437" width="1.6" height="15.0" fill="rgb(230,129,53)" rx="2" ry="2" />
<text  x="917.61" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::socket_addr::_$u7b$$u7b$closure$u7d$$u7d$::hc0696595a0c93e1e (11 samples, 1.49%)</title><rect x="945.0" y="661" width="17.6" height="15.0" fill="rgb(230,112,44)" rx="2" ry="2" />
<text  x="948.03" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25 samples, 3.39%)</title><rect x="658.4" y="165" width="40.1" height="15.0" fill="rgb(208,77,41)" rx="2" ry="2" />
<text  x="661.44" y="175.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="773" width="1.6" height="15.0" fill="rgb(250,66,13)" rx="2" ry="2" />
<text  x="1189.80" y="783.5" ></text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.14%)</title><rect x="102.9" y="373" width="1.6" height="15.0" fill="rgb(216,137,47)" rx="2" ry="2" />
<text  x="105.86" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (1 samples, 0.14%)</title><rect x="932.2" y="549" width="1.6" height="15.0" fill="rgb(217,0,5)" rx="2" ry="2" />
<text  x="935.23" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (611 samples, 82.90%)</title><rect x="11.6" y="901" width="978.3" height="15.0" fill="rgb(235,122,27)" rx="2" ry="2" />
<text  x="14.60" y="911.5" >&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.41%)</title><rect x="1004.3" y="757" width="4.8" height="15.0" fill="rgb(248,153,31)" rx="2" ry="2" />
<text  x="1007.27" y="767.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.27%)</title><rect x="378.2" y="741" width="3.3" height="15.0" fill="rgb(242,13,37)" rx="2" ry="2" />
<text  x="381.25" y="751.5" ></text>
</g>
<g >
<title>_start (122 samples, 16.55%)</title><rect x="993.1" y="981" width="195.3" height="15.0" fill="rgb(244,131,10)" rx="2" ry="2" />
<text  x="996.07" y="991.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="378.2" y="581" width="3.3" height="15.0" fill="rgb(252,9,44)" rx="2" ry="2" />
<text  x="381.25" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (6 samples, 0.81%)</title><rect x="387.9" y="709" width="9.6" height="15.0" fill="rgb(232,135,42)" rx="2" ry="2" />
<text  x="390.86" y="719.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hc0f7101c976a8fdb (121 samples, 16.42%)</title><rect x="993.1" y="837" width="193.7" height="15.0" fill="rgb(242,170,45)" rx="2" ry="2" />
<text  x="996.07" y="847.5" >std::rt::lang_start::_$u7..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.14%)</title><rect x="738.5" y="533" width="1.6" height="15.0" fill="rgb(229,195,4)" rx="2" ry="2" />
<text  x="741.49" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18 samples, 2.44%)</title><rect x="515.9" y="709" width="28.9" height="15.0" fill="rgb(252,121,23)" rx="2" ry="2" />
<text  x="518.94" y="719.5" >[[..</text>
</g>
<g >
<title>&lt;u8 as core::fmt::num::Int&gt;::to_u64 (1 samples, 0.14%)</title><rect x="921.0" y="437" width="1.6" height="15.0" fill="rgb(223,222,16)" rx="2" ry="2" />
<text  x="924.02" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.41%)</title><rect x="371.8" y="725" width="4.8" height="15.0" fill="rgb(243,139,31)" rx="2" ry="2" />
<text  x="374.85" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="389" width="1.6" height="15.0" fill="rgb(225,149,12)" rx="2" ry="2" />
<text  x="1191.40" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="378.2" y="613" width="3.3" height="15.0" fill="rgb(243,154,18)" rx="2" ry="2" />
<text  x="381.25" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41 samples, 5.56%)</title><rect x="298.2" y="565" width="65.6" height="15.0" fill="rgb(240,229,45)" rx="2" ry="2" />
<text  x="301.20" y="575.5" >[[kerne..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="983.5" y="773" width="1.6" height="15.0" fill="rgb(215,75,18)" rx="2" ry="2" />
<text  x="986.46" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="480.7" y="277" width="11.2" height="15.0" fill="rgb(232,128,9)" rx="2" ry="2" />
<text  x="483.72" y="287.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (8 samples, 1.09%)</title><rect x="384.7" y="773" width="12.8" height="15.0" fill="rgb(246,227,6)" rx="2" ry="2" />
<text  x="387.65" y="783.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::debug_struct (2 samples, 0.27%)</title><rect x="901.8" y="693" width="3.2" height="15.0" fill="rgb(245,174,40)" rx="2" ry="2" />
<text  x="904.80" y="703.5" ></text>
</g>
<g >
<title>std::io::lazy::Lazy&lt;T&gt;::get (7 samples, 0.95%)</title><rect x="972.3" y="741" width="11.2" height="15.0" fill="rgb(221,98,14)" rx="2" ry="2" />
<text  x="975.25" y="751.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2 samples, 0.27%)</title><rect x="727.3" y="613" width="3.2" height="15.0" fill="rgb(241,18,45)" rx="2" ry="2" />
<text  x="730.29" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (86 samples, 11.67%)</title><rect x="1045.9" y="741" width="137.7" height="15.0" fill="rgb(241,130,49)" rx="2" ry="2" />
<text  x="1048.90" y="751.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.41%)</title><rect x="99.7" y="405" width="4.8" height="15.0" fill="rgb(254,82,48)" rx="2" ry="2" />
<text  x="102.66" y="415.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::debug_tuple (1 samples, 0.14%)</title><rect x="906.6" y="629" width="1.6" height="15.0" fill="rgb(206,96,24)" rx="2" ry="2" />
<text  x="909.61" y="639.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (611 samples, 82.90%)</title><rect x="11.6" y="949" width="978.3" height="15.0" fill="rgb(211,152,50)" rx="2" ry="2" />
<text  x="14.60" y="959.5" >std::sys::unix::thread::Thread::new::thread_start</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="1188.4" y="901" width="1.6" height="15.0" fill="rgb(206,19,27)" rx="2" ry="2" />
<text  x="1191.40" y="911.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_str (1 samples, 0.14%)</title><rect x="724.1" y="645" width="1.6" height="15.0" fill="rgb(237,215,29)" rx="2" ry="2" />
<text  x="727.08" y="655.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="898.6" y="597" width="1.6" height="15.0" fill="rgb(230,129,52)" rx="2" ry="2" />
<text  x="901.60" y="607.5" ></text>
</g>
<g >
<title>std::memchr::memrchr (1 samples, 0.14%)</title><rect x="736.9" y="517" width="1.6" height="15.0" fill="rgb(211,103,50)" rx="2" ry="2" />
<text  x="739.89" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="661" width="1.6" height="15.0" fill="rgb(211,223,9)" rx="2" ry="2" />
<text  x="1189.80" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1002.7" y="693" width="1.6" height="15.0" fill="rgb(227,23,5)" rx="2" ry="2" />
<text  x="1005.67" y="703.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.27%)</title><rect x="986.7" y="741" width="3.2" height="15.0" fill="rgb(223,34,49)" rx="2" ry="2" />
<text  x="989.66" y="751.5" ></text>
</g>
<g >
<title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="969.1" y="725" width="3.2" height="15.0" fill="rgb(252,205,35)" rx="2" ry="2" />
<text  x="972.05" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="961.0" y="517" width="1.6" height="15.0" fill="rgb(245,121,28)" rx="2" ry="2" />
<text  x="964.04" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="1005.9" y="645" width="3.2" height="15.0" fill="rgb(219,139,20)" rx="2" ry="2" />
<text  x="1008.88" y="655.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::debug_tuple (1 samples, 0.14%)</title><rect x="736.9" y="629" width="1.6" height="15.0" fill="rgb(237,83,1)" rx="2" ry="2" />
<text  x="739.89" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (103 samples, 13.98%)</title><rect x="546.4" y="789" width="164.9" height="15.0" fill="rgb(206,56,35)" rx="2" ry="2" />
<text  x="549.36" y="799.5" >&lt;&amp;std::net::tcp::TcpS..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (92 samples, 12.48%)</title><rect x="564.0" y="661" width="147.3" height="15.0" fill="rgb(232,199,12)" rx="2" ry="2" />
<text  x="566.98" y="671.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="523.9" y="645" width="20.9" height="15.0" fill="rgb(254,22,12)" rx="2" ry="2" />
<text  x="526.95" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="487.1" y="181" width="4.8" height="15.0" fill="rgb(207,161,28)" rx="2" ry="2" />
<text  x="490.12" y="191.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (1 samples, 0.14%)</title><rect x="708.1" y="485" width="1.6" height="15.0" fill="rgb(247,147,21)" rx="2" ry="2" />
<text  x="711.07" y="495.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="736.9" y="469" width="1.6" height="15.0" fill="rgb(207,199,50)" rx="2" ry="2" />
<text  x="739.89" y="479.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="913.0" y="453" width="3.2" height="15.0" fill="rgb(212,157,0)" rx="2" ry="2" />
<text  x="916.01" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (71 samples, 9.63%)</title><rect x="258.2" y="757" width="113.6" height="15.0" fill="rgb(247,207,48)" rx="2" ry="2" />
<text  x="261.17" y="767.5" >&lt;&amp;std::net::tc..</text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (2 samples, 0.27%)</title><rect x="924.2" y="485" width="3.2" height="15.0" fill="rgb(236,72,22)" rx="2" ry="2" />
<text  x="927.22" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="213" width="1.6" height="15.0" fill="rgb(212,95,1)" rx="2" ry="2" />
<text  x="1191.40" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.54%)</title><rect x="485.5" y="213" width="6.4" height="15.0" fill="rgb(210,176,14)" rx="2" ry="2" />
<text  x="488.52" y="223.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (6 samples, 0.81%)</title><rect x="387.9" y="741" width="9.6" height="15.0" fill="rgb(209,27,44)" rx="2" ry="2" />
<text  x="390.86" y="751.5" ></text>
</g>
<g >
<title>nf_conntrack_in (4 samples, 0.54%)</title><rect x="700.1" y="453" width="6.4" height="15.0" fill="rgb(246,46,23)" rx="2" ry="2" />
<text  x="703.07" y="463.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::new (3 samples, 0.41%)</title><rect x="1004.3" y="789" width="4.8" height="15.0" fill="rgb(230,63,37)" rx="2" ry="2" />
<text  x="1007.27" y="799.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.27%)</title><rect x="381.5" y="773" width="3.2" height="15.0" fill="rgb(226,176,38)" rx="2" ry="2" />
<text  x="384.45" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="490.3" y="117" width="1.6" height="15.0" fill="rgb(209,219,23)" rx="2" ry="2" />
<text  x="493.33" y="127.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::parallel::ConcurrentHashTable::insert_if_absent (5 samples, 0.68%)</title><rect x="29.2" y="821" width="8.0" height="15.0" fill="rgb(240,20,46)" rx="2" ry="2" />
<text  x="32.21" y="831.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (2 samples, 0.27%)</title><rect x="989.9" y="933" width="3.2" height="15.0" fill="rgb(235,133,0)" rx="2" ry="2" />
<text  x="992.86" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="488.7" y="149" width="3.2" height="15.0" fill="rgb(247,94,53)" rx="2" ry="2" />
<text  x="491.72" y="159.5" ></text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.27%)</title><rect x="499.9" y="437" width="3.2" height="15.0" fill="rgb(236,139,33)" rx="2" ry="2" />
<text  x="502.93" y="447.5" ></text>
</g>
<g >
<title>std::memchr::memrchr (2 samples, 0.27%)</title><rect x="901.8" y="581" width="3.2" height="15.0" fill="rgb(212,37,14)" rx="2" ry="2" />
<text  x="904.80" y="591.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugStruct::finish (1 samples, 0.14%)</title><rect x="935.4" y="693" width="1.6" height="15.0" fill="rgb(210,219,26)" rx="2" ry="2" />
<text  x="938.43" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.68%)</title><rect x="400.7" y="629" width="8.0" height="15.0" fill="rgb(217,144,49)" rx="2" ry="2" />
<text  x="403.66" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34 samples, 4.61%)</title><rect x="51.6" y="565" width="54.5" height="15.0" fill="rgb(242,211,20)" rx="2" ry="2" />
<text  x="54.63" y="575.5" >[[ker..</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (611 samples, 82.90%)</title><rect x="11.6" y="917" width="978.3" height="15.0" fill="rgb(217,55,14)" rx="2" ry="2" />
<text  x="14.60" y="927.5" >&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text>
</g>
<g >
<title>iptable_security_hook (1 samples, 0.14%)</title><rect x="698.5" y="469" width="1.6" height="15.0" fill="rgb(247,185,0)" rx="2" ry="2" />
<text  x="701.47" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.41%)</title><rect x="733.7" y="645" width="4.8" height="15.0" fill="rgb(229,62,47)" rx="2" ry="2" />
<text  x="736.69" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="277" width="1.6" height="15.0" fill="rgb(224,187,47)" rx="2" ry="2" />
<text  x="1191.40" y="287.5" ></text>
</g>
<g >
<title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Debug&gt;::fmt (12 samples, 1.63%)</title><rect x="908.2" y="565" width="19.2" height="15.0" fill="rgb(250,22,54)" rx="2" ry="2" />
<text  x="911.21" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="181" width="1.6" height="15.0" fill="rgb(242,131,21)" rx="2" ry="2" />
<text  x="1191.40" y="191.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (7 samples, 0.95%)</title><rect x="397.5" y="741" width="11.2" height="15.0" fill="rgb(208,5,2)" rx="2" ry="2" />
<text  x="400.46" y="751.5" ></text>
</g>
<g >
<title>start_thread (612 samples, 83.04%)</title><rect x="10.0" y="965" width="979.9" height="15.0" fill="rgb(234,37,5)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >start_thread</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.54%)</title><rect x="485.5" y="197" width="6.4" height="15.0" fill="rgb(215,192,2)" rx="2" ry="2" />
<text  x="488.52" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31 samples, 4.21%)</title><rect x="56.4" y="533" width="49.7" height="15.0" fill="rgb(214,34,23)" rx="2" ry="2" />
<text  x="59.43" y="543.5" >[[ker..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="741" width="1.6" height="15.0" fill="rgb(247,56,42)" rx="2" ry="2" />
<text  x="1189.80" y="751.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 8.41%)</title><rect x="408.7" y="805" width="99.2" height="15.0" fill="rgb(232,19,1)" rx="2" ry="2" />
<text  x="411.67" y="815.5" >&lt;std::io::By..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="677" width="1.6" height="15.0" fill="rgb(252,212,16)" rx="2" ry="2" />
<text  x="1189.80" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="229" width="1.6" height="15.0" fill="rgb(219,76,30)" rx="2" ry="2" />
<text  x="1191.40" y="239.5" ></text>
</g>
<g >
<title>std::thread::sleep (111 samples, 15.06%)</title><rect x="1009.1" y="805" width="177.7" height="15.0" fill="rgb(214,51,1)" rx="2" ry="2" />
<text  x="1012.08" y="815.5" >std::thread::sleep</text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="738.5" y="645" width="3.2" height="15.0" fill="rgb(209,115,17)" rx="2" ry="2" />
<text  x="741.49" y="655.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (611 samples, 82.90%)</title><rect x="11.6" y="869" width="978.3" height="15.0" fill="rgb(220,7,31)" rx="2" ry="2" />
<text  x="14.60" y="879.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="533.6" y="597" width="11.2" height="15.0" fill="rgb(233,111,13)" rx="2" ry="2" />
<text  x="536.55" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (6 samples, 0.81%)</title><rect x="387.9" y="693" width="9.6" height="15.0" fill="rgb(219,123,36)" rx="2" ry="2" />
<text  x="390.86" y="703.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.14%)</title><rect x="932.2" y="517" width="1.6" height="15.0" fill="rgb(228,217,25)" rx="2" ry="2" />
<text  x="935.23" y="527.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (1 samples, 0.14%)</title><rect x="919.4" y="437" width="1.6" height="15.0" fill="rgb(234,74,36)" rx="2" ry="2" />
<text  x="922.42" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.14%)</title><rect x="724.1" y="533" width="1.6" height="15.0" fill="rgb(218,131,39)" rx="2" ry="2" />
<text  x="727.08" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48 samples, 6.51%)</title><rect x="427.9" y="645" width="76.8" height="15.0" fill="rgb(254,170,23)" rx="2" ry="2" />
<text  x="430.88" y="655.5" >[[kernel..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.27%)</title><rect x="378.2" y="725" width="3.3" height="15.0" fill="rgb(232,9,19)" rx="2" ry="2" />
<text  x="381.25" y="735.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="911.4" y="485" width="1.6" height="15.0" fill="rgb(242,207,36)" rx="2" ry="2" />
<text  x="914.41" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="91.7" y="117" width="4.8" height="15.0" fill="rgb(206,203,33)" rx="2" ry="2" />
<text  x="94.66" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="341" width="1.6" height="15.0" fill="rgb(254,112,11)" rx="2" ry="2" />
<text  x="1191.40" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (71 samples, 9.63%)</title><rect x="258.2" y="709" width="113.6" height="15.0" fill="rgb(245,14,3)" rx="2" ry="2" />
<text  x="261.17" y="719.5" >std::sys::unix..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 8.14%)</title><rect x="615.2" y="517" width="96.1" height="15.0" fill="rgb(207,198,1)" rx="2" ry="2" />
<text  x="618.21" y="527.5" >[[kernel.ka..</text>
</g>
<g >
<title>[listener (612 samples, 83.04%)</title><rect x="10.0" y="997" width="979.9" height="15.0" fill="rgb(212,201,24)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >[listener</text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.27%)</title><rect x="378.2" y="677" width="3.3" height="15.0" fill="rgb(250,37,21)" rx="2" ry="2" />
<text  x="381.25" y="687.5" ></text>
</g>
<g >
<title>server::main (121 samples, 16.42%)</title><rect x="993.1" y="821" width="193.7" height="15.0" fill="rgb(249,77,31)" rx="2" ry="2" />
<text  x="996.07" y="831.5" >server::main</text>
</g>
<g >
<title>std::io::Write::write_all (102 samples, 13.84%)</title><rect x="738.5" y="693" width="163.3" height="15.0" fill="rgb(226,24,46)" rx="2" ry="2" />
<text  x="741.49" y="703.5" >std::io::Write::write..</text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (98 samples, 13.30%)</title><rect x="741.7" y="629" width="156.9" height="15.0" fill="rgb(242,75,27)" rx="2" ry="2" />
<text  x="744.70" y="639.5" >&lt;std::io::buffered::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 8.14%)</title><rect x="615.2" y="501" width="96.1" height="15.0" fill="rgb(248,219,26)" rx="2" ry="2" />
<text  x="618.21" y="511.5" >[[kernel.ka..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (47 samples, 6.38%)</title><rect x="429.5" y="613" width="75.2" height="15.0" fill="rgb(234,138,6)" rx="2" ry="2" />
<text  x="432.48" y="623.5" >[[kernel..</text>
</g>
<g >
<title>std::memchr::memrchr (1 samples, 0.14%)</title><rect x="898.6" y="645" width="1.6" height="15.0" fill="rgb(243,184,45)" rx="2" ry="2" />
<text  x="901.60" y="655.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="913.0" y="437" width="1.6" height="15.0" fill="rgb(228,214,23)" rx="2" ry="2" />
<text  x="916.01" y="447.5" ></text>
</g>
<g >
<title>__libc_recv (40 samples, 5.43%)</title><rect x="42.0" y="693" width="64.1" height="15.0" fill="rgb(243,160,39)" rx="2" ry="2" />
<text  x="45.02" y="703.5" >__libc_..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::socket_addr (11 samples, 1.49%)</title><rect x="945.0" y="693" width="17.6" height="15.0" fill="rgb(210,159,52)" rx="2" ry="2" />
<text  x="948.03" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="629" width="59.3" height="15.0" fill="rgb(206,219,39)" rx="2" ry="2" />
<text  x="49.82" y="639.5" >[[kern..</text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.14%)</title><rect x="932.2" y="533" width="1.6" height="15.0" fill="rgb(251,119,46)" rx="2" ry="2" />
<text  x="935.23" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="597" width="1.6" height="15.0" fill="rgb(217,52,20)" rx="2" ry="2" />
<text  x="1191.40" y="607.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.27%)</title><rect x="969.1" y="693" width="3.2" height="15.0" fill="rgb(234,74,1)" rx="2" ry="2" />
<text  x="972.05" y="703.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.14%)</title><rect x="988.3" y="725" width="1.6" height="15.0" fill="rgb(246,221,51)" rx="2" ry="2" />
<text  x="991.26" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="421" width="1.6" height="15.0" fill="rgb(214,98,17)" rx="2" ry="2" />
<text  x="1191.40" y="431.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="906.6" y="581" width="1.6" height="15.0" fill="rgb(227,43,39)" rx="2" ry="2" />
<text  x="909.61" y="591.5" ></text>
</g>
<g >
<title>core::fmt::builders::debug_tuple_new (1 samples, 0.14%)</title><rect x="736.9" y="613" width="1.6" height="15.0" fill="rgb(246,141,17)" rx="2" ry="2" />
<text  x="739.89" y="623.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_fmt (12 samples, 1.63%)</title><rect x="908.2" y="533" width="19.2" height="15.0" fill="rgb(244,126,28)" rx="2" ry="2" />
<text  x="911.21" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="549" width="1.6" height="15.0" fill="rgb(254,86,54)" rx="2" ry="2" />
<text  x="398.86" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="517" width="1.6" height="15.0" fill="rgb(233,68,5)" rx="2" ry="2" />
<text  x="1191.40" y="527.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.14%)</title><rect x="1001.1" y="773" width="1.6" height="15.0" fill="rgb(229,206,47)" rx="2" ry="2" />
<text  x="1004.07" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5 samples, 0.68%)</title><rect x="400.7" y="645" width="8.0" height="15.0" fill="rgb(222,136,22)" rx="2" ry="2" />
<text  x="403.66" y="655.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (5 samples, 0.68%)</title><rect x="927.4" y="613" width="8.0" height="15.0" fill="rgb(217,91,34)" rx="2" ry="2" />
<text  x="930.42" y="623.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_str (1 samples, 0.14%)</title><rect x="906.6" y="597" width="1.6" height="15.0" fill="rgb(238,174,3)" rx="2" ry="2" />
<text  x="909.61" y="607.5" ></text>
</g>
<g >
<title>server (125 samples, 16.96%)</title><rect x="989.9" y="997" width="200.1" height="15.0" fill="rgb(237,179,40)" rx="2" ry="2" />
<text  x="992.86" y="1007.5" >server</text>
</g>
<g >
<title>[[kernel.kallsyms]] (37 samples, 5.02%)</title><rect x="46.8" y="581" width="59.3" height="15.0" fill="rgb(247,208,20)" rx="2" ry="2" />
<text  x="49.82" y="591.5" >[[kern..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="378.2" y="597" width="3.3" height="15.0" fill="rgb(213,96,35)" rx="2" ry="2" />
<text  x="381.25" y="607.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::lock (4 samples, 0.54%)</title><rect x="977.1" y="725" width="6.4" height="15.0" fill="rgb(220,136,5)" rx="2" ry="2" />
<text  x="980.06" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="941.8" y="613" width="3.2" height="15.0" fill="rgb(241,170,48)" rx="2" ry="2" />
<text  x="944.83" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10 samples, 1.36%)</title><rect x="82.0" y="261" width="16.1" height="15.0" fill="rgb(211,151,25)" rx="2" ry="2" />
<text  x="85.05" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="565" width="1.6" height="15.0" fill="rgb(213,109,41)" rx="2" ry="2" />
<text  x="1191.40" y="575.5" ></text>
</g>
<g >
<title>core::str::run_utf8_validation (1 samples, 0.14%)</title><rect x="171.7" y="741" width="1.6" height="15.0" fill="rgb(249,4,50)" rx="2" ry="2" />
<text  x="174.71" y="751.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_str (5 samples, 0.68%)</title><rect x="927.4" y="645" width="8.0" height="15.0" fill="rgb(243,117,48)" rx="2" ry="2" />
<text  x="930.42" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (2 samples, 0.27%)</title><rect x="378.2" y="709" width="3.3" height="15.0" fill="rgb(223,49,48)" rx="2" ry="2" />
<text  x="381.25" y="719.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.27%)</title><rect x="901.8" y="645" width="3.2" height="15.0" fill="rgb(240,3,49)" rx="2" ry="2" />
<text  x="904.80" y="655.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="906.6" y="565" width="1.6" height="15.0" fill="rgb(218,179,23)" rx="2" ry="2" />
<text  x="909.61" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (91 samples, 12.35%)</title><rect x="752.9" y="421" width="145.7" height="15.0" fill="rgb(223,56,20)" rx="2" ry="2" />
<text  x="755.90" y="431.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 2.99%)</title><rect x="213.3" y="597" width="35.3" height="15.0" fill="rgb(244,185,14)" rx="2" ry="2" />
<text  x="216.34" y="607.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (41 samples, 5.56%)</title><rect x="632.8" y="325" width="65.7" height="15.0" fill="rgb(218,124,12)" rx="2" ry="2" />
<text  x="635.82" y="335.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="480.7" y="261" width="11.2" height="15.0" fill="rgb(227,219,37)" rx="2" ry="2" />
<text  x="483.72" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (95 samples, 12.89%)</title><rect x="559.2" y="725" width="152.1" height="15.0" fill="rgb(233,94,43)" rx="2" ry="2" />
<text  x="562.17" y="735.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.27%)</title><rect x="363.8" y="677" width="3.2" height="15.0" fill="rgb(248,156,22)" rx="2" ry="2" />
<text  x="366.84" y="687.5" ></text>
</g>
<g >
<title>core::fmt::builders::DebugTuple::field (6 samples, 0.81%)</title><rect x="720.9" y="693" width="9.6" height="15.0" fill="rgb(231,222,1)" rx="2" ry="2" />
<text  x="723.88" y="703.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (98 samples, 13.30%)</title><rect x="741.7" y="581" width="156.9" height="15.0" fill="rgb(211,71,50)" rx="2" ry="2" />
<text  x="744.70" y="591.5" >&lt;std::io::stdio::Std..</text>
</g>
<g >
<title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::hb26e39676675046f (121 samples, 16.42%)</title><rect x="993.1" y="853" width="193.7" height="15.0" fill="rgb(220,145,9)" rx="2" ry="2" />
<text  x="996.07" y="863.5" >std::rt::lang_start_inter..</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="919.4" y="453" width="1.6" height="15.0" fill="rgb(221,225,43)" rx="2" ry="2" />
<text  x="922.42" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="325" width="1.6" height="15.0" fill="rgb(235,59,50)" rx="2" ry="2" />
<text  x="1191.40" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="736.9" y="581" width="1.6" height="15.0" fill="rgb(231,2,33)" rx="2" ry="2" />
<text  x="739.89" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.81%)</title><rect x="535.2" y="581" width="9.6" height="15.0" fill="rgb(232,13,19)" rx="2" ry="2" />
<text  x="538.16" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="40.4" y="741" width="1.6" height="15.0" fill="rgb(223,7,26)" rx="2" ry="2" />
<text  x="43.42" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="581" width="1.6" height="15.0" fill="rgb(242,165,25)" rx="2" ry="2" />
<text  x="398.86" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (94 samples, 12.75%)</title><rect x="748.1" y="469" width="150.5" height="15.0" fill="rgb(206,100,29)" rx="2" ry="2" />
<text  x="751.10" y="479.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.14%)</title><rect x="738.5" y="581" width="1.6" height="15.0" fill="rgb(209,119,39)" rx="2" ry="2" />
<text  x="741.49" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30 samples, 4.07%)</title><rect x="456.7" y="533" width="48.0" height="15.0" fill="rgb(232,120,3)" rx="2" ry="2" />
<text  x="459.70" y="543.5" >[[ke..</text>
</g>
<g >
<title>__libc_write (98 samples, 13.30%)</title><rect x="741.7" y="533" width="156.9" height="15.0" fill="rgb(238,220,10)" rx="2" ry="2" />
<text  x="744.70" y="543.5" >__libc_write</text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 1.49%)</title><rect x="80.4" y="309" width="17.7" height="15.0" fill="rgb(248,171,15)" rx="2" ry="2" />
<text  x="83.45" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 2.17%)</title><rect x="72.4" y="421" width="25.7" height="15.0" fill="rgb(230,151,23)" rx="2" ry="2" />
<text  x="75.44" y="431.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (22 samples, 2.99%)</title><rect x="213.3" y="613" width="35.3" height="15.0" fill="rgb(221,25,27)" rx="2" ry="2" />
<text  x="216.34" y="623.5" >[[..</text>
</g>
<g >
<title>__GI___pthread_mutex_trylock (1 samples, 0.14%)</title><rect x="21.2" y="805" width="1.6" height="15.0" fill="rgb(243,178,6)" rx="2" ry="2" />
<text  x="24.21" y="815.5" ></text>
</g>
<g >
<title>std::io::stdio::_print (170 samples, 23.07%)</title><rect x="711.3" y="821" width="272.2" height="15.0" fill="rgb(216,70,50)" rx="2" ry="2" />
<text  x="714.28" y="831.5" >std::io::stdio::_print</text>
</g>
<g >
<title>tcp_in_window (2 samples, 0.27%)</title><rect x="703.3" y="421" width="3.2" height="15.0" fill="rgb(239,45,25)" rx="2" ry="2" />
<text  x="706.27" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.54%)</title><rect x="30.8" y="805" width="6.4" height="15.0" fill="rgb(233,152,44)" rx="2" ry="2" />
<text  x="33.81" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16 samples, 2.17%)</title><rect x="469.5" y="453" width="25.6" height="15.0" fill="rgb(220,57,2)" rx="2" ry="2" />
<text  x="472.51" y="463.5" >[..</text>
</g>
<g >
<title>std::io::Write::write_fmt (5 samples, 0.68%)</title><rect x="916.2" y="485" width="8.0" height="15.0" fill="rgb(236,133,18)" rx="2" ry="2" />
<text  x="919.21" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (122 samples, 16.55%)</title><rect x="993.1" y="965" width="195.3" height="15.0" fill="rgb(214,43,45)" rx="2" ry="2" />
<text  x="996.07" y="975.5" >__libc_start_main</text>
</g>
<g >
<title>core::mem::swap (2 samples, 0.27%)</title><rect x="969.1" y="661" width="3.2" height="15.0" fill="rgb(243,192,15)" rx="2" ry="2" />
<text  x="972.05" y="671.5" ></text>
</g>
<g >
<title>&lt;std::net::addr::SocketAddr as core::fmt::Debug&gt;::fmt (14 samples, 1.90%)</title><rect x="905.0" y="645" width="22.4" height="15.0" fill="rgb(236,174,37)" rx="2" ry="2" />
<text  x="908.01" y="655.5" >&lt;..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (80 samples, 10.85%)</title><rect x="583.2" y="597" width="128.1" height="15.0" fill="rgb(212,90,12)" rx="2" ry="2" />
<text  x="586.19" y="607.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40 samples, 5.43%)</title><rect x="440.7" y="581" width="64.0" height="15.0" fill="rgb(212,195,39)" rx="2" ry="2" />
<text  x="443.69" y="591.5" >[[kerne..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="40.4" y="773" width="1.6" height="15.0" fill="rgb(247,52,54)" rx="2" ry="2" />
<text  x="43.42" y="783.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_str (2 samples, 0.27%)</title><rect x="901.8" y="661" width="3.2" height="15.0" fill="rgb(243,149,29)" rx="2" ry="2" />
<text  x="904.80" y="671.5" ></text>
</g>
<g >
<title>pthread_getattr_np (1 samples, 0.14%)</title><rect x="1186.8" y="869" width="1.6" height="15.0" fill="rgb(234,144,51)" rx="2" ry="2" />
<text  x="1189.80" y="879.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (121 samples, 16.42%)</title><rect x="993.1" y="917" width="193.7" height="15.0" fill="rgb(232,33,45)" rx="2" ry="2" />
<text  x="996.07" y="927.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>getdelim (1 samples, 0.14%)</title><rect x="1186.8" y="853" width="1.6" height="15.0" fill="rgb(231,85,44)" rx="2" ry="2" />
<text  x="1189.80" y="863.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.41%)</title><rect x="11.6" y="821" width="4.8" height="15.0" fill="rgb(227,173,11)" rx="2" ry="2" />
<text  x="14.60" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 1.22%)</title><rect x="480.7" y="293" width="14.4" height="15.0" fill="rgb(206,22,29)" rx="2" ry="2" />
<text  x="483.72" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.41%)</title><rect x="1004.3" y="773" width="4.8" height="15.0" fill="rgb(207,75,18)" rx="2" ry="2" />
<text  x="1007.27" y="783.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (71 samples, 9.63%)</title><rect x="258.2" y="741" width="113.6" height="15.0" fill="rgb(209,178,7)" rx="2" ry="2" />
<text  x="261.17" y="751.5" >std::sys_commo..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.14%)</title><rect x="933.8" y="581" width="1.6" height="15.0" fill="rgb(214,88,49)" rx="2" ry="2" />
<text  x="936.83" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="693" width="1.6" height="15.0" fill="rgb(208,124,3)" rx="2" ry="2" />
<text  x="1004.07" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (94 samples, 12.75%)</title><rect x="560.8" y="693" width="150.5" height="15.0" fill="rgb(239,223,40)" rx="2" ry="2" />
<text  x="563.77" y="703.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="738.5" y="565" width="1.6" height="15.0" fill="rgb(207,77,40)" rx="2" ry="2" />
<text  x="741.49" y="575.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (1 samples, 0.14%)</title><rect x="725.7" y="613" width="1.6" height="15.0" fill="rgb(221,90,45)" rx="2" ry="2" />
<text  x="728.69" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="695.3" y="133" width="3.2" height="15.0" fill="rgb(213,185,14)" rx="2" ry="2" />
<text  x="698.26" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20 samples, 2.71%)</title><rect x="72.4" y="437" width="32.1" height="15.0" fill="rgb(229,181,47)" rx="2" ry="2" />
<text  x="75.44" y="447.5" >[[..</text>
</g>
<g >
<title>std::thread::spawn (1 samples, 0.14%)</title><rect x="1002.7" y="789" width="1.6" height="15.0" fill="rgb(226,81,16)" rx="2" ry="2" />
<text  x="1005.67" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9 samples, 1.22%)</title><rect x="948.2" y="613" width="14.4" height="15.0" fill="rgb(234,98,29)" rx="2" ry="2" />
<text  x="951.24" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="261" width="1.6" height="15.0" fill="rgb(236,74,50)" rx="2" ry="2" />
<text  x="1191.40" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (1 samples, 0.14%)</title><rect x="898.6" y="629" width="1.6" height="15.0" fill="rgb(219,67,12)" rx="2" ry="2" />
<text  x="901.60" y="639.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="724.1" y="613" width="1.6" height="15.0" fill="rgb(230,159,27)" rx="2" ry="2" />
<text  x="727.08" y="623.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::Maybe&lt;W&gt; as std::io::Write&gt;::write (98 samples, 13.30%)</title><rect x="741.7" y="597" width="156.9" height="15.0" fill="rgb(246,45,37)" rx="2" ry="2" />
<text  x="744.70" y="607.5" >&lt;std::io::stdio::May..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (13 samples, 1.76%)</title><rect x="474.3" y="357" width="20.8" height="15.0" fill="rgb(251,175,25)" rx="2" ry="2" />
<text  x="477.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7 samples, 0.95%)</title><rect x="480.7" y="245" width="11.2" height="15.0" fill="rgb(222,49,48)" rx="2" ry="2" />
<text  x="483.72" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="789" width="1.6" height="15.0" fill="rgb(207,159,52)" rx="2" ry="2" />
<text  x="1189.80" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.14%)</title><rect x="738.5" y="549" width="1.6" height="15.0" fill="rgb(240,111,4)" rx="2" ry="2" />
<text  x="741.49" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="629" width="1.6" height="15.0" fill="rgb(232,186,50)" rx="2" ry="2" />
<text  x="1004.07" y="639.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.14%)</title><rect x="698.5" y="453" width="1.6" height="15.0" fill="rgb(234,99,51)" rx="2" ry="2" />
<text  x="701.47" y="463.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (1 samples, 0.14%)</title><rect x="991.5" y="885" width="1.6" height="15.0" fill="rgb(226,18,8)" rx="2" ry="2" />
<text  x="994.47" y="895.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (40 samples, 5.43%)</title><rect x="42.0" y="789" width="64.1" height="15.0" fill="rgb(252,115,24)" rx="2" ry="2" />
<text  x="45.02" y="799.5" >serde_j..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (56 samples, 7.60%)</title><rect x="1093.9" y="661" width="89.7" height="15.0" fill="rgb(222,96,27)" rx="2" ry="2" />
<text  x="1096.93" y="671.5" >[[kernel.k..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (24 samples, 3.26%)</title><rect x="507.9" y="805" width="38.5" height="15.0" fill="rgb(217,21,42)" rx="2" ry="2" />
<text  x="510.94" y="815.5" >ser..</text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.95%)</title><rect x="386.3" y="757" width="11.2" height="15.0" fill="rgb(216,209,36)" rx="2" ry="2" />
<text  x="389.26" y="767.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (1 samples, 0.14%)</title><rect x="1188.4" y="853" width="1.6" height="15.0" fill="rgb(208,136,42)" rx="2" ry="2" />
<text  x="1191.40" y="863.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4 samples, 0.54%)</title><rect x="977.1" y="677" width="6.4" height="15.0" fill="rgb(232,39,0)" rx="2" ry="2" />
<text  x="980.06" y="687.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.14%)</title><rect x="933.8" y="597" width="1.6" height="15.0" fill="rgb(242,69,8)" rx="2" ry="2" />
<text  x="936.83" y="607.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.14%)</title><rect x="367.0" y="677" width="1.6" height="15.0" fill="rgb(208,82,52)" rx="2" ry="2" />
<text  x="370.04" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="565" width="1.6" height="15.0" fill="rgb(227,89,26)" rx="2" ry="2" />
<text  x="1004.07" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="757" width="1.6" height="15.0" fill="rgb(254,148,11)" rx="2" ry="2" />
<text  x="1004.07" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60 samples, 8.14%)</title><rect x="1087.5" y="677" width="96.1" height="15.0" fill="rgb(219,138,10)" rx="2" ry="2" />
<text  x="1090.53" y="687.5" >[[kernel.ka..</text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="969.1" y="741" width="3.2" height="15.0" fill="rgb(216,94,44)" rx="2" ry="2" />
<text  x="972.05" y="751.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (38 samples, 5.16%)</title><rect x="901.8" y="709" width="60.8" height="15.0" fill="rgb(233,158,39)" rx="2" ry="2" />
<text  x="904.80" y="719.5" >&lt;std::..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (95 samples, 12.89%)</title><rect x="746.5" y="517" width="152.1" height="15.0" fill="rgb(223,45,24)" rx="2" ry="2" />
<text  x="749.50" y="527.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.14%)</title><rect x="922.6" y="437" width="1.6" height="15.0" fill="rgb(216,97,26)" rx="2" ry="2" />
<text  x="925.62" y="447.5" ></text>
</g>
<g >
<title>__libc_recv (69 samples, 9.36%)</title><rect x="258.2" y="693" width="110.4" height="15.0" fill="rgb(211,120,38)" rx="2" ry="2" />
<text  x="261.17" y="703.5" >__libc_recv</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="677" width="1.6" height="15.0" fill="rgb(228,132,24)" rx="2" ry="2" />
<text  x="1191.40" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6 samples, 0.81%)</title><rect x="399.1" y="693" width="9.6" height="15.0" fill="rgb(250,10,23)" rx="2" ry="2" />
<text  x="402.06" y="703.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 5.43%)</title><rect x="42.0" y="773" width="64.1" height="15.0" fill="rgb(213,92,52)" rx="2" ry="2" />
<text  x="45.02" y="783.5" >&lt;std::i..</text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::barrier (1 samples, 0.14%)</title><rect x="1002.7" y="805" width="1.6" height="15.0" fill="rgb(253,77,30)" rx="2" ry="2" />
<text  x="1005.67" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (3 samples, 0.41%)</title><rect x="371.8" y="741" width="4.8" height="15.0" fill="rgb(221,29,37)" rx="2" ry="2" />
<text  x="374.85" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::net::sockname (11 samples, 1.49%)</title><rect x="945.0" y="677" width="17.6" height="15.0" fill="rgb(244,128,0)" rx="2" ry="2" />
<text  x="948.03" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="197" width="1.6" height="15.0" fill="rgb(219,210,52)" rx="2" ry="2" />
<text  x="1191.40" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="293" width="1.6" height="15.0" fill="rgb(218,43,48)" rx="2" ry="2" />
<text  x="1191.40" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 1.90%)</title><rect x="75.6" y="357" width="22.5" height="15.0" fill="rgb(249,97,1)" rx="2" ry="2" />
<text  x="78.64" y="367.5" >[..</text>
</g>
<g >
<title>get_l4proto (1 samples, 0.14%)</title><rect x="98.1" y="405" width="1.6" height="15.0" fill="rgb(215,59,33)" rx="2" ry="2" />
<text  x="101.06" y="415.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.14%)</title><rect x="935.4" y="677" width="1.6" height="15.0" fill="rgb(229,131,9)" rx="2" ry="2" />
<text  x="938.43" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (91 samples, 12.35%)</title><rect x="565.6" y="629" width="145.7" height="15.0" fill="rgb(218,124,6)" rx="2" ry="2" />
<text  x="568.58" y="639.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1186.8" y="805" width="1.6" height="15.0" fill="rgb(222,216,29)" rx="2" ry="2" />
<text  x="1189.80" y="815.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.14%)</title><rect x="722.5" y="645" width="1.6" height="15.0" fill="rgb(246,50,49)" rx="2" ry="2" />
<text  x="725.48" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="1004.3" y="741" width="4.8" height="15.0" fill="rgb(221,99,5)" rx="2" ry="2" />
<text  x="1007.27" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2 samples, 0.27%)</title><rect x="378.2" y="645" width="3.3" height="15.0" fill="rgb(235,130,37)" rx="2" ry="2" />
<text  x="381.25" y="655.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (7 samples, 0.95%)</title><rect x="397.5" y="757" width="11.2" height="15.0" fill="rgb(226,139,38)" rx="2" ry="2" />
<text  x="400.46" y="767.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (3 samples, 0.41%)</title><rect x="725.7" y="645" width="4.8" height="15.0" fill="rgb(247,111,53)" rx="2" ry="2" />
<text  x="728.69" y="655.5" ></text>
</g>
<g >
<title>core::fmt::write (10 samples, 1.36%)</title><rect x="911.4" y="517" width="16.0" height="15.0" fill="rgb(251,109,15)" rx="2" ry="2" />
<text  x="914.41" y="527.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (2 samples, 0.27%)</title><rect x="989.9" y="949" width="3.2" height="15.0" fill="rgb(221,1,19)" rx="2" ry="2" />
<text  x="992.86" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81 samples, 10.99%)</title><rect x="1053.9" y="725" width="129.7" height="15.0" fill="rgb(229,57,53)" rx="2" ry="2" />
<text  x="1056.91" y="735.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (71 samples, 9.63%)</title><rect x="597.6" y="565" width="113.7" height="15.0" fill="rgb(229,93,48)" rx="2" ry="2" />
<text  x="600.60" y="575.5" >[[kernel.kalls..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4 samples, 0.54%)</title><rect x="402.3" y="597" width="6.4" height="15.0" fill="rgb(220,116,33)" rx="2" ry="2" />
<text  x="405.27" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11 samples, 1.49%)</title><rect x="477.5" y="325" width="17.6" height="15.0" fill="rgb(238,2,43)" rx="2" ry="2" />
<text  x="480.52" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (55 samples, 7.46%)</title><rect x="620.0" y="485" width="88.1" height="15.0" fill="rgb(219,47,39)" rx="2" ry="2" />
<text  x="623.01" y="495.5" >[[kernel.k..</text>
</g>
<g >
<title>ipv4_conntrack_local (3 samples, 0.41%)</title><rect x="498.3" y="453" width="4.8" height="15.0" fill="rgb(251,205,30)" rx="2" ry="2" />
<text  x="501.33" y="463.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.41%)</title><rect x="733.7" y="677" width="4.8" height="15.0" fill="rgb(207,45,42)" rx="2" ry="2" />
<text  x="736.69" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="1004.3" y="725" width="4.8" height="15.0" fill="rgb(245,108,33)" rx="2" ry="2" />
<text  x="1007.27" y="735.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="722.5" y="565" width="1.6" height="15.0" fill="rgb(230,175,33)" rx="2" ry="2" />
<text  x="725.48" y="575.5" ></text>
</g>
<g >
<title>__libc_send (23 samples, 3.12%)</title><rect x="509.5" y="741" width="36.9" height="15.0" fill="rgb(242,27,54)" rx="2" ry="2" />
<text  x="512.54" y="751.5" >__l..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (62 samples, 8.41%)</title><rect x="612.0" y="533" width="99.3" height="15.0" fill="rgb(221,79,46)" rx="2" ry="2" />
<text  x="615.01" y="543.5" >[[kernel.kal..</text>
</g>
<g >
<title>std::io::Write::write_all (2 samples, 0.27%)</title><rect x="913.0" y="469" width="3.2" height="15.0" fill="rgb(241,30,26)" rx="2" ry="2" />
<text  x="916.01" y="479.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.14%)</title><rect x="1188.4" y="805" width="1.6" height="15.0" fill="rgb(224,60,47)" rx="2" ry="2" />
<text  x="1191.40" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.14%)</title><rect x="736.9" y="485" width="1.6" height="15.0" fill="rgb(224,138,25)" rx="2" ry="2" />
<text  x="739.89" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3 samples, 0.41%)</title><rect x="1004.3" y="709" width="4.8" height="15.0" fill="rgb(253,199,20)" rx="2" ry="2" />
<text  x="1007.27" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1007.5" y="629" width="1.6" height="15.0" fill="rgb(247,5,0)" rx="2" ry="2" />
<text  x="1010.48" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1188.4" y="501" width="1.6" height="15.0" fill="rgb(233,16,5)" rx="2" ry="2" />
<text  x="1191.40" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.14%)</title><rect x="900.2" y="661" width="1.6" height="15.0" fill="rgb(254,26,20)" rx="2" ry="2" />
<text  x="903.20" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14 samples, 1.90%)</title><rect x="522.3" y="693" width="22.5" height="15.0" fill="rgb(215,20,34)" rx="2" ry="2" />
<text  x="525.35" y="703.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="1001.1" y="581" width="1.6" height="15.0" fill="rgb(222,190,11)" rx="2" ry="2" />
<text  x="1004.07" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::thread_info::ThreadInfo::with (2 samples, 0.27%)</title><rect x="986.7" y="789" width="3.2" height="15.0" fill="rgb(210,200,26)" rx="2" ry="2" />
<text  x="989.66" y="799.5" ></text>
</g>
<g >
<title>serde_json::read::next_or_eof (2 samples, 0.27%)</title><rect x="378.2" y="757" width="3.3" height="15.0" fill="rgb(241,217,44)" rx="2" ry="2" />
<text  x="381.25" y="767.5" ></text>
</g>
<g >
<title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (12 samples, 1.63%)</title><rect x="908.2" y="549" width="19.2" height="15.0" fill="rgb(234,117,22)" rx="2" ry="2" />
<text  x="911.21" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53 samples, 7.19%)</title><rect x="279.0" y="645" width="84.8" height="15.0" fill="rgb(224,131,2)" rx="2" ry="2" />
<text  x="281.98" y="655.5" >[[kernel...</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (60 samples, 8.14%)</title><rect x="411.9" y="789" width="96.0" height="15.0" fill="rgb(253,194,9)" rx="2" ry="2" />
<text  x="414.87" y="799.5" >&lt;&amp;std::net:..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (92 samples, 12.48%)</title><rect x="564.0" y="677" width="147.3" height="15.0" fill="rgb(240,138,32)" rx="2" ry="2" />
<text  x="566.98" y="687.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="1188.4" y="917" width="1.6" height="15.0" fill="rgb(236,106,29)" rx="2" ry="2" />
<text  x="1191.40" y="927.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::write_str (1 samples, 0.14%)</title><rect x="736.9" y="597" width="1.6" height="15.0" fill="rgb(219,154,49)" rx="2" ry="2" />
<text  x="739.89" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.14%)</title><rect x="395.9" y="597" width="1.6" height="15.0" fill="rgb(229,89,27)" rx="2" ry="2" />
<text  x="398.86" y="607.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (2 samples, 0.27%)</title><rect x="989.9" y="981" width="3.2" height="15.0" fill="rgb(209,147,7)" rx="2" ry="2" />
<text  x="992.86" y="991.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (2 samples, 0.27%)</title><rect x="924.2" y="501" width="3.2" height="15.0" fill="rgb(222,28,47)" rx="2" ry="2" />
<text  x="927.22" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36 samples, 4.88%)</title><rect x="640.8" y="245" width="57.7" height="15.0" fill="rgb(211,65,6)" rx="2" ry="2" />
<text  x="643.83" y="255.5" >[[kern..</text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="722.5" y="549" width="1.6" height="15.0" fill="rgb(243,139,20)" rx="2" ry="2" />
<text  x="725.48" y="559.5" ></text>
</g>
</g>
</svg>
