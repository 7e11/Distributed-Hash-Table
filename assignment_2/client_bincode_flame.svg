<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1382.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1365" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1365" > </text>
<g id="frames">
<g >
<title>rand_core::SeedableRng::from_rng (1 samples, 0.18%)</title><rect x="1177.3" y="965" width="2.1" height="15.0" fill="rgb(231,143,12)" rx="2" ry="2" />
<text  x="1180.31" y="975.5" ></text>
</g>
<g >
<title>sock_sendmsg (3 samples, 0.54%)</title><rect x="1120.2" y="837" width="6.4" height="15.0" fill="rgb(226,126,31)" rx="2" ry="2" />
<text  x="1123.22" y="847.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::state_machine (1 samples, 0.18%)</title><rect x="50.2" y="1237" width="2.1" height="15.0" fill="rgb(206,160,50)" rx="2" ry="2" />
<text  x="53.18" y="1247.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.18%)</title><rect x="667.7" y="693" width="2.1" height="15.0" fill="rgb(247,103,53)" rx="2" ry="2" />
<text  x="670.67" y="703.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.18%)</title><rect x="490.0" y="597" width="2.2" height="15.0" fill="rgb(212,61,46)" rx="2" ry="2" />
<text  x="493.04" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.18%)</title><rect x="526.0" y="981" width="2.1" height="15.0" fill="rgb(221,28,54)" rx="2" ry="2" />
<text  x="528.99" y="991.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (1 samples, 0.18%)</title><rect x="1185.8" y="1189" width="2.1" height="15.0" fill="rgb(209,122,23)" rx="2" ry="2" />
<text  x="1188.77" y="1199.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.18%)</title><rect x="877.0" y="645" width="2.1" height="15.0" fill="rgb(247,162,28)" rx="2" ry="2" />
<text  x="880.03" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9 samples, 1.61%)</title><rect x="942.6" y="229" width="19.0" height="15.0" fill="rgb(231,189,27)" rx="2" ry="2" />
<text  x="945.58" y="239.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.36%)</title><rect x="948.9" y="181" width="4.3" height="15.0" fill="rgb(247,161,37)" rx="2" ry="2" />
<text  x="951.92" y="191.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (29 samples, 5.20%)</title><rect x="426.6" y="597" width="61.3" height="15.0" fill="rgb(240,200,33)" rx="2" ry="2" />
<text  x="429.59" y="607.5" >tcp_cl..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::connect_timeout (1 samples, 0.18%)</title><rect x="1185.8" y="1029" width="2.1" height="15.0" fill="rgb(224,135,28)" rx="2" ry="2" />
<text  x="1188.77" y="1039.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.18%)</title><rect x="667.7" y="725" width="2.1" height="15.0" fill="rgb(254,227,20)" rx="2" ry="2" />
<text  x="670.67" y="735.5" ></text>
</g>
<g >
<title>ip_queue_xmit (21 samples, 3.76%)</title><rect x="1037.7" y="725" width="44.5" height="15.0" fill="rgb(221,117,4)" rx="2" ry="2" />
<text  x="1040.74" y="735.5" >ip_q..</text>
</g>
<g >
<title>tcp_rcv_established (6 samples, 1.08%)</title><rect x="948.9" y="197" width="12.7" height="15.0" fill="rgb(210,189,20)" rx="2" ry="2" />
<text  x="951.92" y="207.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.18%)</title><rect x="1042.0" y="389" width="2.1" height="15.0" fill="rgb(246,167,28)" rx="2" ry="2" />
<text  x="1044.97" y="399.5" ></text>
</g>
<g >
<title>bincode::deserialize_from (190 samples, 34.05%)</title><rect x="126.3" y="1093" width="401.8" height="15.0" fill="rgb(210,110,14)" rx="2" ry="2" />
<text  x="129.31" y="1103.5" >bincode::deserialize_from</text>
</g>
<g >
<title>kfree (1 samples, 0.18%)</title><rect x="316.6" y="37" width="2.1" height="15.0" fill="rgb(211,22,36)" rx="2" ry="2" />
<text  x="319.63" y="47.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.18%)</title><rect x="318.7" y="117" width="2.2" height="15.0" fill="rgb(214,127,38)" rx="2" ry="2" />
<text  x="321.75" y="127.5" ></text>
</g>
<g >
<title>core::cmp::min (1 samples, 0.18%)</title><rect x="39.6" y="1189" width="2.1" height="15.0" fill="rgb(244,25,11)" rx="2" ry="2" />
<text  x="42.61" y="1199.5" ></text>
</g>
<g >
<title>client (558 samples, 100.00%)</title><rect x="10.0" y="1317" width="1180.0" height="15.0" fill="rgb(230,37,51)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >client</text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.18%)</title><rect x="1037.7" y="629" width="2.2" height="15.0" fill="rgb(215,57,39)" rx="2" ry="2" />
<text  x="1040.74" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="1181.5" y="1173" width="2.2" height="15.0" fill="rgb(233,18,40)" rx="2" ry="2" />
<text  x="1184.54" y="1183.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::len (3 samples, 0.54%)</title><rect x="120.0" y="1093" width="6.3" height="15.0" fill="rgb(240,229,10)" rx="2" ry="2" />
<text  x="122.96" y="1103.5" ></text>
</g>
<g >
<title>__netif_receive_skb (31 samples, 5.56%)</title><rect x="593.7" y="533" width="65.5" height="15.0" fill="rgb(217,99,9)" rx="2" ry="2" />
<text  x="596.66" y="543.5" >__netif..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (63 samples, 11.29%)</title><rect x="547.1" y="949" width="133.3" height="15.0" fill="rgb(213,196,21)" rx="2" ry="2" />
<text  x="550.13" y="959.5" >std::sys_common:..</text>
</g>
<g >
<title>tcp_ack (5 samples, 0.90%)</title><rect x="468.9" y="181" width="10.6" height="15.0" fill="rgb(208,178,35)" rx="2" ry="2" />
<text  x="471.89" y="191.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.18%)</title><rect x="320.9" y="357" width="2.1" height="15.0" fill="rgb(208,96,44)" rx="2" ry="2" />
<text  x="323.86" y="367.5" ></text>
</g>
<g >
<title>&lt;u32 as core::iter::range::Step&gt;::add_usize (1 samples, 0.18%)</title><rect x="1154.1" y="1093" width="2.1" height="15.0" fill="rgb(244,150,33)" rx="2" ry="2" />
<text  x="1157.05" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="1181.5" y="1157" width="2.2" height="15.0" fill="rgb(221,187,26)" rx="2" ry="2" />
<text  x="1184.54" y="1167.5" ></text>
</g>
<g >
<title>ip_finish_output2 (15 samples, 2.69%)</title><rect x="456.2" y="453" width="31.7" height="15.0" fill="rgb(237,198,29)" rx="2" ry="2" />
<text  x="459.20" y="463.5" >ip..</text>
</g>
<g >
<title>config::config::Config::refresh (1 samples, 0.18%)</title><rect x="48.1" y="1253" width="2.1" height="15.0" fill="rgb(217,85,21)" rx="2" ry="2" />
<text  x="51.06" y="1263.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.18%)</title><rect x="477.3" y="69" width="2.2" height="15.0" fill="rgb(237,192,28)" rx="2" ry="2" />
<text  x="480.35" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (15 samples, 2.69%)</title><rect x="940.5" y="341" width="31.7" height="15.0" fill="rgb(208,95,24)" rx="2" ry="2" />
<text  x="943.47" y="351.5" >__..</text>
</g>
<g >
<title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.18%)</title><rect x="31.1" y="1205" width="2.2" height="15.0" fill="rgb(246,187,18)" rx="2" ry="2" />
<text  x="34.15" y="1215.5" ></text>
</g>
<g >
<title>std::rt::lang_start (535 samples, 95.88%)</title><rect x="52.3" y="1253" width="1131.4" height="15.0" fill="rgb(235,167,4)" rx="2" ry="2" />
<text  x="55.29" y="1263.5" >std::rt::lang_start</text>
</g>
<g >
<title>process_backlog (19 samples, 3.41%)</title><rect x="1042.0" y="549" width="40.2" height="15.0" fill="rgb(213,90,38)" rx="2" ry="2" />
<text  x="1044.97" y="559.5" >pro..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.18%)</title><rect x="714.2" y="917" width="2.1" height="15.0" fill="rgb(222,106,23)" rx="2" ry="2" />
<text  x="717.19" y="927.5" ></text>
</g>
<g >
<title>c2_chacha::guts::diagonalize (2 samples, 0.36%)</title><rect x="18.5" y="1237" width="4.2" height="15.0" fill="rgb(240,153,13)" rx="2" ry="2" />
<text  x="21.46" y="1247.5" ></text>
</g>
<g >
<title>skb_free_head (2 samples, 0.36%)</title><rect x="473.1" y="117" width="4.2" height="15.0" fill="rgb(244,71,19)" rx="2" ry="2" />
<text  x="476.12" y="127.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (58 samples, 10.39%)</title><rect x="866.5" y="741" width="122.6" height="15.0" fill="rgb(231,188,25)" rx="2" ry="2" />
<text  x="869.45" y="751.5" >std::sys::unix:..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.18%)</title><rect x="716.3" y="1093" width="2.1" height="15.0" fill="rgb(222,167,27)" rx="2" ry="2" />
<text  x="719.31" y="1103.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.54%)</title><rect x="314.5" y="229" width="6.4" height="15.0" fill="rgb(232,122,6)" rx="2" ry="2" />
<text  x="317.52" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u32 (5 samples, 0.90%)</title><rect x="1118.1" y="997" width="10.6" height="15.0" fill="rgb(235,203,16)" rx="2" ry="2" />
<text  x="1121.10" y="1007.5" ></text>
</g>
<g >
<title>ip_local_out (36 samples, 6.45%)</title><rect x="587.3" y="693" width="76.1" height="15.0" fill="rgb(220,214,34)" rx="2" ry="2" />
<text  x="590.31" y="703.5" >ip_local..</text>
</g>
<g >
<title>schedule (3 samples, 0.54%)</title><rect x="223.6" y="597" width="6.3" height="15.0" fill="rgb(223,105,21)" rx="2" ry="2" />
<text  x="226.58" y="607.5" ></text>
</g>
<g >
<title>bincode::config::Config::deserialize_from (134 samples, 24.01%)</title><rect x="724.8" y="1077" width="283.3" height="15.0" fill="rgb(236,51,15)" rx="2" ry="2" />
<text  x="727.77" y="1087.5" >bincode::config::Config::deserialize_f..</text>
</g>
<g >
<title>core::mem::replace (1 samples, 0.18%)</title><rect x="325.1" y="773" width="2.1" height="15.0" fill="rgb(228,89,19)" rx="2" ry="2" />
<text  x="328.09" y="783.5" ></text>
</g>
<g >
<title>net_rx_action (18 samples, 3.23%)</title><rect x="934.1" y="373" width="38.1" height="15.0" fill="rgb(215,107,23)" rx="2" ry="2" />
<text  x="937.12" y="383.5" >net..</text>
</g>
<g >
<title>ip_local_deliver_finish (19 samples, 3.41%)</title><rect x="1042.0" y="453" width="40.2" height="15.0" fill="rgb(207,153,16)" rx="2" ry="2" />
<text  x="1044.97" y="463.5" >ip_..</text>
</g>
<g >
<title>local_clock (1 samples, 0.18%)</title><rect x="14.2" y="1061" width="2.1" height="15.0" fill="rgb(254,36,42)" rx="2" ry="2" />
<text  x="17.23" y="1071.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (2 samples, 0.36%)</title><rect x="284.9" y="853" width="4.2" height="15.0" fill="rgb(213,229,49)" rx="2" ry="2" />
<text  x="287.91" y="863.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.18%)</title><rect x="1107.5" y="757" width="2.1" height="15.0" fill="rgb(244,17,36)" rx="2" ry="2" />
<text  x="1110.53" y="767.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.18%)</title><rect x="1037.7" y="661" width="2.2" height="15.0" fill="rgb(241,128,28)" rx="2" ry="2" />
<text  x="1040.74" y="671.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.18%)</title><rect x="513.3" y="821" width="2.1" height="15.0" fill="rgb(232,51,44)" rx="2" ry="2" />
<text  x="516.30" y="831.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (2 samples, 0.36%)</title><rect x="1044.1" y="357" width="4.2" height="15.0" fill="rgb(207,85,36)" rx="2" ry="2" />
<text  x="1047.09" y="367.5" ></text>
</g>
<g >
<title>net_rx_action (19 samples, 3.41%)</title><rect x="1042.0" y="565" width="40.2" height="15.0" fill="rgb(253,224,24)" rx="2" ry="2" />
<text  x="1044.97" y="575.5" >net..</text>
</g>
<g >
<title>ip_local_deliver_finish (10 samples, 1.79%)</title><rect x="942.6" y="261" width="21.1" height="15.0" fill="rgb(246,115,32)" rx="2" ry="2" />
<text  x="945.58" y="271.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (1 samples, 0.18%)</title><rect x="109.4" y="837" width="2.1" height="15.0" fill="rgb(249,193,32)" rx="2" ry="2" />
<text  x="112.39" y="847.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_from_seed (189 samples, 33.87%)</title><rect x="128.4" y="1045" width="399.7" height="15.0" fill="rgb(217,82,1)" rx="2" ry="2" />
<text  x="131.42" y="1055.5" >bincode::internal::deserialize_from_seed</text>
</g>
<g >
<title>__tcp_transmit_skb (32 samples, 5.73%)</title><rect x="910.9" y="549" width="67.6" height="15.0" fill="rgb(229,17,27)" rx="2" ry="2" />
<text  x="913.86" y="559.5" >__tcp_t..</text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.72%)</title><rect x="504.8" y="789" width="8.5" height="15.0" fill="rgb(243,120,20)" rx="2" ry="2" />
<text  x="507.84" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (121 samples, 21.68%)</title><rect x="750.1" y="981" width="255.9" height="15.0" fill="rgb(238,19,49)" rx="2" ry="2" />
<text  x="753.14" y="991.5" >&lt;&amp;mut bincode::de::Deserializer&lt;R,..</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.18%)</title><rect x="946.8" y="197" width="2.1" height="15.0" fill="rgb(221,226,36)" rx="2" ry="2" />
<text  x="949.81" y="207.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.36%)</title><rect x="1183.7" y="1285" width="4.2" height="15.0" fill="rgb(213,54,34)" rx="2" ry="2" />
<text  x="1186.66" y="1295.5" ></text>
</g>
<g >
<title>inet_recvmsg (6 samples, 1.08%)</title><rect x="312.4" y="581" width="12.7" height="15.0" fill="rgb(250,40,14)" rx="2" ry="2" />
<text  x="315.40" y="591.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (3 samples, 0.54%)</title><rect x="1025.1" y="789" width="6.3" height="15.0" fill="rgb(215,119,39)" rx="2" ry="2" />
<text  x="1028.05" y="799.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (6 samples, 1.08%)</title><rect x="312.4" y="725" width="12.7" height="15.0" fill="rgb(242,66,36)" rx="2" ry="2" />
<text  x="315.40" y="735.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.18%)</title><rect x="67.1" y="981" width="2.1" height="15.0" fill="rgb(238,70,3)" rx="2" ry="2" />
<text  x="70.10" y="991.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (6 samples, 1.08%)</title><rect x="312.4" y="709" width="12.7" height="15.0" fill="rgb(245,210,37)" rx="2" ry="2" />
<text  x="315.40" y="719.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 1.97%)</title><rect x="1145.6" y="1109" width="23.3" height="15.0" fill="rgb(233,116,42)" rx="2" ry="2" />
<text  x="1148.59" y="1119.5" >c..</text>
</g>
<g >
<title>wait_woken (5 samples, 0.90%)</title><rect x="887.6" y="581" width="10.6" height="15.0" fill="rgb(240,161,20)" rx="2" ry="2" />
<text  x="890.60" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (20 samples, 3.58%)</title><rect x="301.8" y="837" width="42.3" height="15.0" fill="rgb(251,97,19)" rx="2" ry="2" />
<text  x="304.83" y="847.5" >&lt;&amp;m..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="1139.2" y="1077" width="2.2" height="15.0" fill="rgb(234,213,11)" rx="2" ry="2" />
<text  x="1142.25" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (3 samples, 0.54%)</title><rect x="1120.2" y="869" width="6.4" height="15.0" fill="rgb(211,142,18)" rx="2" ry="2" />
<text  x="1123.22" y="879.5" ></text>
</g>
<g >
<title>ipt_do_table (6 samples, 1.08%)</title><rect x="430.8" y="437" width="12.7" height="15.0" fill="rgb(234,139,5)" rx="2" ry="2" />
<text  x="433.82" y="447.5" ></text>
</g>
<g >
<title>tcp_send_ack (29 samples, 5.20%)</title><rect x="426.6" y="581" width="61.3" height="15.0" fill="rgb(227,60,26)" rx="2" ry="2" />
<text  x="429.59" y="591.5" >tcp_se..</text>
</g>
<g >
<title>&lt;serde::de::value::U32Deserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.18%)</title><rect x="758.6" y="869" width="2.1" height="15.0" fill="rgb(211,145,11)" rx="2" ry="2" />
<text  x="761.60" y="879.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.54%)</title><rect x="98.8" y="965" width="6.4" height="15.0" fill="rgb(251,85,15)" rx="2" ry="2" />
<text  x="101.82" y="975.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_SERIALIZE_FOR_Command::&lt;impl serde::ser::Serialize for cse403_distributed_hash_table::transport::Command&gt;::serialize (87 samples, 15.59%)</title><rect x="532.3" y="1045" width="184.0" height="15.0" fill="rgb(234,5,49)" rx="2" ry="2" />
<text  x="535.33" y="1055.5" >cse403_distributed_hash..</text>
</g>
<g >
<title>do_softirq.part.20 (3 samples, 0.54%)</title><rect x="314.5" y="373" width="6.4" height="15.0" fill="rgb(212,49,41)" rx="2" ry="2" />
<text  x="317.52" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.18%)</title><rect x="12.1" y="1237" width="2.1" height="15.0" fill="rgb(207,42,33)" rx="2" ry="2" />
<text  x="15.11" y="1247.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (24 samples, 4.30%)</title><rect x="1035.6" y="741" width="50.8" height="15.0" fill="rgb(224,83,37)" rx="2" ry="2" />
<text  x="1038.63" y="751.5" >__tcp..</text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::next (1 samples, 0.18%)</title><rect x="50.2" y="1269" width="2.1" height="15.0" fill="rgb(224,38,32)" rx="2" ry="2" />
<text  x="53.18" y="1279.5" ></text>
</g>
<g >
<title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (9 samples, 1.61%)</title><rect x="90.4" y="1045" width="19.0" height="15.0" fill="rgb(215,104,46)" rx="2" ry="2" />
<text  x="93.36" y="1055.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::new (1 samples, 0.18%)</title><rect x="519.6" y="1013" width="2.2" height="15.0" fill="rgb(232,85,8)" rx="2" ry="2" />
<text  x="522.64" y="1023.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.36%)</title><rect x="720.5" y="1093" width="4.3" height="15.0" fill="rgb(245,152,2)" rx="2" ry="2" />
<text  x="723.54" y="1103.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.18%)</title><rect x="657.1" y="469" width="2.1" height="15.0" fill="rgb(220,130,45)" rx="2" ry="2" />
<text  x="660.10" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.18%)</title><rect x="308.2" y="693" width="2.1" height="15.0" fill="rgb(254,198,35)" rx="2" ry="2" />
<text  x="311.17" y="703.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.36%)</title><rect x="790.3" y="597" width="4.3" height="15.0" fill="rgb(216,79,9)" rx="2" ry="2" />
<text  x="793.32" y="607.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::barrier_broadcast (1 samples, 0.18%)</title><rect x="1185.8" y="1061" width="2.1" height="15.0" fill="rgb(217,65,33)" rx="2" ry="2" />
<text  x="1188.77" y="1071.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.18%)</title><rect x="874.9" y="709" width="2.1" height="15.0" fill="rgb(214,180,44)" rx="2" ry="2" />
<text  x="877.91" y="719.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_mut (1 samples, 0.18%)</title><rect x="136.9" y="933" width="2.1" height="15.0" fill="rgb(211,59,38)" rx="2" ry="2" />
<text  x="139.88" y="943.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (10 samples, 1.79%)</title><rect x="693.0" y="933" width="21.2" height="15.0" fill="rgb(249,98,36)" rx="2" ry="2" />
<text  x="696.05" y="943.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.18%)</title><rect x="35.4" y="1189" width="2.1" height="15.0" fill="rgb(217,176,6)" rx="2" ry="2" />
<text  x="38.38" y="1199.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.18%)</title><rect x="263.8" y="757" width="2.1" height="15.0" fill="rgb(218,226,47)" rx="2" ry="2" />
<text  x="266.76" y="767.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h6518162fed411440 (534 samples, 95.70%)</title><rect x="52.3" y="1141" width="1129.2" height="15.0" fill="rgb(205,207,43)" rx="2" ry="2" />
<text  x="55.29" y="1151.5" >std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h6518162fed411440</text>
</g>
<g >
<title>cse403_distributed_hash_table::settings::parse_settings (1 samples, 0.18%)</title><rect x="48.1" y="1285" width="2.1" height="15.0" fill="rgb(205,182,37)" rx="2" ry="2" />
<text  x="51.06" y="1295.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (123 samples, 22.04%)</title><rect x="745.9" y="1013" width="260.1" height="15.0" fill="rgb(246,195,46)" rx="2" ry="2" />
<text  x="748.91" y="1023.5" >&lt;core::marker::PhantomData&lt;T&gt; as s..</text>
</g>
<g >
<title>client::get (288 samples, 51.61%)</title><rect x="111.5" y="1109" width="609.0" height="15.0" fill="rgb(224,57,10)" rx="2" ry="2" />
<text  x="114.51" y="1119.5" >client::get</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.18%)</title><rect x="105.2" y="1013" width="2.1" height="15.0" fill="rgb(235,209,49)" rx="2" ry="2" />
<text  x="108.16" y="1023.5" ></text>
</g>
<g >
<title>dev_queue_xmit (4 samples, 0.72%)</title><rect x="479.5" y="437" width="8.4" height="15.0" fill="rgb(217,66,27)" rx="2" ry="2" />
<text  x="482.46" y="447.5" ></text>
</g>
<g >
<title>ip_local_deliver (29 samples, 5.20%)</title><rect x="595.8" y="469" width="61.3" height="15.0" fill="rgb(225,144,1)" rx="2" ry="2" />
<text  x="598.77" y="479.5" >ip_loc..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (8 samples, 1.43%)</title><rect x="1101.2" y="1013" width="16.9" height="15.0" fill="rgb(211,116,26)" rx="2" ry="2" />
<text  x="1104.18" y="1023.5" ></text>
</g>
<g >
<title>&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u32 (9 samples, 1.61%)</title><rect x="270.1" y="869" width="19.0" height="15.0" fill="rgb(207,48,35)" rx="2" ry="2" />
<text  x="273.11" y="879.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.18%)</title><rect x="443.5" y="421" width="2.1" height="15.0" fill="rgb(244,103,5)" rx="2" ry="2" />
<text  x="446.51" y="431.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.36%)</title><rect x="382.2" y="581" width="4.2" height="15.0" fill="rgb(221,154,31)" rx="2" ry="2" />
<text  x="385.19" y="591.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (1 samples, 0.18%)</title><rect x="325.1" y="741" width="2.1" height="15.0" fill="rgb(243,149,19)" rx="2" ry="2" />
<text  x="328.09" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.54%)</title><rect x="1107.5" y="885" width="6.4" height="15.0" fill="rgb(211,152,3)" rx="2" ry="2" />
<text  x="1110.53" y="895.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_str (6 samples, 1.08%)</title><rect x="1101.2" y="997" width="12.7" height="15.0" fill="rgb(218,202,3)" rx="2" ry="2" />
<text  x="1104.18" y="1007.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.36%)</title><rect x="492.2" y="581" width="4.2" height="15.0" fill="rgb(229,195,36)" rx="2" ry="2" />
<text  x="495.15" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (17 samples, 3.05%)</title><rect x="206.7" y="725" width="35.9" height="15.0" fill="rgb(224,27,24)" rx="2" ry="2" />
<text  x="209.67" y="735.5" >__x..</text>
</g>
<g >
<title>__softirqentry_text_start (19 samples, 3.41%)</title><rect x="1042.0" y="581" width="40.2" height="15.0" fill="rgb(251,81,21)" rx="2" ry="2" />
<text  x="1044.97" y="591.5" >__s..</text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.18%)</title><rect x="1111.8" y="773" width="2.1" height="15.0" fill="rgb(218,181,42)" rx="2" ry="2" />
<text  x="1114.76" y="783.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.18%)</title><rect x="1088.5" y="725" width="2.1" height="15.0" fill="rgb(243,53,40)" rx="2" ry="2" />
<text  x="1091.49" y="735.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.72%)</title><rect x="682.5" y="949" width="8.4" height="15.0" fill="rgb(243,79,2)" rx="2" ry="2" />
<text  x="685.47" y="959.5" ></text>
</g>
<g >
<title>process_backlog (31 samples, 5.56%)</title><rect x="593.7" y="549" width="65.5" height="15.0" fill="rgb(228,195,26)" rx="2" ry="2" />
<text  x="596.66" y="559.5" >process..</text>
</g>
<g >
<title>__ip_local_out (10 samples, 1.79%)</title><rect x="430.8" y="485" width="21.2" height="15.0" fill="rgb(223,120,46)" rx="2" ry="2" />
<text  x="433.82" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (2 samples, 0.36%)</title><rect x="265.9" y="805" width="4.2" height="15.0" fill="rgb(238,191,47)" rx="2" ry="2" />
<text  x="268.88" y="815.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.18%)</title><rect x="1177.3" y="869" width="2.1" height="15.0" fill="rgb(253,189,20)" rx="2" ry="2" />
<text  x="1180.31" y="879.5" ></text>
</g>
<g >
<title>&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u32 (6 samples, 1.08%)</title><rect x="826.3" y="869" width="12.7" height="15.0" fill="rgb(227,60,39)" rx="2" ry="2" />
<text  x="829.27" y="879.5" ></text>
</g>
<g >
<title>netif_rx (2 samples, 0.36%)</title><rect x="483.7" y="373" width="4.2" height="15.0" fill="rgb(241,166,13)" rx="2" ry="2" />
<text  x="486.69" y="383.5" ></text>
</g>
<g >
<title>c2_chacha::guts::round (8 samples, 1.43%)</title><rect x="22.7" y="1237" width="16.9" height="15.0" fill="rgb(246,106,2)" rx="2" ry="2" />
<text  x="25.69" y="1247.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.18%)</title><rect x="509.1" y="741" width="2.1" height="15.0" fill="rgb(237,27,38)" rx="2" ry="2" />
<text  x="512.07" y="751.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.18%)</title><rect x="14.2" y="1141" width="2.1" height="15.0" fill="rgb(222,185,30)" rx="2" ry="2" />
<text  x="17.23" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 7.35%)</title><rect x="1012.4" y="901" width="86.7" height="15.0" fill="rgb(250,51,1)" rx="2" ry="2" />
<text  x="1015.37" y="911.5" >do_syscall..</text>
</g>
<g >
<title>__fdget (1 samples, 0.18%)</title><rect x="498.5" y="629" width="2.1" height="15.0" fill="rgb(236,142,6)" rx="2" ry="2" />
<text  x="501.49" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 7.35%)</title><rect x="1012.4" y="917" width="86.7" height="15.0" fill="rgb(243,111,6)" rx="2" ry="2" />
<text  x="1015.37" y="927.5" >entry_SYSC..</text>
</g>
<g >
<title>std::panicking::try (1 samples, 0.18%)</title><rect x="1185.8" y="1173" width="2.1" height="15.0" fill="rgb(215,16,53)" rx="2" ry="2" />
<text  x="1188.77" y="1183.5" ></text>
</g>
<g >
<title>skb_clone (2 samples, 0.36%)</title><rect x="1082.2" y="725" width="4.2" height="15.0" fill="rgb(237,90,50)" rx="2" ry="2" />
<text  x="1085.15" y="735.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.18%)</title><rect x="707.8" y="789" width="2.2" height="15.0" fill="rgb(231,193,45)" rx="2" ry="2" />
<text  x="710.85" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 1.79%)</title><rect x="779.7" y="741" width="21.2" height="15.0" fill="rgb(220,211,43)" rx="2" ry="2" />
<text  x="782.75" y="751.5" ></text>
</g>
<g >
<title>bincode::config::Config::serialize_into (1 samples, 0.18%)</title><rect x="109.4" y="1093" width="2.1" height="15.0" fill="rgb(209,151,5)" rx="2" ry="2" />
<text  x="112.39" y="1103.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_from_custom_seed (184 samples, 32.97%)</title><rect x="139.0" y="1029" width="389.1" height="15.0" fill="rgb(252,93,47)" rx="2" ry="2" />
<text  x="142.00" y="1039.5" >bincode::internal::deserialize_from_custom_seed</text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.54%)</title><rect x="418.1" y="533" width="6.4" height="15.0" fill="rgb(242,22,41)" rx="2" ry="2" />
<text  x="421.14" y="543.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.54%)</title><rect x="784.0" y="581" width="6.3" height="15.0" fill="rgb(248,182,4)" rx="2" ry="2" />
<text  x="786.98" y="591.5" ></text>
</g>
<g >
<title>std::io::Read::read_to_string::_$u7b$$u7b$closure$u7d$$u7d$::hd510766ea8ab6a78 (1 samples, 0.18%)</title><rect x="43.8" y="1157" width="2.1" height="15.0" fill="rgb(243,134,34)" rx="2" ry="2" />
<text  x="46.84" y="1167.5" ></text>
</g>
<g >
<title>tcp_packet (2 samples, 0.36%)</title><rect x="927.8" y="421" width="4.2" height="15.0" fill="rgb(231,124,51)" rx="2" ry="2" />
<text  x="930.78" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (87 samples, 15.59%)</title><rect x="532.3" y="1029" width="184.0" height="15.0" fill="rgb(205,43,15)" rx="2" ry="2" />
<text  x="535.33" y="1039.5" >&lt;&amp;mut bincode::ser::Ser..</text>
</g>
<g >
<title>ktime_get (1 samples, 0.18%)</title><rect x="665.6" y="741" width="2.1" height="15.0" fill="rgb(226,68,48)" rx="2" ry="2" />
<text  x="668.56" y="751.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2 samples, 0.36%)</title><rect x="674.0" y="821" width="4.2" height="15.0" fill="rgb(236,175,4)" rx="2" ry="2" />
<text  x="677.01" y="831.5" ></text>
</g>
<g >
<title>std::io::Read::read_exact (65 samples, 11.65%)</title><rect x="866.5" y="805" width="137.4" height="15.0" fill="rgb(248,183,6)" rx="2" ry="2" />
<text  x="869.45" y="815.5" >std::io::Read::re..</text>
</g>
<g >
<title>do_softirq.part.20 (19 samples, 3.41%)</title><rect x="932.0" y="421" width="40.2" height="15.0" fill="rgb(249,163,10)" rx="2" ry="2" />
<text  x="935.01" y="431.5" >do_..</text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.36%)</title><rect x="796.7" y="677" width="4.2" height="15.0" fill="rgb(251,132,49)" rx="2" ry="2" />
<text  x="799.67" y="687.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.18%)</title><rect x="1097.0" y="853" width="2.1" height="15.0" fill="rgb(230,193,32)" rx="2" ry="2" />
<text  x="1099.95" y="863.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.18%)</title><rect x="792.4" y="581" width="2.2" height="15.0" fill="rgb(209,27,39)" rx="2" ry="2" />
<text  x="795.44" y="591.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::peek_token (1 samples, 0.18%)</title><rect x="50.2" y="1205" width="2.1" height="15.0" fill="rgb(206,98,12)" rx="2" ry="2" />
<text  x="53.18" y="1215.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.18%)</title><rect x="678.2" y="837" width="2.2" height="15.0" fill="rgb(228,87,43)" rx="2" ry="2" />
<text  x="681.24" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (14 samples, 2.51%)</title><rect x="58.6" y="1109" width="29.6" height="15.0" fill="rgb(234,22,27)" rx="2" ry="2" />
<text  x="61.64" y="1119.5" >&lt;a..</text>
</g>
<g >
<title>std::rt::lang_start_internal (535 samples, 95.88%)</title><rect x="52.3" y="1237" width="1131.4" height="15.0" fill="rgb(216,3,45)" rx="2" ry="2" />
<text  x="55.29" y="1247.5" >std::rt::lang_start_internal</text>
</g>
<g >
<title>__send (10 samples, 1.79%)</title><rect x="693.0" y="917" width="21.2" height="15.0" fill="rgb(225,147,19)" rx="2" ry="2" />
<text  x="696.05" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (69 samples, 12.37%)</title><rect x="356.8" y="789" width="145.9" height="15.0" fill="rgb(222,119,47)" rx="2" ry="2" />
<text  x="359.81" y="799.5" >&lt;&amp;std::net::tcp::T..</text>
</g>
<g >
<title>core::mem::swap (1 samples, 0.18%)</title><rect x="325.1" y="757" width="2.1" height="15.0" fill="rgb(216,107,18)" rx="2" ry="2" />
<text  x="328.09" y="767.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (7 samples, 1.25%)</title><rect x="464.7" y="261" width="14.8" height="15.0" fill="rgb(252,91,44)" rx="2" ry="2" />
<text  x="467.66" y="271.5" ></text>
</g>
<g >
<title>__recv (16 samples, 2.87%)</title><rect x="767.1" y="773" width="33.8" height="15.0" fill="rgb(224,35,28)" rx="2" ry="2" />
<text  x="770.06" y="783.5" >__..</text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (72 samples, 12.90%)</title><rect x="853.8" y="917" width="152.2" height="15.0" fill="rgb(253,138,39)" rx="2" ry="2" />
<text  x="856.76" y="927.5" >&lt;core::marker::Phan..</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.18%)</title><rect x="310.3" y="693" width="2.1" height="15.0" fill="rgb(224,222,3)" rx="2" ry="2" />
<text  x="313.29" y="703.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 1.25%)</title><rect x="255.3" y="837" width="14.8" height="15.0" fill="rgb(254,25,30)" rx="2" ry="2" />
<text  x="258.30" y="847.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.18%)</title><rect x="1139.2" y="1045" width="2.2" height="15.0" fill="rgb(240,10,51)" rx="2" ry="2" />
<text  x="1142.25" y="1055.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.54%)</title><rect x="1175.2" y="1077" width="6.3" height="15.0" fill="rgb(244,156,42)" rx="2" ry="2" />
<text  x="1178.20" y="1087.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.36%)</title><rect x="564.1" y="789" width="4.2" height="15.0" fill="rgb(242,1,2)" rx="2" ry="2" />
<text  x="567.05" y="799.5" ></text>
</g>
<g >
<title>sock_recvmsg (6 samples, 1.08%)</title><rect x="312.4" y="597" width="12.7" height="15.0" fill="rgb(234,55,26)" rx="2" ry="2" />
<text  x="315.40" y="607.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.18%)</title><rect x="902.4" y="549" width="2.1" height="15.0" fill="rgb(215,188,44)" rx="2" ry="2" />
<text  x="905.40" y="559.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.54%)</title><rect x="98.8" y="949" width="6.4" height="15.0" fill="rgb(224,161,32)" rx="2" ry="2" />
<text  x="101.82" y="959.5" ></text>
</g>
<g >
<title>inet_sendmsg (34 samples, 6.09%)</title><rect x="1020.8" y="837" width="71.9" height="15.0" fill="rgb(216,100,30)" rx="2" ry="2" />
<text  x="1023.82" y="847.5" >inet_sen..</text>
</g>
<g >
<title>sk_wait_data (3 samples, 0.54%)</title><rect x="784.0" y="645" width="6.3" height="15.0" fill="rgb(239,60,28)" rx="2" ry="2" />
<text  x="786.98" y="655.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.18%)</title><rect x="1187.9" y="1253" width="2.1" height="15.0" fill="rgb(209,124,13)" rx="2" ry="2" />
<text  x="1190.89" y="1263.5" ></text>
</g>
<g >
<title>core::alloc::Layout::from_size_align_unchecked (2 samples, 0.36%)</title><rect x="1135.0" y="1029" width="4.2" height="15.0" fill="rgb(215,149,34)" rx="2" ry="2" />
<text  x="1138.02" y="1039.5" ></text>
</g>
<g >
<title>std::io::Read::read_exact (6 samples, 1.08%)</title><rect x="312.4" y="757" width="12.7" height="15.0" fill="rgb(247,208,25)" rx="2" ry="2" />
<text  x="315.40" y="767.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (3 samples, 0.54%)</title><rect x="98.8" y="933" width="6.4" height="15.0" fill="rgb(242,183,24)" rx="2" ry="2" />
<text  x="101.82" y="943.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (2 samples, 0.36%)</title><rect x="259.5" y="773" width="4.3" height="15.0" fill="rgb(219,198,45)" rx="2" ry="2" />
<text  x="262.53" y="783.5" ></text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.18%)</title><rect x="449.9" y="405" width="2.1" height="15.0" fill="rgb(231,156,46)" rx="2" ry="2" />
<text  x="452.86" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="344.1" y="869" width="2.1" height="15.0" fill="rgb(238,102,12)" rx="2" ry="2" />
<text  x="347.12" y="879.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (69 samples, 12.37%)</title><rect x="356.8" y="773" width="145.9" height="15.0" fill="rgb(236,208,23)" rx="2" ry="2" />
<text  x="359.81" y="783.5" >std::sys_common::n..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.18%)</title><rect x="557.7" y="789" width="2.1" height="15.0" fill="rgb(249,167,30)" rx="2" ry="2" />
<text  x="560.71" y="799.5" ></text>
</g>
<g >
<title>ip_rcv_finish (19 samples, 3.41%)</title><rect x="1042.0" y="485" width="40.2" height="15.0" fill="rgb(254,72,6)" rx="2" ry="2" />
<text  x="1044.97" y="495.5" >ip_..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.18%)</title><rect x="48.1" y="1173" width="2.1" height="15.0" fill="rgb(233,190,11)" rx="2" ry="2" />
<text  x="51.06" y="1183.5" ></text>
</g>
<g >
<title>ip_queue_xmit (36 samples, 6.45%)</title><rect x="587.3" y="725" width="76.1" height="15.0" fill="rgb(244,134,25)" rx="2" ry="2" />
<text  x="590.31" y="735.5" >ip_queue..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (3 samples, 0.54%)</title><rect x="306.1" y="725" width="6.3" height="15.0" fill="rgb(245,18,43)" rx="2" ry="2" />
<text  x="309.06" y="735.5" ></text>
</g>
<g >
<title>__sys_sendto (3 samples, 0.54%)</title><rect x="1107.5" y="837" width="6.4" height="15.0" fill="rgb(240,88,9)" rx="2" ry="2" />
<text  x="1110.53" y="847.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::IoReader&lt;R&gt; as std::io::Read&gt;::read_exact (29 samples, 5.20%)</title><rect x="764.9" y="869" width="61.4" height="15.0" fill="rgb(219,225,8)" rx="2" ry="2" />
<text  x="767.95" y="879.5" >&lt;binco..</text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.36%)</title><rect x="483.7" y="405" width="4.2" height="15.0" fill="rgb(232,133,41)" rx="2" ry="2" />
<text  x="486.69" y="415.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.18%)</title><rect x="462.5" y="309" width="2.2" height="15.0" fill="rgb(240,32,23)" rx="2" ry="2" />
<text  x="465.54" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.54%)</title><rect x="331.4" y="613" width="6.4" height="15.0" fill="rgb(243,80,27)" rx="2" ry="2" />
<text  x="334.43" y="623.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="215.1" y="629" width="2.1" height="15.0" fill="rgb(238,9,17)" rx="2" ry="2" />
<text  x="218.13" y="639.5" ></text>
</g>
<g >
<title>config::source::Source::collect_to (2 samples, 0.36%)</title><rect x="43.8" y="1237" width="4.3" height="15.0" fill="rgb(229,158,40)" rx="2" ry="2" />
<text  x="46.84" y="1247.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2 samples, 0.36%)</title><rect x="483.7" y="341" width="4.2" height="15.0" fill="rgb(219,188,23)" rx="2" ry="2" />
<text  x="486.69" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.18%)</title><rect x="1177.3" y="885" width="2.1" height="15.0" fill="rgb(221,37,25)" rx="2" ry="2" />
<text  x="1180.31" y="895.5" ></text>
</g>
<g >
<title>core::mem::swap (6 samples, 1.08%)</title><rect x="1156.2" y="1093" width="12.7" height="15.0" fill="rgb(243,148,3)" rx="2" ry="2" />
<text  x="1159.16" y="1103.5" ></text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u32 (56 samples, 10.04%)</title><rect x="174.9" y="885" width="118.5" height="15.0" fill="rgb(209,4,32)" rx="2" ry="2" />
<text  x="177.95" y="895.5" >byteorder::io:..</text>
</g>
<g >
<title>process_backlog (1 samples, 0.18%)</title><rect x="659.2" y="565" width="2.1" height="15.0" fill="rgb(217,98,12)" rx="2" ry="2" />
<text  x="662.21" y="575.5" ></text>
</g>
<g >
<title>yaml_rust::scanner::Scanner&lt;T&gt;::next_token (1 samples, 0.18%)</title><rect x="50.2" y="1157" width="2.1" height="15.0" fill="rgb(221,47,23)" rx="2" ry="2" />
<text  x="53.18" y="1167.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::scan_next_token (1 samples, 0.18%)</title><rect x="50.2" y="1189" width="2.1" height="15.0" fill="rgb(223,188,2)" rx="2" ry="2" />
<text  x="53.18" y="1199.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (28 samples, 5.02%)</title><rect x="428.7" y="517" width="59.2" height="15.0" fill="rgb(225,148,48)" rx="2" ry="2" />
<text  x="431.71" y="527.5" >__ip_q..</text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u8 (66 samples, 11.83%)</title><rect x="864.3" y="837" width="139.6" height="15.0" fill="rgb(220,162,37)" rx="2" ry="2" />
<text  x="867.34" y="847.5" >byteorder::io::Re..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.18%)</title><rect x="16.3" y="1237" width="2.2" height="15.0" fill="rgb(251,187,22)" rx="2" ry="2" />
<text  x="19.34" y="1247.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.18%)</title><rect x="416.0" y="549" width="2.1" height="15.0" fill="rgb(246,199,22)" rx="2" ry="2" />
<text  x="419.02" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="1187.9" y="1285" width="2.1" height="15.0" fill="rgb(228,71,53)" rx="2" ry="2" />
<text  x="1190.89" y="1295.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.36%)</title><rect x="515.4" y="837" width="4.2" height="15.0" fill="rgb(252,52,3)" rx="2" ry="2" />
<text  x="518.41" y="847.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (6 samples, 1.08%)</title><rect x="1101.2" y="933" width="12.7" height="15.0" fill="rgb(224,77,32)" rx="2" ry="2" />
<text  x="1104.18" y="943.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.18%)</title><rect x="568.3" y="789" width="2.1" height="15.0" fill="rgb(250,115,7)" rx="2" ry="2" />
<text  x="571.28" y="799.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (68 samples, 12.19%)</title><rect x="547.1" y="981" width="143.8" height="15.0" fill="rgb(235,135,38)" rx="2" ry="2" />
<text  x="550.13" y="991.5" >std::io::Write::wr..</text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum::&lt;impl serde::de::EnumAccess for &amp;mut bincode::de::Deserializer&lt;R,O&gt;&gt;::variant_seed (47 samples, 8.42%)</title><rect x="754.4" y="933" width="99.4" height="15.0" fill="rgb(226,167,47)" rx="2" ry="2" />
<text  x="757.37" y="943.5" >&lt;&amp;mut bincod..</text>
</g>
<g >
<title>__recv (26 samples, 4.66%)</title><rect x="187.6" y="773" width="55.0" height="15.0" fill="rgb(251,109,7)" rx="2" ry="2" />
<text  x="190.63" y="783.5" >__recv</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.18%)</title><rect x="48.1" y="1205" width="2.1" height="15.0" fill="rgb(238,90,22)" rx="2" ry="2" />
<text  x="51.06" y="1215.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (3 samples, 0.54%)</title><rect x="898.2" y="597" width="6.3" height="15.0" fill="rgb(238,72,24)" rx="2" ry="2" />
<text  x="901.17" y="607.5" ></text>
</g>
<g >
<title>&lt;config::file::File&lt;T&gt; as config::source::Source&gt;::collect (2 samples, 0.36%)</title><rect x="43.8" y="1221" width="4.3" height="15.0" fill="rgb(241,128,23)" rx="2" ry="2" />
<text  x="46.84" y="1231.5" ></text>
</g>
<g >
<title>ip_output (4 samples, 0.72%)</title><rect x="314.5" y="437" width="8.5" height="15.0" fill="rgb(248,180,27)" rx="2" ry="2" />
<text  x="317.52" y="447.5" ></text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_CommandResponse::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (175 samples, 31.36%)</title><rect x="149.6" y="965" width="370.0" height="15.0" fill="rgb(211,79,41)" rx="2" ry="2" />
<text  x="152.57" y="975.5" >&lt;cse403_distributed_hash_table::transport::_IMPL_D..</text>
</g>
<g >
<title>&lt;config::file::source::file::FileSourceFile as config::file::source::FileSource&gt;::resolve (1 samples, 0.18%)</title><rect x="43.8" y="1205" width="2.1" height="15.0" fill="rgb(217,57,53)" rx="2" ry="2" />
<text  x="46.84" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.18%)</title><rect x="1185.8" y="1237" width="2.1" height="15.0" fill="rgb(211,108,36)" rx="2" ry="2" />
<text  x="1188.77" y="1247.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (1 samples, 0.18%)</title><rect x="308.2" y="709" width="2.1" height="15.0" fill="rgb(233,103,28)" rx="2" ry="2" />
<text  x="311.17" y="719.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (10 samples, 1.79%)</title><rect x="693.0" y="949" width="21.2" height="15.0" fill="rgb(243,5,39)" rx="2" ry="2" />
<text  x="696.05" y="959.5" ></text>
</g>
<g >
<title>__recv (69 samples, 12.37%)</title><rect x="356.8" y="725" width="145.9" height="15.0" fill="rgb(251,2,1)" rx="2" ry="2" />
<text  x="359.81" y="735.5" >__recv</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.18%)</title><rect x="714.2" y="901" width="2.1" height="15.0" fill="rgb(228,215,44)" rx="2" ry="2" />
<text  x="717.19" y="911.5" ></text>
</g>
<g >
<title>std::std_detect::detect::os::check_for (1 samples, 0.18%)</title><rect x="1177.3" y="901" width="2.1" height="15.0" fill="rgb(234,181,1)" rx="2" ry="2" />
<text  x="1180.31" y="911.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.18%)</title><rect x="109.4" y="981" width="2.1" height="15.0" fill="rgb(238,127,39)" rx="2" ry="2" />
<text  x="112.39" y="991.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (32 samples, 5.73%)</title><rect x="593.7" y="597" width="67.6" height="15.0" fill="rgb(208,145,9)" rx="2" ry="2" />
<text  x="596.66" y="607.5" >do_soft..</text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (1 samples, 0.18%)</title><rect x="714.2" y="869" width="2.1" height="15.0" fill="rgb(230,123,21)" rx="2" ry="2" />
<text  x="717.19" y="879.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.18%)</title><rect x="375.8" y="613" width="2.2" height="15.0" fill="rgb(218,67,32)" rx="2" ry="2" />
<text  x="378.84" y="623.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.90%)</title><rect x="272.2" y="853" width="10.6" height="15.0" fill="rgb(218,96,41)" rx="2" ry="2" />
<text  x="275.22" y="863.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (19 samples, 3.41%)</title><rect x="932.0" y="389" width="40.2" height="15.0" fill="rgb(246,6,25)" rx="2" ry="2" />
<text  x="935.01" y="399.5" >__s..</text>
</g>
<g >
<title>ip_rcv (30 samples, 5.38%)</title><rect x="595.8" y="501" width="63.4" height="15.0" fill="rgb(243,4,10)" rx="2" ry="2" />
<text  x="598.77" y="511.5" >ip_rcv</text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_tuple_variant (41 samples, 7.35%)</title><rect x="1012.4" y="1029" width="86.7" height="15.0" fill="rgb(219,35,49)" rx="2" ry="2" />
<text  x="1015.37" y="1039.5" >&lt;&amp;mut binc..</text>
</g>
<g >
<title>__skb_datagram_iter (5 samples, 0.90%)</title><rect x="416.0" y="581" width="10.6" height="15.0" fill="rgb(235,183,27)" rx="2" ry="2" />
<text  x="419.02" y="591.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (41 samples, 7.35%)</title><rect x="1012.4" y="949" width="86.7" height="15.0" fill="rgb(249,52,27)" rx="2" ry="2" />
<text  x="1015.37" y="959.5" >std::sys_c..</text>
</g>
<g >
<title>std::panicking::try::do_call (534 samples, 95.70%)</title><rect x="52.3" y="1173" width="1129.2" height="15.0" fill="rgb(227,224,5)" rx="2" ry="2" />
<text  x="55.29" y="1183.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>sock_zerocopy_put (1 samples, 0.18%)</title><rect x="559.8" y="805" width="2.1" height="15.0" fill="rgb(224,94,13)" rx="2" ry="2" />
<text  x="562.82" y="815.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.54%)</title><rect x="314.5" y="181" width="6.4" height="15.0" fill="rgb(218,123,25)" rx="2" ry="2" />
<text  x="317.52" y="191.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.36%)</title><rect x="496.4" y="645" width="4.2" height="15.0" fill="rgb(238,61,7)" rx="2" ry="2" />
<text  x="499.38" y="655.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.18%)</title><rect x="1185.8" y="1269" width="2.1" height="15.0" fill="rgb(241,165,38)" rx="2" ry="2" />
<text  x="1188.77" y="1279.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.18%)</title><rect x="1122.3" y="725" width="2.1" height="15.0" fill="rgb(243,106,12)" rx="2" ry="2" />
<text  x="1125.33" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (61 samples, 10.93%)</title><rect x="551.4" y="885" width="129.0" height="15.0" fill="rgb(234,8,3)" rx="2" ry="2" />
<text  x="554.36" y="895.5" >__x64_sys_sendto</text>
</g>
<g >
<title>ipv4_conntrack_local (4 samples, 0.72%)</title><rect x="443.5" y="453" width="8.5" height="15.0" fill="rgb(217,71,29)" rx="2" ry="2" />
<text  x="446.51" y="463.5" ></text>
</g>
<g >
<title>ip_local_deliver (11 samples, 1.97%)</title><rect x="942.6" y="277" width="23.2" height="15.0" fill="rgb(238,178,21)" rx="2" ry="2" />
<text  x="945.58" y="287.5" >i..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 11.11%)</title><rect x="549.2" y="917" width="131.2" height="15.0" fill="rgb(223,71,25)" rx="2" ry="2" />
<text  x="552.25" y="927.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="109.4" y="1029" width="2.1" height="15.0" fill="rgb(217,113,13)" rx="2" ry="2" />
<text  x="112.39" y="1039.5" ></text>
</g>
<g >
<title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.18%)</title><rect x="107.3" y="981" width="2.1" height="15.0" fill="rgb(254,60,45)" rx="2" ry="2" />
<text  x="110.28" y="991.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (1 samples, 0.18%)</title><rect x="995.4" y="725" width="2.2" height="15.0" fill="rgb(228,62,20)" rx="2" ry="2" />
<text  x="998.45" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::stack_overflow::imp::init (1 samples, 0.18%)</title><rect x="1181.5" y="1221" width="2.2" height="15.0" fill="rgb(250,203,10)" rx="2" ry="2" />
<text  x="1184.54" y="1231.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (3 samples, 0.54%)</title><rect x="701.5" y="789" width="6.3" height="15.0" fill="rgb(245,33,22)" rx="2" ry="2" />
<text  x="704.51" y="799.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.36%)</title><rect x="1044.1" y="341" width="4.2" height="15.0" fill="rgb(208,198,3)" rx="2" ry="2" />
<text  x="1047.09" y="351.5" ></text>
</g>
<g >
<title>core::cmp::max (1 samples, 0.18%)</title><rect x="43.8" y="1045" width="2.1" height="15.0" fill="rgb(251,17,5)" rx="2" ry="2" />
<text  x="46.84" y="1055.5" ></text>
</g>
<g >
<title>bincode::de::read::IoReader&lt;R&gt;::fill_buffer (10 samples, 1.79%)</title><rect x="303.9" y="773" width="21.2" height="15.0" fill="rgb(214,110,1)" rx="2" ry="2" />
<text  x="306.94" y="783.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.18%)</title><rect x="705.7" y="741" width="2.1" height="15.0" fill="rgb(229,4,39)" rx="2" ry="2" />
<text  x="708.73" y="751.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.18%)</title><rect x="81.9" y="949" width="2.1" height="15.0" fill="rgb(208,190,33)" rx="2" ry="2" />
<text  x="84.90" y="959.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (19 samples, 3.41%)</title><rect x="932.0" y="405" width="40.2" height="15.0" fill="rgb(217,202,18)" rx="2" ry="2" />
<text  x="935.01" y="415.5" >do_..</text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::load_mapping (1 samples, 0.18%)</title><rect x="50.2" y="1285" width="2.1" height="15.0" fill="rgb(249,81,13)" rx="2" ry="2" />
<text  x="53.18" y="1295.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (1 samples, 0.18%)</title><rect x="117.8" y="1077" width="2.2" height="15.0" fill="rgb(240,105,15)" rx="2" ry="2" />
<text  x="120.85" y="1087.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::size_hint (1 samples, 0.18%)</title><rect x="41.7" y="1157" width="2.1" height="15.0" fill="rgb(233,144,47)" rx="2" ry="2" />
<text  x="44.72" y="1167.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.54%)</title><rect x="314.5" y="325" width="6.4" height="15.0" fill="rgb(215,38,12)" rx="2" ry="2" />
<text  x="317.52" y="335.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.18%)</title><rect x="1122.3" y="709" width="2.1" height="15.0" fill="rgb(240,90,22)" rx="2" ry="2" />
<text  x="1125.33" y="719.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.18%)</title><rect x="81.9" y="965" width="2.1" height="15.0" fill="rgb(240,34,31)" rx="2" ry="2" />
<text  x="84.90" y="975.5" ></text>
</g>
<g >
<title>core::ptr::read (5 samples, 0.90%)</title><rect x="1158.3" y="1061" width="10.6" height="15.0" fill="rgb(207,107,34)" rx="2" ry="2" />
<text  x="1161.28" y="1071.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (37 samples, 6.63%)</title><rect x="587.3" y="741" width="78.3" height="15.0" fill="rgb(232,2,52)" rx="2" ry="2" />
<text  x="590.31" y="751.5" >__tcp_tra..</text>
</g>
<g >
<title>ip_send_check (1 samples, 0.18%)</title><rect x="323.0" y="437" width="2.1" height="15.0" fill="rgb(216,63,30)" rx="2" ry="2" />
<text  x="325.97" y="447.5" ></text>
</g>
<g >
<title>tcp_send_ack (34 samples, 6.09%)</title><rect x="906.6" y="581" width="71.9" height="15.0" fill="rgb(228,161,20)" rx="2" ry="2" />
<text  x="909.63" y="591.5" >tcp_send..</text>
</g>
<g >
<title>simple_copy_to_iter (3 samples, 0.54%)</title><rect x="898.2" y="565" width="6.3" height="15.0" fill="rgb(223,12,24)" rx="2" ry="2" />
<text  x="901.17" y="575.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.18%)</title><rect x="316.6" y="101" width="2.1" height="15.0" fill="rgb(237,148,28)" rx="2" ry="2" />
<text  x="319.63" y="111.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.18%)</title><rect x="925.7" y="421" width="2.1" height="15.0" fill="rgb(219,111,21)" rx="2" ry="2" />
<text  x="928.66" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u32 (41 samples, 7.35%)</title><rect x="1012.4" y="1013" width="86.7" height="15.0" fill="rgb(254,142,40)" rx="2" ry="2" />
<text  x="1015.37" y="1023.5" >&lt;&amp;mut binc..</text>
</g>
<g >
<title>tcp_push (2 samples, 0.36%)</title><rect x="1122.3" y="773" width="4.3" height="15.0" fill="rgb(217,2,3)" rx="2" ry="2" />
<text  x="1125.33" y="783.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (3 samples, 0.54%)</title><rect x="1120.2" y="789" width="6.4" height="15.0" fill="rgb(224,107,52)" rx="2" ry="2" />
<text  x="1123.22" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="760.7" y="917" width="2.1" height="15.0" fill="rgb(213,158,30)" rx="2" ry="2" />
<text  x="763.72" y="927.5" ></text>
</g>
<g >
<title>client::main (534 samples, 95.70%)</title><rect x="52.3" y="1125" width="1129.2" height="15.0" fill="rgb(218,172,50)" rx="2" ry="2" />
<text  x="55.29" y="1135.5" >client::main</text>
</g>
<g >
<title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.18%)</title><rect x="41.7" y="1189" width="2.1" height="15.0" fill="rgb(229,193,32)" rx="2" ry="2" />
<text  x="44.72" y="1199.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::connect_timeout (1 samples, 0.18%)</title><rect x="1185.8" y="1013" width="2.1" height="15.0" fill="rgb(226,118,3)" rx="2" ry="2" />
<text  x="1188.77" y="1023.5" ></text>
</g>
<g >
<title>__sys_recvfrom (63 samples, 11.29%)</title><rect x="367.4" y="661" width="133.2" height="15.0" fill="rgb(254,89,40)" rx="2" ry="2" />
<text  x="370.38" y="671.5" >__sys_recvfrom</text>
</g>
<g >
<title>kfree (1 samples, 0.18%)</title><rect x="955.3" y="85" width="2.1" height="15.0" fill="rgb(218,113,18)" rx="2" ry="2" />
<text  x="958.27" y="95.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (45 samples, 8.06%)</title><rect x="576.7" y="773" width="95.2" height="15.0" fill="rgb(226,36,37)" rx="2" ry="2" />
<text  x="579.74" y="783.5" >__tcp_push_..</text>
</g>
<g >
<title>page_fault (1 samples, 0.18%)</title><rect x="12.1" y="1269" width="2.1" height="15.0" fill="rgb(232,180,23)" rx="2" ry="2" />
<text  x="15.11" y="1279.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::parse (1 samples, 0.18%)</title><rect x="50.2" y="1253" width="2.1" height="15.0" fill="rgb(249,179,28)" rx="2" ry="2" />
<text  x="53.18" y="1263.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.72%)</title><rect x="889.7" y="517" width="8.5" height="15.0" fill="rgb(205,78,31)" rx="2" ry="2" />
<text  x="892.71" y="527.5" ></text>
</g>
<g >
<title>__sys_recvfrom (6 samples, 1.08%)</title><rect x="312.4" y="613" width="12.7" height="15.0" fill="rgb(244,108,47)" rx="2" ry="2" />
<text  x="315.40" y="623.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words1230 (2 samples, 0.36%)</title><rect x="18.5" y="1221" width="4.2" height="15.0" fill="rgb(245,95,19)" rx="2" ry="2" />
<text  x="21.46" y="1231.5" ></text>
</g>
<g >
<title>__send (41 samples, 7.35%)</title><rect x="1012.4" y="933" width="86.7" height="15.0" fill="rgb(235,141,37)" rx="2" ry="2" />
<text  x="1015.37" y="943.5" >__send</text>
</g>
<g >
<title>do_syscall_64 (51 samples, 9.14%)</title><rect x="877.0" y="693" width="107.9" height="15.0" fill="rgb(225,161,25)" rx="2" ry="2" />
<text  x="880.03" y="703.5" >do_syscall_64</text>
</g>
<g >
<title>skb_release_data (1 samples, 0.18%)</title><rect x="314.5" y="101" width="2.1" height="15.0" fill="rgb(232,181,42)" rx="2" ry="2" />
<text  x="317.52" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (19 samples, 3.41%)</title><rect x="1042.0" y="517" width="40.2" height="15.0" fill="rgb(217,119,12)" rx="2" ry="2" />
<text  x="1044.97" y="527.5" >__n..</text>
</g>
<g >
<title>security_socket_sendmsg (2 samples, 0.36%)</title><rect x="674.0" y="837" width="4.2" height="15.0" fill="rgb(249,31,28)" rx="2" ry="2" />
<text  x="677.01" y="847.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.18%)</title><rect x="663.4" y="709" width="2.2" height="15.0" fill="rgb(217,125,46)" rx="2" ry="2" />
<text  x="666.44" y="719.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.18%)</title><rect x="1132.9" y="1045" width="2.1" height="15.0" fill="rgb(232,27,52)" rx="2" ry="2" />
<text  x="1135.90" y="1055.5" ></text>
</g>
<g >
<title>bincode::config::Config::serialize_into (56 samples, 10.04%)</title><rect x="1010.3" y="1077" width="118.4" height="15.0" fill="rgb(235,49,7)" rx="2" ry="2" />
<text  x="1013.25" y="1087.5" >bincode::confi..</text>
</g>
<g >
<title>security_socket_sendmsg (2 samples, 0.36%)</title><rect x="1092.7" y="837" width="4.3" height="15.0" fill="rgb(208,9,47)" rx="2" ry="2" />
<text  x="1095.72" y="847.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::block_mapping_key (1 samples, 0.18%)</title><rect x="50.2" y="1221" width="2.1" height="15.0" fill="rgb(208,140,15)" rx="2" ry="2" />
<text  x="53.18" y="1231.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (534 samples, 95.70%)</title><rect x="52.3" y="1221" width="1129.2" height="15.0" fill="rgb(227,50,35)" rx="2" ry="2" />
<text  x="55.29" y="1231.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.18%)</title><rect x="1037.7" y="677" width="2.2" height="15.0" fill="rgb(226,49,30)" rx="2" ry="2" />
<text  x="1040.74" y="687.5" ></text>
</g>
<g >
<title>close (1 samples, 0.18%)</title><rect x="109.4" y="1045" width="2.1" height="15.0" fill="rgb(233,187,47)" rx="2" ry="2" />
<text  x="112.39" y="1055.5" ></text>
</g>
<g >
<title>iov_iter_init (2 samples, 0.36%)</title><rect x="551.4" y="853" width="4.2" height="15.0" fill="rgb(234,136,25)" rx="2" ry="2" />
<text  x="554.36" y="863.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.18%)</title><rect x="320.9" y="389" width="2.1" height="15.0" fill="rgb(213,33,28)" rx="2" ry="2" />
<text  x="323.86" y="399.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.18%)</title><rect x="426.6" y="501" width="2.1" height="15.0" fill="rgb(241,194,40)" rx="2" ry="2" />
<text  x="429.59" y="511.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.18%)</title><rect x="314.5" y="69" width="2.1" height="15.0" fill="rgb(232,38,11)" rx="2" ry="2" />
<text  x="317.52" y="79.5" ></text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u64 (6 samples, 1.08%)</title><rect x="331.4" y="757" width="12.7" height="15.0" fill="rgb(220,111,10)" rx="2" ry="2" />
<text  x="334.43" y="767.5" ></text>
</g>
<g >
<title>__check_heap_object (2 samples, 0.36%)</title><rect x="564.1" y="773" width="4.2" height="15.0" fill="rgb(222,5,39)" rx="2" ry="2" />
<text  x="567.05" y="783.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.43 (34 samples, 6.09%)</title><rect x="906.6" y="565" width="71.9" height="15.0" fill="rgb(246,228,19)" rx="2" ry="2" />
<text  x="909.63" y="575.5" >__tcp_se..</text>
</g>
<g >
<title>ip_finish_output (4 samples, 0.72%)</title><rect x="314.5" y="421" width="8.5" height="15.0" fill="rgb(247,108,23)" rx="2" ry="2" />
<text  x="317.52" y="431.5" ></text>
</g>
<g >
<title>client::put (201 samples, 36.02%)</title><rect x="720.5" y="1109" width="425.1" height="15.0" fill="rgb(254,4,46)" rx="2" ry="2" />
<text  x="723.54" y="1119.5" >client::put</text>
</g>
<g >
<title>tcp_sendmsg (55 samples, 9.86%)</title><rect x="557.7" y="821" width="116.3" height="15.0" fill="rgb(232,173,37)" rx="2" ry="2" />
<text  x="560.71" y="831.5" >tcp_sendmsg</text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.18%)</title><rect x="1027.2" y="741" width="2.1" height="15.0" fill="rgb(242,7,21)" rx="2" ry="2" />
<text  x="1030.17" y="751.5" ></text>
</g>
<g >
<title>ip_rcv_finish (7 samples, 1.25%)</title><rect x="464.7" y="293" width="14.8" height="15.0" fill="rgb(234,195,9)" rx="2" ry="2" />
<text  x="467.66" y="303.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.18%)</title><rect x="661.3" y="581" width="2.1" height="15.0" fill="rgb(251,115,43)" rx="2" ry="2" />
<text  x="664.33" y="591.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.18%)</title><rect x="109.4" y="885" width="2.1" height="15.0" fill="rgb(220,120,11)" rx="2" ry="2" />
<text  x="112.39" y="895.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (26 samples, 4.66%)</title><rect x="600.0" y="421" width="55.0" height="15.0" fill="rgb(238,166,28)" rx="2" ry="2" />
<text  x="603.00" y="431.5" >tcp_v..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.18%)</title><rect x="50.2" y="1109" width="2.1" height="15.0" fill="rgb(213,33,14)" rx="2" ry="2" />
<text  x="53.18" y="1119.5" ></text>
</g>
<g >
<title>process_backlog (9 samples, 1.61%)</title><rect x="460.4" y="357" width="19.1" height="15.0" fill="rgb(242,61,9)" rx="2" ry="2" />
<text  x="463.43" y="367.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_raw_non_null (4 samples, 0.72%)</title><rect x="130.5" y="965" width="8.5" height="15.0" fill="rgb(241,52,15)" rx="2" ry="2" />
<text  x="133.54" y="975.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.18%)</title><rect x="1177.3" y="1029" width="2.1" height="15.0" fill="rgb(246,54,0)" rx="2" ry="2" />
<text  x="1180.31" y="1039.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.18%)</title><rect x="217.2" y="629" width="2.2" height="15.0" fill="rgb(250,168,53)" rx="2" ry="2" />
<text  x="220.24" y="639.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.18%)</title><rect x="511.2" y="757" width="2.1" height="15.0" fill="rgb(213,17,7)" rx="2" ry="2" />
<text  x="514.18" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.72%)</title><rect x="800.9" y="837" width="8.5" height="15.0" fill="rgb(239,152,25)" rx="2" ry="2" />
<text  x="803.90" y="847.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.18%)</title><rect x="342.0" y="709" width="2.1" height="15.0" fill="rgb(249,194,35)" rx="2" ry="2" />
<text  x="345.01" y="719.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.18%)</title><rect x="885.5" y="565" width="2.1" height="15.0" fill="rgb(248,30,53)" rx="2" ry="2" />
<text  x="888.48" y="575.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (32 samples, 5.73%)</title><rect x="593.7" y="613" width="67.6" height="15.0" fill="rgb(205,126,52)" rx="2" ry="2" />
<text  x="596.66" y="623.5" >do_soft..</text>
</g>
<g >
<title>tcp_send_delayed_ack (4 samples, 0.72%)</title><rect x="600.0" y="357" width="8.5" height="15.0" fill="rgb(230,170,37)" rx="2" ry="2" />
<text  x="603.00" y="367.5" ></text>
</g>
<g >
<title>bincode::serialize_into (57 samples, 10.22%)</title><rect x="1008.1" y="1093" width="120.6" height="15.0" fill="rgb(234,207,16)" rx="2" ry="2" />
<text  x="1011.14" y="1103.5" >bincode::serial..</text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTupleVariant&gt;::serialize_field (13 samples, 2.33%)</title><rect x="1101.2" y="1029" width="27.5" height="15.0" fill="rgb(214,186,43)" rx="2" ry="2" />
<text  x="1104.18" y="1039.5" >&lt;..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.72%)</title><rect x="682.5" y="933" width="8.4" height="15.0" fill="rgb(231,156,16)" rx="2" ry="2" />
<text  x="685.47" y="943.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 2.51%)</title><rect x="58.6" y="1061" width="29.6" height="15.0" fill="rgb(244,164,25)" rx="2" ry="2" />
<text  x="61.64" y="1071.5" >al..</text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (5 samples, 0.90%)</title><rect x="1118.1" y="1013" width="10.6" height="15.0" fill="rgb(238,214,20)" rx="2" ry="2" />
<text  x="1121.10" y="1023.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (5 samples, 0.90%)</title><rect x="416.0" y="565" width="10.6" height="15.0" fill="rgb(221,119,1)" rx="2" ry="2" />
<text  x="419.02" y="575.5" ></text>
</g>
<g >
<title>tcp_rcv_established (5 samples, 0.90%)</title><rect x="468.9" y="197" width="10.6" height="15.0" fill="rgb(253,137,21)" rx="2" ry="2" />
<text  x="471.89" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.79%)</title><rect x="779.7" y="757" width="21.2" height="15.0" fill="rgb(210,210,3)" rx="2" ry="2" />
<text  x="782.75" y="767.5" ></text>
</g>
<g >
<title>__rust_dealloc (1 samples, 0.18%)</title><rect x="1128.7" y="1013" width="2.1" height="15.0" fill="rgb(212,121,16)" rx="2" ry="2" />
<text  x="1131.67" y="1023.5" ></text>
</g>
<g >
<title>bincode::config::Config::serialize_into (89 samples, 15.95%)</title><rect x="528.1" y="1077" width="188.2" height="15.0" fill="rgb(241,195,21)" rx="2" ry="2" />
<text  x="531.10" y="1087.5" >bincode::config::Config:..</text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.18%)</title><rect x="390.6" y="581" width="2.2" height="15.0" fill="rgb(250,157,35)" rx="2" ry="2" />
<text  x="393.65" y="591.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.18%)</title><rect x="320.9" y="373" width="2.1" height="15.0" fill="rgb(248,216,41)" rx="2" ry="2" />
<text  x="323.86" y="383.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.18%)</title><rect x="555.6" y="837" width="2.1" height="15.0" fill="rgb(216,16,23)" rx="2" ry="2" />
<text  x="558.59" y="847.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.18%)</title><rect x="426.6" y="517" width="2.1" height="15.0" fill="rgb(242,81,32)" rx="2" ry="2" />
<text  x="429.59" y="527.5" ></text>
</g>
<g >
<title>std::io::Read::read_exact (74 samples, 13.26%)</title><rect x="356.8" y="805" width="156.5" height="15.0" fill="rgb(206,197,51)" rx="2" ry="2" />
<text  x="359.81" y="815.5" >std::io::Read::read_..</text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.18%)</title><rect x="737.5" y="933" width="2.1" height="15.0" fill="rgb(222,192,41)" rx="2" ry="2" />
<text  x="740.46" y="943.5" ></text>
</g>
<g >
<title>ns_to_timespec (1 samples, 0.18%)</title><rect x="879.1" y="613" width="2.2" height="15.0" fill="rgb(252,217,19)" rx="2" ry="2" />
<text  x="882.14" y="623.5" ></text>
</g>
<g >
<title>config::config::Config::merge (1 samples, 0.18%)</title><rect x="48.1" y="1269" width="2.1" height="15.0" fill="rgb(219,81,40)" rx="2" ry="2" />
<text  x="51.06" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 1.25%)</title><rect x="73.4" y="1013" width="14.8" height="15.0" fill="rgb(228,170,34)" rx="2" ry="2" />
<text  x="76.44" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (176 samples, 31.54%)</title><rect x="147.5" y="981" width="372.1" height="15.0" fill="rgb(234,91,32)" rx="2" ry="2" />
<text  x="150.46" y="991.5" >&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de:..</text>
</g>
<g >
<title>alloc::slice::hack::into_vec (4 samples, 0.72%)</title><rect x="733.2" y="997" width="8.5" height="15.0" fill="rgb(235,26,26)" rx="2" ry="2" />
<text  x="736.23" y="1007.5" ></text>
</g>
<g >
<title>&lt;u8 as serde::de::from_primitive::FromPrimitive&gt;::from_u8 (1 samples, 0.18%)</title><rect x="862.2" y="821" width="2.1" height="15.0" fill="rgb(242,72,50)" rx="2" ry="2" />
<text  x="865.22" y="831.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.31 (1 samples, 0.18%)</title><rect x="578.9" y="757" width="2.1" height="15.0" fill="rgb(217,10,40)" rx="2" ry="2" />
<text  x="581.85" y="767.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u8 (81 samples, 14.52%)</title><rect x="348.4" y="853" width="171.2" height="15.0" fill="rgb(237,177,9)" rx="2" ry="2" />
<text  x="351.35" y="863.5" >&lt;&amp;mut bincode::de::Des..</text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.18%)</title><rect x="714.2" y="949" width="2.1" height="15.0" fill="rgb(233,128,48)" rx="2" ry="2" />
<text  x="717.19" y="959.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (1 samples, 0.18%)</title><rect x="714.2" y="885" width="2.1" height="15.0" fill="rgb(214,136,30)" rx="2" ry="2" />
<text  x="717.19" y="895.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_bool (72 samples, 12.90%)</title><rect x="853.8" y="885" width="152.2" height="15.0" fill="rgb(239,224,3)" rx="2" ry="2" />
<text  x="856.76" y="895.5" >&lt;&amp;mut bincode::de::..</text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.18%)</title><rect x="1168.9" y="1061" width="2.1" height="15.0" fill="rgb(216,200,31)" rx="2" ry="2" />
<text  x="1171.85" y="1071.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.18%)</title><rect x="676.1" y="805" width="2.1" height="15.0" fill="rgb(250,176,13)" rx="2" ry="2" />
<text  x="679.13" y="815.5" ></text>
</g>
<g >
<title>tcp_write_xmit (43 samples, 7.71%)</title><rect x="581.0" y="757" width="90.9" height="15.0" fill="rgb(211,196,37)" rx="2" ry="2" />
<text  x="583.97" y="767.5" >tcp_write_..</text>
</g>
<g >
<title>tcp_sendmsg (5 samples, 0.90%)</title><rect x="699.4" y="805" width="10.6" height="15.0" fill="rgb(240,77,25)" rx="2" ry="2" />
<text  x="702.39" y="815.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.18%)</title><rect x="1109.6" y="773" width="2.2" height="15.0" fill="rgb(245,115,25)" rx="2" ry="2" />
<text  x="1112.64" y="783.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1 samples, 0.18%)</title><rect x="710.0" y="821" width="2.1" height="15.0" fill="rgb(231,215,37)" rx="2" ry="2" />
<text  x="712.96" y="831.5" ></text>
</g>
<g >
<title>netif_rx_internal (2 samples, 0.36%)</title><rect x="483.7" y="357" width="4.2" height="15.0" fill="rgb(217,227,14)" rx="2" ry="2" />
<text  x="486.69" y="367.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.18%)</title><rect x="955.3" y="69" width="2.1" height="15.0" fill="rgb(237,136,27)" rx="2" ry="2" />
<text  x="958.27" y="79.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (9 samples, 1.61%)</title><rect x="460.4" y="389" width="19.1" height="15.0" fill="rgb(212,23,38)" rx="2" ry="2" />
<text  x="463.43" y="399.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.54 (1 samples, 0.18%)</title><rect x="1027.2" y="757" width="2.1" height="15.0" fill="rgb(234,92,1)" rx="2" ry="2" />
<text  x="1030.17" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="109.4" y="1061" width="2.1" height="15.0" fill="rgb(231,69,53)" rx="2" ry="2" />
<text  x="112.39" y="1071.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for usize&gt;::deserialize (7 samples, 1.25%)</title><rect x="329.3" y="789" width="14.8" height="15.0" fill="rgb(213,45,41)" rx="2" ry="2" />
<text  x="332.32" y="799.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.18%)</title><rect x="1185.8" y="949" width="2.1" height="15.0" fill="rgb(249,208,7)" rx="2" ry="2" />
<text  x="1188.77" y="959.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.72%)</title><rect x="682.5" y="917" width="8.4" height="15.0" fill="rgb(215,156,13)" rx="2" ry="2" />
<text  x="685.47" y="927.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.36%)</title><rect x="278.6" y="837" width="4.2" height="15.0" fill="rgb(253,155,8)" rx="2" ry="2" />
<text  x="281.57" y="847.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.18%)</title><rect x="14.2" y="1157" width="2.1" height="15.0" fill="rgb(228,201,41)" rx="2" ry="2" />
<text  x="17.23" y="1167.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (5 samples, 0.90%)</title><rect x="921.4" y="453" width="10.6" height="15.0" fill="rgb(235,139,4)" rx="2" ry="2" />
<text  x="924.43" y="463.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (36 samples, 6.45%)</title><rect x="587.3" y="709" width="76.1" height="15.0" fill="rgb(254,91,37)" rx="2" ry="2" />
<text  x="590.31" y="719.5" >__ip_que..</text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u32 (75 samples, 13.44%)</title><rect x="534.4" y="1013" width="158.6" height="15.0" fill="rgb(229,60,52)" rx="2" ry="2" />
<text  x="537.44" y="1023.5" >&lt;&amp;mut bincode::ser::..</text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.18%)</title><rect x="16.3" y="1173" width="2.2" height="15.0" fill="rgb(236,162,10)" rx="2" ry="2" />
<text  x="19.34" y="1183.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.18%)</title><rect x="29.0" y="1205" width="2.1" height="15.0" fill="rgb(212,64,53)" rx="2" ry="2" />
<text  x="32.03" y="1215.5" ></text>
</g>
<g >
<title>inet_sendmsg (5 samples, 0.90%)</title><rect x="699.4" y="821" width="10.6" height="15.0" fill="rgb(230,201,34)" rx="2" ry="2" />
<text  x="702.39" y="831.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.18%)</title><rect x="839.0" y="869" width="2.1" height="15.0" fill="rgb(214,84,16)" rx="2" ry="2" />
<text  x="841.96" y="879.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="316.6" y="85" width="2.1" height="15.0" fill="rgb(253,37,22)" rx="2" ry="2" />
<text  x="319.63" y="95.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.18%)</title><rect x="1183.7" y="1173" width="2.1" height="15.0" fill="rgb(243,156,20)" rx="2" ry="2" />
<text  x="1186.66" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="1006.0" y="1013" width="2.1" height="15.0" fill="rgb(224,123,5)" rx="2" ry="2" />
<text  x="1009.02" y="1023.5" ></text>
</g>
<g >
<title>__recv (56 samples, 10.04%)</title><rect x="866.5" y="725" width="118.4" height="15.0" fill="rgb(207,193,47)" rx="2" ry="2" />
<text  x="869.45" y="735.5" >__recv</text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (58 samples, 10.39%)</title><rect x="866.5" y="757" width="122.6" height="15.0" fill="rgb(228,105,9)" rx="2" ry="2" />
<text  x="869.45" y="767.5" >std::sys::unix:..</text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::read_type (2 samples, 0.36%)</title><rect x="352.6" y="837" width="4.2" height="15.0" fill="rgb(216,177,17)" rx="2" ry="2" />
<text  x="355.58" y="847.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.18%)</title><rect x="718.4" y="1077" width="2.1" height="15.0" fill="rgb(209,0,12)" rx="2" ry="2" />
<text  x="721.42" y="1087.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.18%)</title><rect x="477.3" y="101" width="2.2" height="15.0" fill="rgb(235,5,44)" rx="2" ry="2" />
<text  x="480.35" y="111.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u32 (11 samples, 1.97%)</title><rect x="693.0" y="981" width="23.3" height="15.0" fill="rgb(245,55,34)" rx="2" ry="2" />
<text  x="696.05" y="991.5" >b..</text>
</g>
<g >
<title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.18%)</title><rect x="107.3" y="1013" width="2.1" height="15.0" fill="rgb(216,92,35)" rx="2" ry="2" />
<text  x="110.28" y="1023.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (4 samples, 0.72%)</title><rect x="331.4" y="677" width="8.5" height="15.0" fill="rgb(248,207,54)" rx="2" ry="2" />
<text  x="334.43" y="687.5" ></text>
</g>
<g >
<title>bincode::config::OptionsExt::with_no_limit (1 samples, 0.18%)</title><rect x="1010.3" y="1061" width="2.1" height="15.0" fill="rgb(216,165,26)" rx="2" ry="2" />
<text  x="1013.25" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.54%)</title><rect x="1120.2" y="901" width="6.4" height="15.0" fill="rgb(235,54,17)" rx="2" ry="2" />
<text  x="1123.22" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.18%)</title><rect x="1179.4" y="1029" width="2.1" height="15.0" fill="rgb(220,105,54)" rx="2" ry="2" />
<text  x="1182.43" y="1039.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7 samples, 1.25%)</title><rect x="464.7" y="229" width="14.8" height="15.0" fill="rgb(250,117,14)" rx="2" ry="2" />
<text  x="467.66" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (51 samples, 9.14%)</title><rect x="877.0" y="677" width="107.9" height="15.0" fill="rgb(219,190,26)" rx="2" ry="2" />
<text  x="880.03" y="687.5" >__x64_sys_rec..</text>
</g>
<g >
<title>inet_sendmsg (3 samples, 0.54%)</title><rect x="1120.2" y="821" width="6.4" height="15.0" fill="rgb(236,168,2)" rx="2" ry="2" />
<text  x="1123.22" y="831.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.18%)</title><rect x="669.8" y="741" width="2.1" height="15.0" fill="rgb(252,29,6)" rx="2" ry="2" />
<text  x="672.78" y="751.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (1 samples, 0.18%)</title><rect x="39.6" y="1173" width="2.1" height="15.0" fill="rgb(218,109,47)" rx="2" ry="2" />
<text  x="42.61" y="1183.5" ></text>
</g>
<g >
<title>config::source::Source::collect_to (2 samples, 0.36%)</title><rect x="43.8" y="1269" width="4.3" height="15.0" fill="rgb(210,15,21)" rx="2" ry="2" />
<text  x="46.84" y="1279.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.18%)</title><rect x="14.2" y="1205" width="2.1" height="15.0" fill="rgb(254,111,6)" rx="2" ry="2" />
<text  x="17.23" y="1215.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (39 samples, 6.99%)</title><rect x="1016.6" y="885" width="82.5" height="15.0" fill="rgb(243,113,25)" rx="2" ry="2" />
<text  x="1019.59" y="895.5" >__x64_sys..</text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (27 samples, 4.84%)</title><rect x="185.5" y="805" width="57.1" height="15.0" fill="rgb(237,156,5)" rx="2" ry="2" />
<text  x="188.52" y="815.5" >std::s..</text>
</g>
<g >
<title>sock_recvmsg (10 samples, 1.79%)</title><rect x="779.7" y="693" width="21.2" height="15.0" fill="rgb(243,196,43)" rx="2" ry="2" />
<text  x="782.75" y="703.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.18%)</title><rect x="817.8" y="789" width="2.1" height="15.0" fill="rgb(207,43,16)" rx="2" ry="2" />
<text  x="820.81" y="799.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (3 samples, 0.54%)</title><rect x="790.3" y="613" width="6.4" height="15.0" fill="rgb(216,61,40)" rx="2" ry="2" />
<text  x="793.32" y="623.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (2 samples, 0.36%)</title><rect x="953.2" y="165" width="4.2" height="15.0" fill="rgb(242,75,40)" rx="2" ry="2" />
<text  x="956.15" y="175.5" ></text>
</g>
<g >
<title>process_backlog (18 samples, 3.23%)</title><rect x="934.1" y="357" width="38.1" height="15.0" fill="rgb(220,85,47)" rx="2" ry="2" />
<text  x="937.12" y="367.5" >pro..</text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.36%)</title><rect x="1177.3" y="1045" width="4.2" height="15.0" fill="rgb(218,31,38)" rx="2" ry="2" />
<text  x="1180.31" y="1055.5" ></text>
</g>
<g >
<title>tcp_push (46 samples, 8.24%)</title><rect x="574.6" y="789" width="97.3" height="15.0" fill="rgb(242,44,34)" rx="2" ry="2" />
<text  x="577.62" y="799.5" >tcp_push</text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.36%)</title><rect x="587.3" y="677" width="4.2" height="15.0" fill="rgb(216,190,13)" rx="2" ry="2" />
<text  x="590.31" y="687.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_raw (4 samples, 0.72%)</title><rect x="130.5" y="981" width="8.5" height="15.0" fill="rgb(220,157,4)" rx="2" ry="2" />
<text  x="133.54" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (7 samples, 1.25%)</title><rect x="699.4" y="869" width="14.8" height="15.0" fill="rgb(236,67,32)" rx="2" ry="2" />
<text  x="702.39" y="879.5" ></text>
</g>
<g >
<title>sock_sendmsg (3 samples, 0.54%)</title><rect x="1107.5" y="821" width="6.4" height="15.0" fill="rgb(210,207,1)" rx="2" ry="2" />
<text  x="1110.53" y="831.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (1 samples, 0.18%)</title><rect x="1139.2" y="1029" width="2.2" height="15.0" fill="rgb(231,25,33)" rx="2" ry="2" />
<text  x="1142.25" y="1039.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="885.5" y="581" width="2.1" height="15.0" fill="rgb(231,218,33)" rx="2" ry="2" />
<text  x="888.48" y="591.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20 samples, 3.58%)</title><rect x="1039.9" y="629" width="42.3" height="15.0" fill="rgb(213,112,13)" rx="2" ry="2" />
<text  x="1042.86" y="639.5" >__l..</text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.18%)</title><rect x="115.7" y="1045" width="2.1" height="15.0" fill="rgb(218,18,9)" rx="2" ry="2" />
<text  x="118.73" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 11.11%)</title><rect x="549.2" y="901" width="131.2" height="15.0" fill="rgb(214,0,26)" rx="2" ry="2" />
<text  x="552.25" y="911.5" >do_syscall_64</text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (6 samples, 1.08%)</title><rect x="1156.2" y="1077" width="12.7" height="15.0" fill="rgb(224,174,12)" rx="2" ry="2" />
<text  x="1159.16" y="1087.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.18%)</title><rect x="109.4" y="853" width="2.1" height="15.0" fill="rgb(223,24,25)" rx="2" ry="2" />
<text  x="112.39" y="863.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::overflowing_add (1 samples, 0.18%)</title><rect x="1154.1" y="1061" width="2.1" height="15.0" fill="rgb(236,133,38)" rx="2" ry="2" />
<text  x="1157.05" y="1071.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (22 samples, 3.94%)</title><rect x="608.5" y="341" width="46.5" height="15.0" fill="rgb(231,22,50)" rx="2" ry="2" />
<text  x="611.46" y="351.5" >__wa..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 1.25%)</title><rect x="255.3" y="821" width="14.8" height="15.0" fill="rgb(217,166,47)" rx="2" ry="2" />
<text  x="258.30" y="831.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.18%)</title><rect x="500.6" y="661" width="2.1" height="15.0" fill="rgb(229,216,20)" rx="2" ry="2" />
<text  x="503.61" y="671.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id (1 samples, 0.18%)</title><rect x="14.2" y="1077" width="2.1" height="15.0" fill="rgb(225,85,34)" rx="2" ry="2" />
<text  x="17.23" y="1087.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.43 (5 samples, 0.90%)</title><rect x="314.5" y="517" width="10.6" height="15.0" fill="rgb(208,223,23)" rx="2" ry="2" />
<text  x="317.52" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (3 samples, 0.54%)</title><rect x="1107.5" y="853" width="6.4" height="15.0" fill="rgb(253,165,38)" rx="2" ry="2" />
<text  x="1110.53" y="863.5" ></text>
</g>
<g >
<title>__sys_recvfrom (51 samples, 9.14%)</title><rect x="877.0" y="661" width="107.9" height="15.0" fill="rgb(240,106,41)" rx="2" ry="2" />
<text  x="880.03" y="671.5" >__sys_recvfrom</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 7.35%)</title><rect x="1012.4" y="965" width="86.7" height="15.0" fill="rgb(248,49,5)" rx="2" ry="2" />
<text  x="1015.37" y="975.5" >&lt;&amp;std::net..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (7 samples, 1.25%)</title><rect x="464.7" y="245" width="14.8" height="15.0" fill="rgb(205,197,49)" rx="2" ry="2" />
<text  x="467.66" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (72 samples, 12.90%)</title><rect x="853.8" y="933" width="152.2" height="15.0" fill="rgb(221,45,7)" rx="2" ry="2" />
<text  x="856.76" y="943.5" >&lt;&amp;mut bincode::de::..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="1183.7" y="1269" width="2.1" height="15.0" fill="rgb(246,212,11)" rx="2" ry="2" />
<text  x="1186.66" y="1279.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.18%)</title><rect x="976.4" y="405" width="2.1" height="15.0" fill="rgb(254,200,36)" rx="2" ry="2" />
<text  x="979.42" y="415.5" ></text>
</g>
<g >
<title>ip_local_out (21 samples, 3.76%)</title><rect x="1037.7" y="693" width="44.5" height="15.0" fill="rgb(230,48,52)" rx="2" ry="2" />
<text  x="1040.74" y="703.5" >ip_l..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.18%)</title><rect x="667.7" y="677" width="2.1" height="15.0" fill="rgb(223,77,4)" rx="2" ry="2" />
<text  x="670.67" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51 samples, 9.14%)</title><rect x="877.0" y="709" width="107.9" height="15.0" fill="rgb(244,113,26)" rx="2" ry="2" />
<text  x="880.03" y="719.5" >entry_SYSCALL..</text>
</g>
<g >
<title>clone (2 samples, 0.36%)</title><rect x="1183.7" y="1301" width="4.2" height="15.0" fill="rgb(248,57,22)" rx="2" ry="2" />
<text  x="1186.66" y="1311.5" ></text>
</g>
<g >
<title>core::mem::forget (3 samples, 0.54%)</title><rect x="130.5" y="933" width="6.4" height="15.0" fill="rgb(244,23,6)" rx="2" ry="2" />
<text  x="133.54" y="943.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (32 samples, 5.73%)</title><rect x="593.7" y="629" width="67.6" height="15.0" fill="rgb(206,226,19)" rx="2" ry="2" />
<text  x="596.66" y="639.5" >__local..</text>
</g>
<g >
<title>__sys_recvfrom (16 samples, 2.87%)</title><rect x="208.8" y="709" width="33.8" height="15.0" fill="rgb(215,201,16)" rx="2" ry="2" />
<text  x="211.78" y="719.5" >__..</text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.18%)</title><rect x="388.5" y="597" width="2.1" height="15.0" fill="rgb(247,194,4)" rx="2" ry="2" />
<text  x="391.53" y="607.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::expect (2 samples, 0.36%)</title><rect x="1141.4" y="1093" width="4.2" height="15.0" fill="rgb(232,11,6)" rx="2" ry="2" />
<text  x="1144.36" y="1103.5" ></text>
</g>
<g >
<title>schedule_timeout (3 samples, 0.54%)</title><rect x="784.0" y="613" width="6.3" height="15.0" fill="rgb(220,159,48)" rx="2" ry="2" />
<text  x="786.98" y="623.5" ></text>
</g>
<g >
<title>ip_local_deliver (19 samples, 3.41%)</title><rect x="1042.0" y="469" width="40.2" height="15.0" fill="rgb(222,216,17)" rx="2" ry="2" />
<text  x="1044.97" y="479.5" >ip_..</text>
</g>
<g >
<title>tcp_v4_do_rcv (19 samples, 3.41%)</title><rect x="1042.0" y="405" width="40.2" height="15.0" fill="rgb(248,221,10)" rx="2" ry="2" />
<text  x="1044.97" y="415.5" >tcp..</text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.18%)</title><rect x="14.2" y="1125" width="2.1" height="15.0" fill="rgb(232,215,9)" rx="2" ry="2" />
<text  x="17.23" y="1135.5" ></text>
</g>
<g >
<title>serde::de::EnumAccess::variant (47 samples, 8.42%)</title><rect x="754.4" y="949" width="99.4" height="15.0" fill="rgb(215,100,41)" rx="2" ry="2" />
<text  x="757.37" y="959.5" >serde::de::E..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.18%)</title><rect x="718.4" y="1093" width="2.1" height="15.0" fill="rgb(251,34,46)" rx="2" ry="2" />
<text  x="721.42" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="109.4" y="1013" width="2.1" height="15.0" fill="rgb(242,6,29)" rx="2" ry="2" />
<text  x="112.39" y="1023.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.18%)</title><rect x="386.4" y="597" width="2.1" height="15.0" fill="rgb(233,69,19)" rx="2" ry="2" />
<text  x="389.42" y="607.5" ></text>
</g>
<g >
<title>tcp_send_ack (5 samples, 0.90%)</title><rect x="314.5" y="533" width="10.6" height="15.0" fill="rgb(250,75,43)" rx="2" ry="2" />
<text  x="317.52" y="543.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 0.18%)</title><rect x="10.0" y="1301" width="2.1" height="15.0" fill="rgb(210,59,5)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.90%)</title><rect x="815.7" y="821" width="10.6" height="15.0" fill="rgb(208,27,24)" rx="2" ry="2" />
<text  x="818.70" y="831.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.18%)</title><rect x="14.2" y="1285" width="2.1" height="15.0" fill="rgb(228,55,12)" rx="2" ry="2" />
<text  x="17.23" y="1295.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.18%)</title><rect x="234.2" y="597" width="2.1" height="15.0" fill="rgb(234,214,23)" rx="2" ry="2" />
<text  x="237.16" y="607.5" ></text>
</g>
<g >
<title>std::io::read_to_end_with_reservation (1 samples, 0.18%)</title><rect x="43.8" y="1125" width="2.1" height="15.0" fill="rgb(234,134,23)" rx="2" ry="2" />
<text  x="46.84" y="1135.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (20 samples, 3.58%)</title><rect x="301.8" y="853" width="42.3" height="15.0" fill="rgb(212,210,48)" rx="2" ry="2" />
<text  x="304.83" y="863.5" >ser..</text>
</g>
<g >
<title>ip_output (17 samples, 3.05%)</title><rect x="452.0" y="485" width="35.9" height="15.0" fill="rgb(248,174,51)" rx="2" ry="2" />
<text  x="454.97" y="495.5" >ip_..</text>
</g>
<g >
<title>skb_page_frag_refill (1 samples, 0.18%)</title><rect x="703.6" y="773" width="2.1" height="15.0" fill="rgb(250,200,34)" rx="2" ry="2" />
<text  x="706.62" y="783.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (6 samples, 1.08%)</title><rect x="312.4" y="693" width="12.7" height="15.0" fill="rgb(227,123,29)" rx="2" ry="2" />
<text  x="315.40" y="703.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.18%)</title><rect x="661.3" y="565" width="2.1" height="15.0" fill="rgb(232,43,25)" rx="2" ry="2" />
<text  x="664.33" y="575.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (20 samples, 3.58%)</title><rect x="1039.9" y="613" width="42.3" height="15.0" fill="rgb(254,127,14)" rx="2" ry="2" />
<text  x="1042.86" y="623.5" >do_..</text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.36%)</title><rect x="906.6" y="549" width="4.3" height="15.0" fill="rgb(252,44,43)" rx="2" ry="2" />
<text  x="909.63" y="559.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.54%)</title><rect x="314.5" y="261" width="6.4" height="15.0" fill="rgb(221,20,44)" rx="2" ry="2" />
<text  x="317.52" y="271.5" ></text>
</g>
<g >
<title>std::net::tcp::TcpStream::connect_timeout (1 samples, 0.18%)</title><rect x="1185.8" y="1045" width="2.1" height="15.0" fill="rgb(231,5,15)" rx="2" ry="2" />
<text  x="1188.77" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (8 samples, 1.43%)</title><rect x="462.5" y="325" width="17.0" height="15.0" fill="rgb(228,54,39)" rx="2" ry="2" />
<text  x="465.54" y="335.5" ></text>
</g>
<g >
<title>bincode::config::Config::deserialize_from (190 samples, 34.05%)</title><rect x="126.3" y="1077" width="401.8" height="15.0" fill="rgb(207,78,9)" rx="2" ry="2" />
<text  x="129.31" y="1087.5" >bincode::config::Config::deserialize_from</text>
</g>
<g >
<title>bincode::internal::deserialize_from_seed (133 samples, 23.84%)</title><rect x="726.9" y="1045" width="281.2" height="15.0" fill="rgb(207,23,29)" rx="2" ry="2" />
<text  x="729.88" y="1055.5" >bincode::internal::deserialize_from_s..</text>
</g>
<g >
<title>__schedule (11 samples, 1.97%)</title><rect x="392.8" y="533" width="23.2" height="15.0" fill="rgb(233,180,15)" rx="2" ry="2" />
<text  x="395.76" y="543.5" >_..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.36%)</title><rect x="69.2" y="1013" width="4.2" height="15.0" fill="rgb(244,22,3)" rx="2" ry="2" />
<text  x="72.21" y="1023.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.18%)</title><rect x="570.4" y="789" width="2.1" height="15.0" fill="rgb(250,218,45)" rx="2" ry="2" />
<text  x="573.39" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.18%)</title><rect x="48.1" y="1189" width="2.1" height="15.0" fill="rgb(236,170,24)" rx="2" ry="2" />
<text  x="51.06" y="1199.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u32 (74 samples, 13.26%)</title><rect x="534.4" y="997" width="156.5" height="15.0" fill="rgb(205,33,22)" rx="2" ry="2" />
<text  x="537.44" y="1007.5" >byteorder::io::Write..</text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u8 (75 samples, 13.44%)</title><rect x="356.8" y="837" width="158.6" height="15.0" fill="rgb(218,199,40)" rx="2" ry="2" />
<text  x="359.81" y="847.5" >byteorder::io::ReadB..</text>
</g>
<g >
<title>skb_clone (1 samples, 0.18%)</title><rect x="663.4" y="725" width="2.2" height="15.0" fill="rgb(248,188,33)" rx="2" ry="2" />
<text  x="666.44" y="735.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.18%)</title><rect x="109.4" y="949" width="2.1" height="15.0" fill="rgb(237,40,45)" rx="2" ry="2" />
<text  x="112.39" y="959.5" ></text>
</g>
<g >
<title>tcp_ack (3 samples, 0.54%)</title><rect x="953.2" y="181" width="6.3" height="15.0" fill="rgb(239,63,47)" rx="2" ry="2" />
<text  x="956.15" y="191.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.18%)</title><rect x="14.2" y="1109" width="2.1" height="15.0" fill="rgb(233,86,50)" rx="2" ry="2" />
<text  x="17.23" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.18%)</title><rect x="43.8" y="1109" width="2.1" height="15.0" fill="rgb(248,104,17)" rx="2" ry="2" />
<text  x="46.84" y="1119.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (9 samples, 1.61%)</title><rect x="942.6" y="245" width="19.0" height="15.0" fill="rgb(244,2,46)" rx="2" ry="2" />
<text  x="945.58" y="255.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.18%)</title><rect x="109.4" y="997" width="2.1" height="15.0" fill="rgb(233,80,45)" rx="2" ry="2" />
<text  x="112.39" y="1007.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.18%)</title><rect x="1120.2" y="773" width="2.1" height="15.0" fill="rgb(227,73,29)" rx="2" ry="2" />
<text  x="1123.22" y="783.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.18%)</title><rect x="1187.9" y="1157" width="2.1" height="15.0" fill="rgb(237,133,9)" rx="2" ry="2" />
<text  x="1190.89" y="1167.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.18%)</title><rect x="737.5" y="949" width="2.1" height="15.0" fill="rgb(217,14,50)" rx="2" ry="2" />
<text  x="740.46" y="959.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.72%)</title><rect x="682.5" y="965" width="8.4" height="15.0" fill="rgb(227,2,29)" rx="2" ry="2" />
<text  x="685.47" y="975.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.18%)</title><rect x="86.1" y="981" width="2.1" height="15.0" fill="rgb(226,193,20)" rx="2" ry="2" />
<text  x="89.13" y="991.5" ></text>
</g>
<g >
<title>__sys_recvfrom (3 samples, 0.54%)</title><rect x="331.4" y="581" width="6.4" height="15.0" fill="rgb(230,45,25)" rx="2" ry="2" />
<text  x="334.43" y="591.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.18%)</title><rect x="817.8" y="773" width="2.1" height="15.0" fill="rgb(244,83,6)" rx="2" ry="2" />
<text  x="820.81" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.18%)</title><rect x="390.6" y="565" width="2.2" height="15.0" fill="rgb(236,195,9)" rx="2" ry="2" />
<text  x="393.65" y="575.5" ></text>
</g>
<g >
<title>c2_chacha::guts::refill_wide::impl_avx2 (12 samples, 2.15%)</title><rect x="18.5" y="1285" width="25.3" height="15.0" fill="rgb(222,220,47)" rx="2" ry="2" />
<text  x="21.46" y="1295.5" >c..</text>
</g>
<g >
<title>bincode::de::read::IoReader&lt;R&gt;::new (6 samples, 1.08%)</title><rect x="729.0" y="1029" width="12.7" height="15.0" fill="rgb(208,220,43)" rx="2" ry="2" />
<text  x="732.00" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.08%)</title><rect x="312.4" y="661" width="12.7" height="15.0" fill="rgb(226,122,16)" rx="2" ry="2" />
<text  x="315.40" y="671.5" ></text>
</g>
<g >
<title>tcp_write_xmit (28 samples, 5.02%)</title><rect x="1033.5" y="757" width="59.2" height="15.0" fill="rgb(215,56,1)" rx="2" ry="2" />
<text  x="1036.51" y="767.5" >tcp_wr..</text>
</g>
<g >
<title>__skb_clone (2 samples, 0.36%)</title><rect x="1082.2" y="709" width="4.2" height="15.0" fill="rgb(229,209,7)" rx="2" ry="2" />
<text  x="1085.15" y="719.5" ></text>
</g>
<g >
<title>skb_release_all (3 samples, 0.54%)</title><rect x="473.1" y="133" width="6.4" height="15.0" fill="rgb(238,228,13)" rx="2" ry="2" />
<text  x="476.12" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (5 samples, 0.90%)</title><rect x="1128.7" y="1061" width="10.5" height="15.0" fill="rgb(243,204,42)" rx="2" ry="2" />
<text  x="1131.67" y="1071.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.18%)</title><rect x="109.4" y="901" width="2.1" height="15.0" fill="rgb(232,223,11)" rx="2" ry="2" />
<text  x="112.39" y="911.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 1.08%)</title><rect x="991.2" y="773" width="12.7" height="15.0" fill="rgb(229,143,41)" rx="2" ry="2" />
<text  x="994.22" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.36%)</title><rect x="289.1" y="869" width="4.3" height="15.0" fill="rgb(207,50,15)" rx="2" ry="2" />
<text  x="292.14" y="879.5" ></text>
</g>
<g >
<title>rand::rngs::thread::THREAD_RNG_KEY::__init (1 samples, 0.18%)</title><rect x="1177.3" y="981" width="2.1" height="15.0" fill="rgb(206,96,16)" rx="2" ry="2" />
<text  x="1180.31" y="991.5" ></text>
</g>
<g >
<title>sock_sendmsg (6 samples, 1.08%)</title><rect x="699.4" y="837" width="12.7" height="15.0" fill="rgb(217,80,28)" rx="2" ry="2" />
<text  x="702.39" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.54%)</title><rect x="1120.2" y="885" width="6.4" height="15.0" fill="rgb(244,139,3)" rx="2" ry="2" />
<text  x="1123.22" y="895.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.18%)</title><rect x="953.2" y="133" width="2.1" height="15.0" fill="rgb(224,26,18)" rx="2" ry="2" />
<text  x="956.15" y="143.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::get_byte_buffer (11 samples, 1.97%)</title><rect x="303.9" y="789" width="23.3" height="15.0" fill="rgb(249,205,29)" rx="2" ry="2" />
<text  x="306.94" y="799.5" >&lt;..</text>
</g>
<g >
<title>nf_hook_slow (7 samples, 1.25%)</title><rect x="917.2" y="469" width="14.8" height="15.0" fill="rgb(205,208,18)" rx="2" ry="2" />
<text  x="920.20" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 1.25%)</title><rect x="73.4" y="1029" width="14.8" height="15.0" fill="rgb(217,213,45)" rx="2" ry="2" />
<text  x="76.44" y="1039.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.18%)</title><rect x="678.2" y="853" width="2.2" height="15.0" fill="rgb(236,166,22)" rx="2" ry="2" />
<text  x="681.24" y="863.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.18%)</title><rect x="109.4" y="933" width="2.1" height="15.0" fill="rgb(243,23,15)" rx="2" ry="2" />
<text  x="112.39" y="943.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (19 samples, 3.41%)</title><rect x="1042.0" y="437" width="40.2" height="15.0" fill="rgb(250,204,20)" rx="2" ry="2" />
<text  x="1044.97" y="447.5" >ip_..</text>
</g>
<g >
<title>nf_conntrack_in (5 samples, 0.90%)</title><rect x="921.4" y="437" width="10.6" height="15.0" fill="rgb(213,176,54)" rx="2" ry="2" />
<text  x="924.43" y="447.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.43 (29 samples, 5.20%)</title><rect x="426.6" y="565" width="61.3" height="15.0" fill="rgb(213,157,26)" rx="2" ry="2" />
<text  x="429.59" y="575.5" >__tcp_..</text>
</g>
<g >
<title>__recv (6 samples, 1.08%)</title><rect x="312.4" y="677" width="12.7" height="15.0" fill="rgb(248,3,46)" rx="2" ry="2" />
<text  x="315.40" y="687.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.18%)</title><rect x="29.0" y="1221" width="2.1" height="15.0" fill="rgb(217,46,22)" rx="2" ry="2" />
<text  x="32.03" y="1231.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (3 samples, 0.54%)</title><rect x="111.5" y="1077" width="6.3" height="15.0" fill="rgb(249,190,32)" rx="2" ry="2" />
<text  x="114.51" y="1087.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.54%)</title><rect x="314.5" y="245" width="6.4" height="15.0" fill="rgb(220,64,47)" rx="2" ry="2" />
<text  x="317.52" y="255.5" ></text>
</g>
<g >
<title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (9 samples, 1.61%)</title><rect x="90.4" y="1077" width="19.0" height="15.0" fill="rgb(247,108,44)" rx="2" ry="2" />
<text  x="93.36" y="1087.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (9 samples, 1.61%)</title><rect x="460.4" y="405" width="19.1" height="15.0" fill="rgb(240,169,15)" rx="2" ry="2" />
<text  x="463.43" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2 samples, 0.36%)</title><rect x="1128.7" y="1029" width="4.2" height="15.0" fill="rgb(209,200,19)" rx="2" ry="2" />
<text  x="1131.67" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (2 samples, 0.36%)</title><rect x="906.6" y="533" width="4.3" height="15.0" fill="rgb(218,164,4)" rx="2" ry="2" />
<text  x="909.63" y="543.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u32 (2 samples, 0.36%)</title><rect x="168.6" y="885" width="4.2" height="15.0" fill="rgb(246,74,10)" rx="2" ry="2" />
<text  x="171.60" y="895.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.36%)</title><rect x="160.1" y="917" width="4.3" height="15.0" fill="rgb(220,161,33)" rx="2" ry="2" />
<text  x="163.14" y="927.5" ></text>
</g>
<g >
<title>&lt;rand::distributions::bernoulli::Bernoulli as rand::distributions::Distribution&lt;bool&gt;&gt;::sample (10 samples, 1.79%)</title><rect x="88.2" y="1109" width="21.2" height="15.0" fill="rgb(224,38,11)" rx="2" ry="2" />
<text  x="91.24" y="1119.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::IoReader&lt;R&gt; as std::io::Read&gt;::read_exact (74 samples, 13.26%)</title><rect x="356.8" y="821" width="156.5" height="15.0" fill="rgb(252,50,32)" rx="2" ry="2" />
<text  x="359.81" y="831.5" >&lt;bincode::de::read::..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (1 samples, 0.18%)</title><rect x="128.4" y="1013" width="2.1" height="15.0" fill="rgb(234,199,51)" rx="2" ry="2" />
<text  x="131.42" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.18%)</title><rect x="43.8" y="1077" width="2.1" height="15.0" fill="rgb(252,135,39)" rx="2" ry="2" />
<text  x="46.84" y="1087.5" ></text>
</g>
<g >
<title>c2_chacha::guts::ChaCha::refill4 (1 samples, 0.18%)</title><rect x="107.3" y="965" width="2.1" height="15.0" fill="rgb(223,197,15)" rx="2" ry="2" />
<text  x="110.28" y="975.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="526.0" y="997" width="2.1" height="15.0" fill="rgb(232,98,49)" rx="2" ry="2" />
<text  x="528.99" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.72%)</title><rect x="60.8" y="1013" width="8.4" height="15.0" fill="rgb(246,183,1)" rx="2" ry="2" />
<text  x="63.75" y="1023.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (2 samples, 0.36%)</title><rect x="1044.1" y="373" width="4.2" height="15.0" fill="rgb(218,226,41)" rx="2" ry="2" />
<text  x="1047.09" y="383.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (31 samples, 5.56%)</title><rect x="913.0" y="517" width="65.5" height="15.0" fill="rgb(245,173,21)" rx="2" ry="2" />
<text  x="915.97" y="527.5" >__ip_qu..</text>
</g>
<g >
<title>ip_finish_output2 (4 samples, 0.72%)</title><rect x="314.5" y="405" width="8.5" height="15.0" fill="rgb(223,39,46)" rx="2" ry="2" />
<text  x="317.52" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (2 samples, 0.36%)</title><rect x="1135.0" y="1045" width="4.2" height="15.0" fill="rgb(253,222,8)" rx="2" ry="2" />
<text  x="1138.02" y="1055.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.18%)</title><rect x="714.2" y="933" width="2.1" height="15.0" fill="rgb(237,20,6)" rx="2" ry="2" />
<text  x="717.19" y="943.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.18%)</title><rect x="955.3" y="117" width="2.1" height="15.0" fill="rgb(230,144,26)" rx="2" ry="2" />
<text  x="958.27" y="127.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.18%)</title><rect x="951.0" y="149" width="2.2" height="15.0" fill="rgb(252,76,20)" rx="2" ry="2" />
<text  x="954.04" y="159.5" ></text>
</g>
<g >
<title>sk_wait_data (12 samples, 2.15%)</title><rect x="390.6" y="597" width="25.4" height="15.0" fill="rgb(227,226,24)" rx="2" ry="2" />
<text  x="393.65" y="607.5" >s..</text>
</g>
<g >
<title>sk_wait_data (5 samples, 0.90%)</title><rect x="887.6" y="597" width="10.6" height="15.0" fill="rgb(232,79,37)" rx="2" ry="2" />
<text  x="890.60" y="607.5" ></text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.18%)</title><rect x="671.9" y="789" width="2.1" height="15.0" fill="rgb(238,104,12)" rx="2" ry="2" />
<text  x="674.90" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.54%)</title><rect x="314.5" y="357" width="6.4" height="15.0" fill="rgb(241,167,17)" rx="2" ry="2" />
<text  x="317.52" y="367.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (27 samples, 4.84%)</title><rect x="185.5" y="821" width="57.1" height="15.0" fill="rgb(226,218,17)" rx="2" ry="2" />
<text  x="188.52" y="831.5" >std::s..</text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.18%)</title><rect x="1185.8" y="1093" width="2.1" height="15.0" fill="rgb(218,7,18)" rx="2" ry="2" />
<text  x="1188.77" y="1103.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.54%)</title><rect x="314.5" y="165" width="6.4" height="15.0" fill="rgb(220,5,2)" rx="2" ry="2" />
<text  x="317.52" y="175.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (3 samples, 0.54%)</title><rect x="229.9" y="613" width="6.4" height="15.0" fill="rgb(231,112,47)" rx="2" ry="2" />
<text  x="232.93" y="623.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (105 samples, 18.82%)</title><rect x="297.6" y="917" width="222.0" height="15.0" fill="rgb(228,223,28)" rx="2" ry="2" />
<text  x="300.60" y="927.5" >&lt;core::marker::PhantomData&lt;T&gt;..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.18%)</title><rect x="12.1" y="1221" width="2.1" height="15.0" fill="rgb(216,201,24)" rx="2" ry="2" />
<text  x="15.11" y="1231.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.90%)</title><rect x="1171.0" y="1093" width="10.5" height="15.0" fill="rgb(232,107,32)" rx="2" ry="2" />
<text  x="1173.97" y="1103.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (1 samples, 0.18%)</title><rect x="109.4" y="1077" width="2.1" height="15.0" fill="rgb(247,69,11)" rx="2" ry="2" />
<text  x="112.39" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="1187.9" y="1301" width="2.1" height="15.0" fill="rgb(242,23,43)" rx="2" ry="2" />
<text  x="1190.89" y="1311.5" ></text>
</g>
<g >
<title>rand::rngs::thread::thread_rng (5 samples, 0.90%)</title><rect x="1171.0" y="1109" width="10.5" height="15.0" fill="rgb(216,59,17)" rx="2" ry="2" />
<text  x="1173.97" y="1119.5" ></text>
</g>
<g >
<title>schedule (11 samples, 1.97%)</title><rect x="392.8" y="549" width="23.2" height="15.0" fill="rgb(235,85,0)" rx="2" ry="2" />
<text  x="395.76" y="559.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.18%)</title><rect x="43.8" y="1093" width="2.1" height="15.0" fill="rgb(210,194,21)" rx="2" ry="2" />
<text  x="46.84" y="1103.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2 samples, 0.36%)</title><rect x="1122.3" y="757" width="4.3" height="15.0" fill="rgb(248,168,38)" rx="2" ry="2" />
<text  x="1125.33" y="767.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.18%)</title><rect x="1187.9" y="1173" width="2.1" height="15.0" fill="rgb(242,109,9)" rx="2" ry="2" />
<text  x="1190.89" y="1183.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.72%)</title><rect x="889.7" y="549" width="8.5" height="15.0" fill="rgb(224,222,26)" rx="2" ry="2" />
<text  x="892.71" y="559.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.18%)</title><rect x="661.3" y="597" width="2.1" height="15.0" fill="rgb(240,126,12)" rx="2" ry="2" />
<text  x="664.33" y="607.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_unique (4 samples, 0.72%)</title><rect x="130.5" y="949" width="8.5" height="15.0" fill="rgb(213,189,47)" rx="2" ry="2" />
<text  x="133.54" y="959.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.18%)</title><rect x="16.3" y="1285" width="2.2" height="15.0" fill="rgb(218,58,21)" rx="2" ry="2" />
<text  x="19.34" y="1295.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u8 (1 samples, 0.18%)</title><rect x="862.2" y="837" width="2.1" height="15.0" fill="rgb(217,166,48)" rx="2" ry="2" />
<text  x="865.22" y="847.5" ></text>
</g>
<g >
<title>wait_woken (3 samples, 0.54%)</title><rect x="784.0" y="629" width="6.3" height="15.0" fill="rgb(227,80,30)" rx="2" ry="2" />
<text  x="786.98" y="639.5" ></text>
</g>
<g >
<title>ip_queue_xmit (31 samples, 5.56%)</title><rect x="913.0" y="533" width="65.5" height="15.0" fill="rgb(251,126,27)" rx="2" ry="2" />
<text  x="915.97" y="543.5" >ip_queu..</text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.18%)</title><rect x="1185.8" y="933" width="2.1" height="15.0" fill="rgb(231,26,9)" rx="2" ry="2" />
<text  x="1188.77" y="943.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::checked_add (1 samples, 0.18%)</title><rect x="1154.1" y="1077" width="2.1" height="15.0" fill="rgb(219,184,0)" rx="2" ry="2" />
<text  x="1157.05" y="1087.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (2 samples, 0.36%)</title><rect x="24.8" y="1205" width="4.2" height="15.0" fill="rgb(214,72,28)" rx="2" ry="2" />
<text  x="27.80" y="1215.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.18%)</title><rect x="16.3" y="1253" width="2.2" height="15.0" fill="rgb(233,92,54)" rx="2" ry="2" />
<text  x="19.34" y="1263.5" ></text>
</g>
<g >
<title>tcp_recvmsg (47 samples, 8.42%)</title><rect x="881.3" y="613" width="99.3" height="15.0" fill="rgb(245,182,18)" rx="2" ry="2" />
<text  x="884.25" y="623.5" >tcp_recvmsg</text>
</g>
<g >
<title>__schedule (4 samples, 0.72%)</title><rect x="889.7" y="533" width="8.5" height="15.0" fill="rgb(253,39,45)" rx="2" ry="2" />
<text  x="892.71" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.18%)</title><rect x="16.3" y="1269" width="2.2" height="15.0" fill="rgb(239,108,24)" rx="2" ry="2" />
<text  x="19.34" y="1279.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.18%)</title><rect x="944.7" y="213" width="2.1" height="15.0" fill="rgb(253,151,37)" rx="2" ry="2" />
<text  x="947.70" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.36%)</title><rect x="1113.9" y="997" width="4.2" height="15.0" fill="rgb(220,76,3)" rx="2" ry="2" />
<text  x="1116.87" y="1007.5" ></text>
</g>
<g >
<title>main (535 samples, 95.88%)</title><rect x="52.3" y="1269" width="1131.4" height="15.0" fill="rgb(214,209,34)" rx="2" ry="2" />
<text  x="55.29" y="1279.5" >main</text>
</g>
<g >
<title>__ip_queue_xmit (21 samples, 3.76%)</title><rect x="1037.7" y="709" width="44.5" height="15.0" fill="rgb(211,213,28)" rx="2" ry="2" />
<text  x="1040.74" y="719.5" >__ip..</text>
</g>
<g >
<title>c2_chacha::guts::ChaCha::new (1 samples, 0.18%)</title><rect x="1177.3" y="933" width="2.1" height="15.0" fill="rgb(233,223,48)" rx="2" ry="2" />
<text  x="1180.31" y="943.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::IoReader&lt;R&gt; as std::io::Read&gt;::read_exact (65 samples, 11.65%)</title><rect x="866.5" y="821" width="137.4" height="15.0" fill="rgb(227,137,16)" rx="2" ry="2" />
<text  x="869.45" y="831.5" >&lt;bincode::de::rea..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.72%)</title><rect x="331.4" y="709" width="8.5" height="15.0" fill="rgb(233,139,40)" rx="2" ry="2" />
<text  x="334.43" y="719.5" ></text>
</g>
<g >
<title>wait_woken (5 samples, 0.90%)</title><rect x="219.4" y="629" width="10.5" height="15.0" fill="rgb(250,88,12)" rx="2" ry="2" />
<text  x="222.35" y="639.5" ></text>
</g>
<g >
<title>__libc_start_main (535 samples, 95.88%)</title><rect x="52.3" y="1285" width="1131.4" height="15.0" fill="rgb(217,79,42)" rx="2" ry="2" />
<text  x="55.29" y="1295.5" >__libc_start_main</text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="951.0" y="165" width="2.2" height="15.0" fill="rgb(205,135,44)" rx="2" ry="2" />
<text  x="954.04" y="175.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.18%)</title><rect x="384.3" y="549" width="2.1" height="15.0" fill="rgb(221,137,45)" rx="2" ry="2" />
<text  x="387.30" y="559.5" ></text>
</g>
<g >
<title>sock_def_readable (22 samples, 3.94%)</title><rect x="608.5" y="373" width="46.5" height="15.0" fill="rgb(231,220,13)" rx="2" ry="2" />
<text  x="611.46" y="383.5" >sock..</text>
</g>
<g >
<title>__dev_queue_xmit (4 samples, 0.72%)</title><rect x="479.5" y="421" width="8.4" height="15.0" fill="rgb(221,227,27)" rx="2" ry="2" />
<text  x="482.46" y="431.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.18%)</title><rect x="674.0" y="805" width="2.1" height="15.0" fill="rgb(239,88,48)" rx="2" ry="2" />
<text  x="677.01" y="815.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (2 samples, 0.36%)</title><rect x="587.3" y="645" width="4.2" height="15.0" fill="rgb(223,82,34)" rx="2" ry="2" />
<text  x="590.31" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (2 samples, 0.36%)</title><rect x="1128.7" y="1045" width="4.2" height="15.0" fill="rgb(245,162,18)" rx="2" ry="2" />
<text  x="1131.67" y="1055.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (1 samples, 0.18%)</title><rect x="1179.4" y="1013" width="2.1" height="15.0" fill="rgb(251,133,20)" rx="2" ry="2" />
<text  x="1182.43" y="1023.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (2 samples, 0.36%)</title><rect x="65.0" y="997" width="4.2" height="15.0" fill="rgb(219,192,41)" rx="2" ry="2" />
<text  x="67.98" y="1007.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.72%)</title><rect x="1118.1" y="949" width="8.5" height="15.0" fill="rgb(245,159,54)" rx="2" ry="2" />
<text  x="1121.10" y="959.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.90%)</title><rect x="815.7" y="837" width="10.6" height="15.0" fill="rgb(210,16,9)" rx="2" ry="2" />
<text  x="818.70" y="847.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.18%)</title><rect x="1107.5" y="773" width="2.1" height="15.0" fill="rgb(215,36,30)" rx="2" ry="2" />
<text  x="1110.53" y="783.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.18%)</title><rect x="215.1" y="645" width="2.1" height="15.0" fill="rgb(252,145,6)" rx="2" ry="2" />
<text  x="218.13" y="655.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.18%)</title><rect x="1183.7" y="1189" width="2.1" height="15.0" fill="rgb(245,61,10)" rx="2" ry="2" />
<text  x="1186.66" y="1199.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.18%)</title><rect x="31.1" y="1221" width="2.2" height="15.0" fill="rgb(238,210,2)" rx="2" ry="2" />
<text  x="34.15" y="1231.5" ></text>
</g>
<g >
<title>bincode::serialize_into (89 samples, 15.95%)</title><rect x="528.1" y="1093" width="188.2" height="15.0" fill="rgb(208,192,53)" rx="2" ry="2" />
<text  x="531.10" y="1103.5" >bincode::serialize_into</text>
</g>
<g >
<title>nf_conntrack_in (4 samples, 0.72%)</title><rect x="443.5" y="437" width="8.5" height="15.0" fill="rgb(235,144,44)" rx="2" ry="2" />
<text  x="446.51" y="447.5" ></text>
</g>
<g >
<title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (9 samples, 1.61%)</title><rect x="90.4" y="1061" width="19.0" height="15.0" fill="rgb(217,12,49)" rx="2" ry="2" />
<text  x="93.36" y="1071.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.18%)</title><rect x="1080.0" y="373" width="2.2" height="15.0" fill="rgb(213,136,36)" rx="2" ry="2" />
<text  x="1083.04" y="383.5" ></text>
</g>
<g >
<title>inet_recvmsg (14 samples, 2.51%)</title><rect x="210.9" y="677" width="29.6" height="15.0" fill="rgb(207,206,23)" rx="2" ry="2" />
<text  x="213.90" y="687.5" >in..</text>
</g>
<g >
<title>ip_finish_output2 (22 samples, 3.94%)</title><rect x="932.0" y="453" width="46.5" height="15.0" fill="rgb(219,223,29)" rx="2" ry="2" />
<text  x="935.01" y="463.5" >ip_f..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.18%)</title><rect x="1173.1" y="1077" width="2.1" height="15.0" fill="rgb(221,140,8)" rx="2" ry="2" />
<text  x="1176.08" y="1087.5" ></text>
</g>
<g >
<title>rand::rngs::thread::THREAD_RNG_KEY::__getit (3 samples, 0.54%)</title><rect x="1175.2" y="1061" width="6.3" height="15.0" fill="rgb(206,224,54)" rx="2" ry="2" />
<text  x="1178.20" y="1071.5" ></text>
</g>
<g >
<title>tcp_sendmsg (3 samples, 0.54%)</title><rect x="1107.5" y="789" width="6.4" height="15.0" fill="rgb(254,209,27)" rx="2" ry="2" />
<text  x="1110.53" y="799.5" ></text>
</g>
<g >
<title>copy_process.part.35 (1 samples, 0.18%)</title><rect x="10.0" y="1189" width="2.1" height="15.0" fill="rgb(239,209,18)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.36%)</title><rect x="980.6" y="613" width="4.3" height="15.0" fill="rgb(236,153,33)" rx="2" ry="2" />
<text  x="983.65" y="623.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (21 samples, 3.76%)</title><rect x="299.7" y="869" width="44.4" height="15.0" fill="rgb(225,131,48)" rx="2" ry="2" />
<text  x="302.71" y="879.5" >&lt;ser..</text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.18%)</title><rect x="316.6" y="117" width="2.1" height="15.0" fill="rgb(239,138,44)" rx="2" ry="2" />
<text  x="319.63" y="127.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.36%)</title><rect x="980.6" y="597" width="4.3" height="15.0" fill="rgb(247,15,26)" rx="2" ry="2" />
<text  x="983.65" y="607.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.18%)</title><rect x="798.8" y="661" width="2.1" height="15.0" fill="rgb(228,96,46)" rx="2" ry="2" />
<text  x="801.78" y="671.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.18%)</title><rect x="75.6" y="981" width="2.1" height="15.0" fill="rgb(215,117,31)" rx="2" ry="2" />
<text  x="78.56" y="991.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.18%)</title><rect x="1029.3" y="757" width="2.1" height="15.0" fill="rgb(249,168,25)" rx="2" ry="2" />
<text  x="1032.28" y="767.5" ></text>
</g>
<g >
<title>__sys_sendto (3 samples, 0.54%)</title><rect x="1120.2" y="853" width="6.4" height="15.0" fill="rgb(213,206,29)" rx="2" ry="2" />
<text  x="1123.22" y="863.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.18%)</title><rect x="951.0" y="133" width="2.2" height="15.0" fill="rgb(223,223,21)" rx="2" ry="2" />
<text  x="954.04" y="143.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.18%)</title><rect x="316.6" y="69" width="2.1" height="15.0" fill="rgb(249,199,35)" rx="2" ry="2" />
<text  x="319.63" y="79.5" ></text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.18%)</title><rect x="929.9" y="405" width="2.1" height="15.0" fill="rgb(248,123,37)" rx="2" ry="2" />
<text  x="932.89" y="415.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.18%)</title><rect x="215.1" y="613" width="2.1" height="15.0" fill="rgb(221,203,52)" rx="2" ry="2" />
<text  x="218.13" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.36%)</title><rect x="849.5" y="885" width="4.3" height="15.0" fill="rgb(236,106,30)" rx="2" ry="2" />
<text  x="852.53" y="895.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (16 samples, 2.87%)</title><rect x="767.1" y="837" width="33.8" height="15.0" fill="rgb(205,17,31)" rx="2" ry="2" />
<text  x="770.06" y="847.5" >&lt;&amp;..</text>
</g>
<g >
<title>__lock_text_start (15 samples, 2.69%)</title><rect x="1048.3" y="325" width="31.7" height="15.0" fill="rgb(242,157,50)" rx="2" ry="2" />
<text  x="1051.32" y="335.5" >__..</text>
</g>
<g >
<title>mmput (1 samples, 0.18%)</title><rect x="1187.9" y="1221" width="2.1" height="15.0" fill="rgb(211,71,41)" rx="2" ry="2" />
<text  x="1190.89" y="1231.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (534 samples, 95.70%)</title><rect x="52.3" y="1189" width="1129.2" height="15.0" fill="rgb(252,192,53)" rx="2" ry="2" />
<text  x="55.29" y="1199.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>__softirqentry_text_start (32 samples, 5.73%)</title><rect x="593.7" y="581" width="67.6" height="15.0" fill="rgb(225,150,39)" rx="2" ry="2" />
<text  x="596.66" y="591.5" >__softi..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.18%)</title><rect x="48.1" y="1061" width="2.1" height="15.0" fill="rgb(234,172,33)" rx="2" ry="2" />
<text  x="51.06" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.54%)</title><rect x="684.6" y="901" width="6.3" height="15.0" fill="rgb(212,43,14)" rx="2" ry="2" />
<text  x="687.59" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (19 samples, 3.41%)</title><rect x="1042.0" y="421" width="40.2" height="15.0" fill="rgb(241,69,14)" rx="2" ry="2" />
<text  x="1044.97" y="431.5" >tcp..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (63 samples, 11.29%)</title><rect x="547.1" y="965" width="133.3" height="15.0" fill="rgb(233,125,30)" rx="2" ry="2" />
<text  x="550.13" y="975.5" >&lt;&amp;std::net::tcp:..</text>
</g>
<g >
<title>std::io::read_to_end (1 samples, 0.18%)</title><rect x="43.8" y="1141" width="2.1" height="15.0" fill="rgb(216,113,2)" rx="2" ry="2" />
<text  x="46.84" y="1151.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.18%)</title><rect x="1126.6" y="949" width="2.1" height="15.0" fill="rgb(250,189,44)" rx="2" ry="2" />
<text  x="1129.56" y="959.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (1 samples, 0.18%)</title><rect x="661.3" y="533" width="2.1" height="15.0" fill="rgb(228,185,42)" rx="2" ry="2" />
<text  x="664.33" y="543.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (69 samples, 12.37%)</title><rect x="356.8" y="757" width="145.9" height="15.0" fill="rgb(222,8,31)" rx="2" ry="2" />
<text  x="359.81" y="767.5" >std::sys::unix::ne..</text>
</g>
<g >
<title>alloc_pid (1 samples, 0.18%)</title><rect x="10.0" y="1173" width="2.1" height="15.0" fill="rgb(234,111,0)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.18%)</title><rect x="50.2" y="1077" width="2.1" height="15.0" fill="rgb(215,104,33)" rx="2" ry="2" />
<text  x="53.18" y="1087.5" ></text>
</g>
<g >
<title>iptable_security_hook (1 samples, 0.18%)</title><rect x="963.7" y="245" width="2.1" height="15.0" fill="rgb(215,117,1)" rx="2" ry="2" />
<text  x="966.73" y="255.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (58 samples, 10.39%)</title><rect x="866.5" y="773" width="122.6" height="15.0" fill="rgb(214,109,3)" rx="2" ry="2" />
<text  x="869.45" y="783.5" >std::sys_common..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.36%)</title><rect x="39.6" y="1237" width="4.2" height="15.0" fill="rgb(245,188,42)" rx="2" ry="2" />
<text  x="42.61" y="1247.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.36%)</title><rect x="492.2" y="597" width="4.2" height="15.0" fill="rgb(230,131,2)" rx="2" ry="2" />
<text  x="495.15" y="607.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.18%)</title><rect x="1090.6" y="741" width="2.1" height="15.0" fill="rgb(242,16,27)" rx="2" ry="2" />
<text  x="1093.61" y="751.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h06f67fc4fb6cd692 (1 samples, 0.18%)</title><rect x="1185.8" y="1205" width="2.1" height="15.0" fill="rgb(216,28,16)" rx="2" ry="2" />
<text  x="1188.77" y="1215.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.18%)</title><rect x="1183.7" y="1141" width="2.1" height="15.0" fill="rgb(219,108,46)" rx="2" ry="2" />
<text  x="1186.66" y="1151.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.18%)</title><rect x="712.1" y="837" width="2.1" height="15.0" fill="rgb(222,92,7)" rx="2" ry="2" />
<text  x="715.08" y="847.5" ></text>
</g>
<g >
<title>nf_hook_slow (10 samples, 1.79%)</title><rect x="430.8" y="469" width="21.2" height="15.0" fill="rgb(252,18,12)" rx="2" ry="2" />
<text  x="433.82" y="479.5" ></text>
</g>
<g >
<title>bincode::deserialize_from (134 samples, 24.01%)</title><rect x="724.8" y="1093" width="283.3" height="15.0" fill="rgb(245,101,47)" rx="2" ry="2" />
<text  x="727.77" y="1103.5" >bincode::deserialize_from</text>
</g>
<g >
<title>tcp_ack (2 samples, 0.36%)</title><rect x="316.6" y="133" width="4.3" height="15.0" fill="rgb(243,145,5)" rx="2" ry="2" />
<text  x="319.63" y="143.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (82 samples, 14.70%)</title><rect x="346.2" y="869" width="173.4" height="15.0" fill="rgb(208,70,21)" rx="2" ry="2" />
<text  x="349.24" y="879.5" >serde::de::impls::&lt;imp..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.18%)</title><rect x="572.5" y="773" width="2.1" height="15.0" fill="rgb(247,172,43)" rx="2" ry="2" />
<text  x="575.51" y="783.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFull as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.18%)</title><rect x="1168.9" y="1045" width="2.1" height="15.0" fill="rgb(205,223,11)" rx="2" ry="2" />
<text  x="1171.85" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum::&lt;impl serde::de::EnumAccess for &amp;mut bincode::de::Deserializer&lt;R,O&gt;&gt;::variant_seed (66 samples, 11.83%)</title><rect x="153.8" y="933" width="139.6" height="15.0" fill="rgb(242,25,25)" rx="2" ry="2" />
<text  x="156.80" y="943.5" >&lt;&amp;mut bincode::de..</text>
</g>
<g >
<title>apparmor_socket_sendmsg (2 samples, 0.36%)</title><rect x="1092.7" y="821" width="4.3" height="15.0" fill="rgb(243,226,49)" rx="2" ry="2" />
<text  x="1095.72" y="831.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (1 samples, 0.18%)</title><rect x="1185.8" y="1157" width="2.1" height="15.0" fill="rgb(229,195,54)" rx="2" ry="2" />
<text  x="1188.77" y="1167.5" ></text>
</g>
<g >
<title>tcp_rcv_established (18 samples, 3.23%)</title><rect x="1044.1" y="389" width="38.1" height="15.0" fill="rgb(208,13,50)" rx="2" ry="2" />
<text  x="1047.09" y="399.5" >tcp..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.18%)</title><rect x="661.3" y="629" width="2.1" height="15.0" fill="rgb(229,209,41)" rx="2" ry="2" />
<text  x="664.33" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.54%)</title><rect x="331.4" y="629" width="6.4" height="15.0" fill="rgb(218,1,28)" rx="2" ry="2" />
<text  x="334.43" y="639.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.18%)</title><rect x="963.7" y="229" width="2.1" height="15.0" fill="rgb(223,160,30)" rx="2" ry="2" />
<text  x="966.73" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.90%)</title><rect x="1128.7" y="1077" width="10.5" height="15.0" fill="rgb(206,211,53)" rx="2" ry="2" />
<text  x="1131.67" y="1087.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (28 samples, 5.02%)</title><rect x="595.8" y="437" width="59.2" height="15.0" fill="rgb(242,186,49)" rx="2" ry="2" />
<text  x="598.77" y="447.5" >ip_pro..</text>
</g>
<g >
<title>__sys_recvfrom (10 samples, 1.79%)</title><rect x="779.7" y="709" width="21.2" height="15.0" fill="rgb(216,198,49)" rx="2" ry="2" />
<text  x="782.75" y="719.5" ></text>
</g>
<g >
<title>net_rx_action (31 samples, 5.56%)</title><rect x="593.7" y="565" width="65.5" height="15.0" fill="rgb(250,114,39)" rx="2" ry="2" />
<text  x="596.66" y="575.5" >net_rx_..</text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.18%)</title><rect x="798.8" y="645" width="2.1" height="15.0" fill="rgb(212,4,34)" rx="2" ry="2" />
<text  x="801.78" y="655.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.18%)</title><rect x="817.8" y="805" width="2.1" height="15.0" fill="rgb(215,152,49)" rx="2" ry="2" />
<text  x="820.81" y="815.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.36%)</title><rect x="69.2" y="997" width="4.2" height="15.0" fill="rgb(252,165,16)" rx="2" ry="2" />
<text  x="72.21" y="1007.5" ></text>
</g>
<g >
<title>tcp_recvmsg (6 samples, 1.08%)</title><rect x="312.4" y="565" width="12.7" height="15.0" fill="rgb(243,81,51)" rx="2" ry="2" />
<text  x="315.40" y="575.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::to_le (1 samples, 0.18%)</title><rect x="282.8" y="853" width="2.1" height="15.0" fill="rgb(205,198,11)" rx="2" ry="2" />
<text  x="285.80" y="863.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.18%)</title><rect x="416.0" y="533" width="2.1" height="15.0" fill="rgb(222,188,49)" rx="2" ry="2" />
<text  x="419.02" y="543.5" ></text>
</g>
<g >
<title>ip_queue_xmit (28 samples, 5.02%)</title><rect x="428.7" y="533" width="59.2" height="15.0" fill="rgb(253,19,41)" rx="2" ry="2" />
<text  x="431.71" y="543.5" >ip_que..</text>
</g>
<g >
<title>config::file::format::yaml::parse (1 samples, 0.18%)</title><rect x="45.9" y="1189" width="2.2" height="15.0" fill="rgb(209,117,42)" rx="2" ry="2" />
<text  x="48.95" y="1199.5" ></text>
</g>
<g >
<title>bincode::config::DefaultOptions::new (1 samples, 0.18%)</title><rect x="528.1" y="1061" width="2.1" height="15.0" fill="rgb(247,206,24)" rx="2" ry="2" />
<text  x="531.10" y="1071.5" ></text>
</g>
<g >
<title>config::source::Source::collect_to (1 samples, 0.18%)</title><rect x="48.1" y="1237" width="2.1" height="15.0" fill="rgb(252,29,43)" rx="2" ry="2" />
<text  x="51.06" y="1247.5" ></text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_CommandResponse::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.18%)</title><rect x="758.6" y="901" width="2.1" height="15.0" fill="rgb(236,171,42)" rx="2" ry="2" />
<text  x="761.60" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 1.08%)</title><rect x="312.4" y="645" width="12.7" height="15.0" fill="rgb(217,123,31)" rx="2" ry="2" />
<text  x="315.40" y="655.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.18%)</title><rect x="968.0" y="261" width="2.1" height="15.0" fill="rgb(226,136,18)" rx="2" ry="2" />
<text  x="970.96" y="271.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.18%)</title><rect x="589.4" y="613" width="2.1" height="15.0" fill="rgb(248,156,15)" rx="2" ry="2" />
<text  x="592.43" y="623.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (3 samples, 0.54%)</title><rect x="12.1" y="1301" width="6.4" height="15.0" fill="rgb(223,74,52)" rx="2" ry="2" />
<text  x="15.11" y="1311.5" ></text>
</g>
<g >
<title>config::file::format::FileFormat::parse (1 samples, 0.18%)</title><rect x="45.9" y="1205" width="2.2" height="15.0" fill="rgb(208,25,25)" rx="2" ry="2" />
<text  x="48.95" y="1215.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.18%)</title><rect x="466.8" y="197" width="2.1" height="15.0" fill="rgb(230,217,53)" rx="2" ry="2" />
<text  x="469.77" y="207.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (1 samples, 0.18%)</title><rect x="1185.8" y="1253" width="2.1" height="15.0" fill="rgb(216,204,1)" rx="2" ry="2" />
<text  x="1188.77" y="1263.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.18%)</title><rect x="1185.8" y="1125" width="2.1" height="15.0" fill="rgb(223,93,47)" rx="2" ry="2" />
<text  x="1188.77" y="1135.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (14 samples, 2.51%)</title><rect x="58.6" y="1093" width="29.6" height="15.0" fill="rgb(218,78,17)" rx="2" ry="2" />
<text  x="61.64" y="1103.5" >al..</text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.18%)</title><rect x="589.4" y="597" width="2.1" height="15.0" fill="rgb(219,26,37)" rx="2" ry="2" />
<text  x="592.43" y="607.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.18%)</title><rect x="900.3" y="549" width="2.1" height="15.0" fill="rgb(216,191,41)" rx="2" ry="2" />
<text  x="903.29" y="559.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (3 samples, 0.54%)</title><rect x="229.9" y="629" width="6.4" height="15.0" fill="rgb(217,146,12)" rx="2" ry="2" />
<text  x="232.93" y="639.5" ></text>
</g>
<g >
<title>tcp_recvmsg (14 samples, 2.51%)</title><rect x="210.9" y="661" width="29.6" height="15.0" fill="rgb(231,213,43)" rx="2" ry="2" />
<text  x="213.90" y="671.5" >tc..</text>
</g>
<g >
<title>loopback_xmit (2 samples, 0.36%)</title><rect x="483.7" y="389" width="4.2" height="15.0" fill="rgb(251,13,49)" rx="2" ry="2" />
<text  x="486.69" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 1.08%)</title><rect x="1128.7" y="1093" width="12.7" height="15.0" fill="rgb(251,0,27)" rx="2" ry="2" />
<text  x="1131.67" y="1103.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.18%)</title><rect x="965.8" y="277" width="2.2" height="15.0" fill="rgb(249,68,7)" rx="2" ry="2" />
<text  x="968.84" y="287.5" ></text>
</g>
<g >
<title>&lt;u32 as serde::de::from_primitive::FromPrimitive&gt;::from_u32 (2 samples, 0.36%)</title><rect x="168.6" y="869" width="4.2" height="15.0" fill="rgb(238,171,31)" rx="2" ry="2" />
<text  x="171.60" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.36%)</title><rect x="720.5" y="1061" width="4.3" height="15.0" fill="rgb(217,52,53)" rx="2" ry="2" />
<text  x="723.54" y="1071.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.36%)</title><rect x="953.2" y="149" width="4.2" height="15.0" fill="rgb(249,24,11)" rx="2" ry="2" />
<text  x="956.15" y="159.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.18%)</title><rect x="316.6" y="53" width="2.1" height="15.0" fill="rgb(223,149,15)" rx="2" ry="2" />
<text  x="319.63" y="63.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (11 samples, 1.97%)</title><rect x="693.0" y="965" width="23.3" height="15.0" fill="rgb(220,184,23)" rx="2" ry="2" />
<text  x="696.05" y="975.5" >s..</text>
</g>
<g >
<title>__skb_datagram_iter (3 samples, 0.54%)</title><rect x="898.2" y="581" width="6.3" height="15.0" fill="rgb(205,54,51)" rx="2" ry="2" />
<text  x="901.17" y="591.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.72%)</title><rect x="538.7" y="981" width="8.4" height="15.0" fill="rgb(209,107,14)" rx="2" ry="2" />
<text  x="541.67" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.54%)</title><rect x="1107.5" y="869" width="6.4" height="15.0" fill="rgb(205,29,9)" rx="2" ry="2" />
<text  x="1110.53" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (34 samples, 6.09%)</title><rect x="1020.8" y="805" width="71.9" height="15.0" fill="rgb(238,135,11)" rx="2" ry="2" />
<text  x="1023.82" y="815.5" >tcp_send..</text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.54%)</title><rect x="314.5" y="341" width="6.4" height="15.0" fill="rgb(209,218,47)" rx="2" ry="2" />
<text  x="317.52" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (1 samples, 0.18%)</title><rect x="48.1" y="1125" width="2.1" height="15.0" fill="rgb(235,196,16)" rx="2" ry="2" />
<text  x="51.06" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (66 samples, 11.83%)</title><rect x="363.2" y="693" width="139.5" height="15.0" fill="rgb(232,226,48)" rx="2" ry="2" />
<text  x="366.15" y="703.5" >do_syscall_64</text>
</g>
<g >
<title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.72%)</title><rect x="96.7" y="981" width="8.5" height="15.0" fill="rgb(214,165,8)" rx="2" ry="2" />
<text  x="99.70" y="991.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.18%)</title><rect x="794.6" y="597" width="2.1" height="15.0" fill="rgb(224,149,27)" rx="2" ry="2" />
<text  x="797.55" y="607.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 0.18%)</title><rect x="1088.5" y="741" width="2.1" height="15.0" fill="rgb(250,46,49)" rx="2" ry="2" />
<text  x="1091.49" y="751.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.18%)</title><rect x="1183.7" y="1125" width="2.1" height="15.0" fill="rgb(231,23,22)" rx="2" ry="2" />
<text  x="1186.66" y="1135.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.36%)</title><rect x="333.5" y="549" width="4.3" height="15.0" fill="rgb(211,7,1)" rx="2" ry="2" />
<text  x="336.55" y="559.5" ></text>
</g>
<g >
<title>&lt;bincode::de::read::IoReader&lt;R&gt; as std::io::Read&gt;::read_exact (4 samples, 0.72%)</title><rect x="331.4" y="741" width="8.5" height="15.0" fill="rgb(249,120,29)" rx="2" ry="2" />
<text  x="334.43" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (1 samples, 0.18%)</title><rect x="50.2" y="1093" width="2.1" height="15.0" fill="rgb(209,204,50)" rx="2" ry="2" />
<text  x="53.18" y="1103.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (71 samples, 12.72%)</title><rect x="855.9" y="869" width="150.1" height="15.0" fill="rgb(242,139,12)" rx="2" ry="2" />
<text  x="858.88" y="879.5" >serde::de::impls::&lt;..</text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_CommandResponse::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.36%)</title><rect x="160.1" y="901" width="4.3" height="15.0" fill="rgb(253,109,12)" rx="2" ry="2" />
<text  x="163.14" y="911.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.36%)</title><rect x="993.3" y="741" width="4.3" height="15.0" fill="rgb(243,35,17)" rx="2" ry="2" />
<text  x="996.33" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::hack::into_vec (4 samples, 0.72%)</title><rect x="130.5" y="997" width="8.5" height="15.0" fill="rgb(240,99,24)" rx="2" ry="2" />
<text  x="133.54" y="1007.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (6 samples, 1.08%)</title><rect x="948.9" y="213" width="12.7" height="15.0" fill="rgb(220,56,18)" rx="2" ry="2" />
<text  x="951.92" y="223.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (22 samples, 3.94%)</title><rect x="608.5" y="357" width="46.5" height="15.0" fill="rgb(226,132,34)" rx="2" ry="2" />
<text  x="611.46" y="367.5" >__wa..</text>
</g>
<g >
<title>std::io::append_to_string (1 samples, 0.18%)</title><rect x="43.8" y="1173" width="2.1" height="15.0" fill="rgb(244,171,2)" rx="2" ry="2" />
<text  x="46.84" y="1183.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.18%)</title><rect x="314.5" y="133" width="2.1" height="15.0" fill="rgb(206,5,8)" rx="2" ry="2" />
<text  x="317.52" y="143.5" ></text>
</g>
<g >
<title>iptable_security_hook (6 samples, 1.08%)</title><rect x="430.8" y="453" width="12.7" height="15.0" fill="rgb(220,25,34)" rx="2" ry="2" />
<text  x="433.82" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 3.05%)</title><rect x="206.7" y="757" width="35.9" height="15.0" fill="rgb(250,68,35)" rx="2" ry="2" />
<text  x="209.67" y="767.5" >ent..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.18%)</title><rect x="993.3" y="725" width="2.1" height="15.0" fill="rgb(219,118,47)" rx="2" ry="2" />
<text  x="996.33" y="735.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.18%)</title><rect x="940.5" y="309" width="2.1" height="15.0" fill="rgb(228,123,42)" rx="2" ry="2" />
<text  x="943.47" y="319.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_from (189 samples, 33.87%)</title><rect x="128.4" y="1061" width="399.7" height="15.0" fill="rgb(240,14,20)" rx="2" ry="2" />
<text  x="131.42" y="1071.5" >bincode::internal::deserialize_from</text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.72%)</title><rect x="600.0" y="309" width="8.5" height="15.0" fill="rgb(251,32,3)" rx="2" ry="2" />
<text  x="603.00" y="319.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.18%)</title><rect x="885.5" y="597" width="2.1" height="15.0" fill="rgb(233,26,9)" rx="2" ry="2" />
<text  x="888.48" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (3 samples, 0.54%)</title><rect x="331.4" y="597" width="6.4" height="15.0" fill="rgb(246,183,51)" rx="2" ry="2" />
<text  x="334.43" y="607.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u32 (41 samples, 7.35%)</title><rect x="1012.4" y="997" width="86.7" height="15.0" fill="rgb(210,212,23)" rx="2" ry="2" />
<text  x="1015.37" y="1007.5" >byteorder:..</text>
</g>
<g >
<title>iput (1 samples, 0.18%)</title><rect x="109.4" y="869" width="2.1" height="15.0" fill="rgb(205,5,14)" rx="2" ry="2" />
<text  x="112.39" y="879.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.18%)</title><rect x="331.4" y="565" width="2.1" height="15.0" fill="rgb(205,37,38)" rx="2" ry="2" />
<text  x="334.43" y="575.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.18%)</title><rect x="667.7" y="709" width="2.1" height="15.0" fill="rgb(210,146,0)" rx="2" ry="2" />
<text  x="670.67" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.54%)</title><rect x="521.8" y="1013" width="6.3" height="15.0" fill="rgb(210,135,27)" rx="2" ry="2" />
<text  x="524.76" y="1023.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.18%)</title><rect x="16.3" y="1205" width="2.2" height="15.0" fill="rgb(245,141,31)" rx="2" ry="2" />
<text  x="19.34" y="1215.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.90%)</title><rect x="242.6" y="837" width="10.6" height="15.0" fill="rgb(230,26,3)" rx="2" ry="2" />
<text  x="245.62" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="10.0" y="1253" width="2.1" height="15.0" fill="rgb(250,221,25)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>std::time::Instant::now (1 samples, 0.18%)</title><rect x="1185.8" y="997" width="2.1" height="15.0" fill="rgb(247,196,24)" rx="2" ry="2" />
<text  x="1188.77" y="1007.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.18%)</title><rect x="1168.9" y="1077" width="2.1" height="15.0" fill="rgb(233,25,18)" rx="2" ry="2" />
<text  x="1171.85" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap$LT$K$C$V$C$S$GT$::insert::_$u7b$$u7b$closure$u7d$$u7d$::h9a467c0027bc952d (1 samples, 0.18%)</title><rect x="48.1" y="1109" width="2.1" height="15.0" fill="rgb(231,73,25)" rx="2" ry="2" />
<text  x="51.06" y="1119.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (61 samples, 10.93%)</title><rect x="164.4" y="917" width="129.0" height="15.0" fill="rgb(219,195,50)" rx="2" ry="2" />
<text  x="167.37" y="927.5" >serde::de::impls..</text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="1168.9" y="1109" width="2.1" height="15.0" fill="rgb(237,13,19)" rx="2" ry="2" />
<text  x="1171.85" y="1119.5" ></text>
</g>
<g >
<title>core::mem::forget (1 samples, 0.18%)</title><rect x="739.6" y="933" width="2.1" height="15.0" fill="rgb(210,131,15)" rx="2" ry="2" />
<text  x="742.57" y="943.5" ></text>
</g>
<g >
<title>__netif_receive_skb (8 samples, 1.43%)</title><rect x="462.5" y="341" width="17.0" height="15.0" fill="rgb(238,64,6)" rx="2" ry="2" />
<text  x="465.54" y="351.5" ></text>
</g>
<g >
<title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.18%)</title><rect x="107.3" y="997" width="2.1" height="15.0" fill="rgb(224,162,48)" rx="2" ry="2" />
<text  x="110.28" y="1007.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.18%)</title><rect x="14.2" y="1093" width="2.1" height="15.0" fill="rgb(206,170,52)" rx="2" ry="2" />
<text  x="17.23" y="1103.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.18%)</title><rect x="14.2" y="1189" width="2.1" height="15.0" fill="rgb(243,16,28)" rx="2" ry="2" />
<text  x="17.23" y="1199.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.36%)</title><rect x="225.7" y="581" width="4.2" height="15.0" fill="rgb(218,141,41)" rx="2" ry="2" />
<text  x="228.70" y="591.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.18%)</title><rect x="314.5" y="85" width="2.1" height="15.0" fill="rgb(234,167,8)" rx="2" ry="2" />
<text  x="317.52" y="95.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (105 samples, 18.82%)</title><rect x="297.6" y="885" width="222.0" height="15.0" fill="rgb(246,55,40)" rx="2" ry="2" />
<text  x="300.60" y="895.5" >&lt;&amp;mut bincode::de::Deserializ..</text>
</g>
<g >
<title>alloc::raw_vec::alloc_guard (1 samples, 0.18%)</title><rect x="84.0" y="981" width="2.1" height="15.0" fill="rgb(253,167,52)" rx="2" ry="2" />
<text  x="87.01" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (105 samples, 18.82%)</title><rect x="297.6" y="933" width="222.0" height="15.0" fill="rgb(209,45,3)" rx="2" ry="2" />
<text  x="300.60" y="943.5" >&lt;&amp;mut bincode::de::Deserializ..</text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.36%)</title><rect x="786.1" y="565" width="4.2" height="15.0" fill="rgb(232,199,19)" rx="2" ry="2" />
<text  x="789.09" y="575.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (53 samples, 9.50%)</title><rect x="561.9" y="805" width="112.1" height="15.0" fill="rgb(210,98,12)" rx="2" ry="2" />
<text  x="564.94" y="815.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>ipv4_conntrack_local (1 samples, 0.18%)</title><rect x="1037.7" y="645" width="2.2" height="15.0" fill="rgb(211,112,7)" rx="2" ry="2" />
<text  x="1040.74" y="655.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.18%)</title><rect x="1088.5" y="709" width="2.1" height="15.0" fill="rgb(243,216,13)" rx="2" ry="2" />
<text  x="1091.49" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (6 samples, 1.08%)</title><rect x="312.4" y="629" width="12.7" height="15.0" fill="rgb(234,111,51)" rx="2" ry="2" />
<text  x="315.40" y="639.5" ></text>
</g>
<g >
<title>_do_fork (1 samples, 0.18%)</title><rect x="10.0" y="1205" width="2.1" height="15.0" fill="rgb(237,201,43)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.36%)</title><rect x="830.5" y="837" width="4.2" height="15.0" fill="rgb(225,8,42)" rx="2" ry="2" />
<text  x="833.50" y="847.5" ></text>
</g>
<g >
<title>inet_recvmsg (55 samples, 9.86%)</title><rect x="371.6" y="629" width="116.3" height="15.0" fill="rgb(216,166,4)" rx="2" ry="2" />
<text  x="374.61" y="639.5" >inet_recvmsg</text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (178 samples, 31.90%)</title><rect x="143.2" y="1013" width="376.4" height="15.0" fill="rgb(224,58,16)" rx="2" ry="2" />
<text  x="146.23" y="1023.5" >&lt;core::marker::PhantomData&lt;T&gt; as serde::de::Deseria..</text>
</g>
<g >
<title>do_syscall_64 (17 samples, 3.05%)</title><rect x="206.7" y="741" width="35.9" height="15.0" fill="rgb(242,201,36)" rx="2" ry="2" />
<text  x="209.67" y="751.5" >do_..</text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.36%)</title><rect x="980.6" y="581" width="4.3" height="15.0" fill="rgb(242,11,48)" rx="2" ry="2" />
<text  x="983.65" y="591.5" ></text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_CommandResponse::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (121 samples, 21.68%)</title><rect x="750.1" y="965" width="255.9" height="15.0" fill="rgb(218,92,47)" rx="2" ry="2" />
<text  x="753.14" y="975.5" >&lt;cse403_distributed_hash_table::tr..</text>
</g>
<g >
<title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.18%)</title><rect x="35.4" y="1205" width="2.1" height="15.0" fill="rgb(211,154,7)" rx="2" ry="2" />
<text  x="38.38" y="1215.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (2 samples, 0.36%)</title><rect x="236.3" y="645" width="4.2" height="15.0" fill="rgb(252,164,13)" rx="2" ry="2" />
<text  x="239.27" y="655.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.18%)</title><rect x="37.5" y="1221" width="2.1" height="15.0" fill="rgb(218,3,17)" rx="2" ry="2" />
<text  x="40.49" y="1231.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (3 samples, 0.54%)</title><rect x="229.9" y="645" width="6.4" height="15.0" fill="rgb(210,179,28)" rx="2" ry="2" />
<text  x="232.93" y="655.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.18%)</title><rect x="705.7" y="757" width="2.1" height="15.0" fill="rgb(208,221,28)" rx="2" ry="2" />
<text  x="708.73" y="767.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_raw (4 samples, 0.72%)</title><rect x="733.2" y="981" width="8.5" height="15.0" fill="rgb(225,199,40)" rx="2" ry="2" />
<text  x="736.23" y="991.5" ></text>
</g>
<g >
<title>config::path::Expression::set (1 samples, 0.18%)</title><rect x="48.1" y="1221" width="2.1" height="15.0" fill="rgb(230,107,21)" rx="2" ry="2" />
<text  x="51.06" y="1231.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::read_vec (20 samples, 3.58%)</title><rect x="301.8" y="805" width="42.3" height="15.0" fill="rgb(224,91,24)" rx="2" ry="2" />
<text  x="304.83" y="815.5" >bin..</text>
</g>
<g >
<title>sk_wait_data (6 samples, 1.08%)</title><rect x="217.2" y="645" width="12.7" height="15.0" fill="rgb(225,115,26)" rx="2" ry="2" />
<text  x="220.24" y="655.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u64 (6 samples, 1.08%)</title><rect x="1101.2" y="981" width="12.7" height="15.0" fill="rgb(249,18,35)" rx="2" ry="2" />
<text  x="1104.18" y="991.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.18%)</title><rect x="758.6" y="917" width="2.1" height="15.0" fill="rgb(226,27,7)" rx="2" ry="2" />
<text  x="761.60" y="927.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.18%)</title><rect x="1187.9" y="1205" width="2.1" height="15.0" fill="rgb(218,228,21)" rx="2" ry="2" />
<text  x="1190.89" y="1215.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u8 (68 samples, 12.19%)</title><rect x="862.2" y="853" width="143.8" height="15.0" fill="rgb(243,204,35)" rx="2" ry="2" />
<text  x="865.22" y="863.5" >&lt;&amp;mut bincode::de:..</text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.18%)</title><rect x="1046.2" y="309" width="2.1" height="15.0" fill="rgb(231,134,40)" rx="2" ry="2" />
<text  x="1049.20" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (5 samples, 0.90%)</title><rect x="1158.3" y="1045" width="10.6" height="15.0" fill="rgb(251,130,33)" rx="2" ry="2" />
<text  x="1161.28" y="1055.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (5 samples, 0.90%)</title><rect x="314.5" y="549" width="10.6" height="15.0" fill="rgb(240,177,7)" rx="2" ry="2" />
<text  x="317.52" y="559.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (43 samples, 7.71%)</title><rect x="762.8" y="917" width="91.0" height="15.0" fill="rgb(249,106,53)" rx="2" ry="2" />
<text  x="765.83" y="927.5" >serde::de:..</text>
</g>
<g >
<title>std::panicking::try (534 samples, 95.70%)</title><rect x="52.3" y="1205" width="1129.2" height="15.0" fill="rgb(226,63,15)" rx="2" ry="2" />
<text  x="55.29" y="1215.5" >std::panicking::try</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.18%)</title><rect x="310.3" y="709" width="2.1" height="15.0" fill="rgb(236,190,34)" rx="2" ry="2" />
<text  x="313.29" y="719.5" ></text>
</g>
<g >
<title>tcp_recvmsg (7 samples, 1.25%)</title><rect x="781.9" y="661" width="14.8" height="15.0" fill="rgb(229,20,23)" rx="2" ry="2" />
<text  x="784.86" y="671.5" ></text>
</g>
<g >
<title>inet_sendmsg (3 samples, 0.54%)</title><rect x="1107.5" y="805" width="6.4" height="15.0" fill="rgb(247,162,45)" rx="2" ry="2" />
<text  x="1110.53" y="815.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (19 samples, 3.41%)</title><rect x="932.0" y="437" width="40.2" height="15.0" fill="rgb(251,17,6)" rx="2" ry="2" />
<text  x="935.01" y="447.5" >__l..</text>
</g>
<g >
<title>ip_send_check (1 samples, 0.18%)</title><rect x="913.0" y="469" width="2.1" height="15.0" fill="rgb(216,223,2)" rx="2" ry="2" />
<text  x="915.97" y="479.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.18%)</title><rect x="498.5" y="613" width="2.1" height="15.0" fill="rgb(234,169,14)" rx="2" ry="2" />
<text  x="501.49" y="623.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.18%)</title><rect x="699.4" y="789" width="2.1" height="15.0" fill="rgb(208,200,7)" rx="2" ry="2" />
<text  x="702.39" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.18%)</title><rect x="48.1" y="1093" width="2.1" height="15.0" fill="rgb(225,173,52)" rx="2" ry="2" />
<text  x="51.06" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.18%)</title><rect x="14.2" y="1221" width="2.1" height="15.0" fill="rgb(253,5,17)" rx="2" ry="2" />
<text  x="17.23" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 2.87%)</title><rect x="18.5" y="1301" width="33.8" height="15.0" fill="rgb(223,161,20)" rx="2" ry="2" />
<text  x="21.46" y="1311.5" >[u..</text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::raw (2 samples, 0.36%)</title><rect x="984.9" y="725" width="4.2" height="15.0" fill="rgb(225,112,32)" rx="2" ry="2" />
<text  x="987.87" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (4 samples, 0.72%)</title><rect x="303.9" y="757" width="8.5" height="15.0" fill="rgb(227,163,35)" rx="2" ry="2" />
<text  x="306.94" y="767.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.18%)</title><rect x="1130.8" y="1013" width="2.1" height="15.0" fill="rgb(205,48,18)" rx="2" ry="2" />
<text  x="1133.79" y="1023.5" ></text>
</g>
<g >
<title>__send (4 samples, 0.72%)</title><rect x="1118.1" y="917" width="8.5" height="15.0" fill="rgb(207,218,48)" rx="2" ry="2" />
<text  x="1121.10" y="927.5" ></text>
</g>
<g >
<title>config::config::Config::refresh (2 samples, 0.36%)</title><rect x="43.8" y="1285" width="4.3" height="15.0" fill="rgb(238,216,19)" rx="2" ry="2" />
<text  x="46.84" y="1295.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 0.36%)</title><rect x="1122.3" y="741" width="4.3" height="15.0" fill="rgb(247,86,51)" rx="2" ry="2" />
<text  x="1125.33" y="751.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_raw_non_null (4 samples, 0.72%)</title><rect x="733.2" y="965" width="8.5" height="15.0" fill="rgb(239,33,8)" rx="2" ry="2" />
<text  x="736.23" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="10.0" y="1237" width="2.1" height="15.0" fill="rgb(228,109,22)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.18%)</title><rect x="1177.3" y="853" width="2.1" height="15.0" fill="rgb(211,137,35)" rx="2" ry="2" />
<text  x="1180.31" y="863.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (5 samples, 0.90%)</title><rect x="416.0" y="597" width="10.6" height="15.0" fill="rgb(207,144,38)" rx="2" ry="2" />
<text  x="419.02" y="607.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.18%)</title><rect x="1031.4" y="757" width="2.1" height="15.0" fill="rgb(215,73,0)" rx="2" ry="2" />
<text  x="1034.40" y="767.5" ></text>
</g>
<g >
<title>c2_chacha::guts::refill_wide::fn_impl (12 samples, 2.15%)</title><rect x="18.5" y="1269" width="25.3" height="15.0" fill="rgb(207,131,46)" rx="2" ry="2" />
<text  x="21.46" y="1279.5" >c..</text>
</g>
<g >
<title>schedule_timeout (5 samples, 0.90%)</title><rect x="887.6" y="565" width="10.6" height="15.0" fill="rgb(217,56,11)" rx="2" ry="2" />
<text  x="890.60" y="575.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (4 samples, 0.72%)</title><rect x="471.0" y="165" width="8.5" height="15.0" fill="rgb(237,42,1)" rx="2" ry="2" />
<text  x="474.00" y="175.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="904.5" y="597" width="2.1" height="15.0" fill="rgb(251,116,8)" rx="2" ry="2" />
<text  x="907.52" y="607.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="314.5" y="117" width="2.1" height="15.0" fill="rgb(254,174,19)" rx="2" ry="2" />
<text  x="317.52" y="127.5" ></text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.36%)</title><rect x="1027.2" y="773" width="4.2" height="15.0" fill="rgb(211,188,49)" rx="2" ry="2" />
<text  x="1030.17" y="783.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_u32 (1 samples, 0.18%)</title><rect x="758.6" y="853" width="2.1" height="15.0" fill="rgb(244,100,32)" rx="2" ry="2" />
<text  x="761.60" y="863.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (3 samples, 0.54%)</title><rect x="790.3" y="645" width="6.4" height="15.0" fill="rgb(230,37,33)" rx="2" ry="2" />
<text  x="793.32" y="655.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.18%)</title><rect x="215.1" y="597" width="2.1" height="15.0" fill="rgb(209,85,0)" rx="2" ry="2" />
<text  x="218.13" y="607.5" ></text>
</g>
<g >
<title>clone (1 samples, 0.18%)</title><rect x="10.0" y="1269" width="2.1" height="15.0" fill="rgb(237,223,50)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u32 (60 samples, 10.75%)</title><rect x="166.5" y="901" width="126.9" height="15.0" fill="rgb(246,94,39)" rx="2" ry="2" />
<text  x="169.49" y="911.5" >&lt;&amp;mut bincode::..</text>
</g>
<g >
<title>ip_rcv (13 samples, 2.33%)</title><rect x="942.6" y="309" width="27.5" height="15.0" fill="rgb(247,199,3)" rx="2" ry="2" />
<text  x="945.58" y="319.5" >i..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.36%)</title><rect x="1113.9" y="981" width="4.2" height="15.0" fill="rgb(206,66,0)" rx="2" ry="2" />
<text  x="1116.87" y="991.5" ></text>
</g>
<g >
<title>inet_sendmsg (55 samples, 9.86%)</title><rect x="557.7" y="837" width="116.3" height="15.0" fill="rgb(217,121,51)" rx="2" ry="2" />
<text  x="560.71" y="847.5" >inet_sendmsg</text>
</g>
<g >
<title>all (558 samples, 100%)</title><rect x="10.0" y="1333" width="1180.0" height="15.0" fill="rgb(229,128,1)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>__lock_text_start (22 samples, 3.94%)</title><rect x="608.5" y="325" width="46.5" height="15.0" fill="rgb(236,208,43)" rx="2" ry="2" />
<text  x="611.46" y="335.5" >__lo..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (3 samples, 0.54%)</title><rect x="314.5" y="277" width="6.4" height="15.0" fill="rgb(207,65,49)" rx="2" ry="2" />
<text  x="317.52" y="287.5" ></text>
</g>
<g >
<title>std::io::Read::read_exact (4 samples, 0.72%)</title><rect x="331.4" y="725" width="8.5" height="15.0" fill="rgb(247,19,11)" rx="2" ry="2" />
<text  x="334.43" y="735.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (88 samples, 15.77%)</title><rect x="530.2" y="1061" width="186.1" height="15.0" fill="rgb(233,194,0)" rx="2" ry="2" />
<text  x="533.22" y="1071.5" >bincode::internal::seria..</text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.54%)</title><rect x="314.5" y="213" width="6.4" height="15.0" fill="rgb(244,71,13)" rx="2" ry="2" />
<text  x="317.52" y="223.5" ></text>
</g>
<g >
<title>c2_chacha::guts::init_chacha (1 samples, 0.18%)</title><rect x="1177.3" y="917" width="2.1" height="15.0" fill="rgb(212,15,0)" rx="2" ry="2" />
<text  x="1180.31" y="927.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.18%)</title><rect x="959.5" y="181" width="2.1" height="15.0" fill="rgb(220,134,0)" rx="2" ry="2" />
<text  x="962.50" y="191.5" ></text>
</g>
<g >
<title>std::io::Read::read_exact (29 samples, 5.20%)</title><rect x="764.9" y="853" width="61.4" height="15.0" fill="rgb(226,229,5)" rx="2" ry="2" />
<text  x="767.95" y="863.5" >std::i..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (4 samples, 0.72%)</title><rect x="1118.1" y="933" width="8.5" height="15.0" fill="rgb(224,70,54)" rx="2" ry="2" />
<text  x="1121.10" y="943.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_CommandResponse::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::deserialize (123 samples, 22.04%)</title><rect x="745.9" y="997" width="260.1" height="15.0" fill="rgb(248,137,25)" rx="2" ry="2" />
<text  x="748.91" y="1007.5" >cse403_distributed_hash_table::tra..</text>
</g>
<g >
<title>ip_rcv (7 samples, 1.25%)</title><rect x="464.7" y="309" width="14.8" height="15.0" fill="rgb(216,71,51)" rx="2" ry="2" />
<text  x="467.66" y="319.5" ></text>
</g>
<g >
<title>ip_rcv (19 samples, 3.41%)</title><rect x="1042.0" y="501" width="40.2" height="15.0" fill="rgb(238,71,20)" rx="2" ry="2" />
<text  x="1044.97" y="511.5" >ip_..</text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.72%)</title><rect x="331.4" y="661" width="8.5" height="15.0" fill="rgb(225,12,44)" rx="2" ry="2" />
<text  x="334.43" y="671.5" ></text>
</g>
<g >
<title>&lt;yaml_rust::scanner::Scanner&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.18%)</title><rect x="50.2" y="1173" width="2.1" height="15.0" fill="rgb(223,151,28)" rx="2" ry="2" />
<text  x="53.18" y="1183.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.18%)</title><rect x="948.9" y="149" width="2.1" height="15.0" fill="rgb(224,208,21)" rx="2" ry="2" />
<text  x="951.92" y="159.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u32 (11 samples, 1.97%)</title><rect x="693.0" y="997" width="23.3" height="15.0" fill="rgb(215,157,14)" rx="2" ry="2" />
<text  x="696.05" y="1007.5" >&lt;..</text>
</g>
<g >
<title>bincode::serialize_into (1 samples, 0.18%)</title><rect x="109.4" y="1109" width="2.1" height="15.0" fill="rgb(250,99,40)" rx="2" ry="2" />
<text  x="112.39" y="1119.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.90%)</title><rect x="1158.3" y="1029" width="10.6" height="15.0" fill="rgb(231,1,34)" rx="2" ry="2" />
<text  x="1161.28" y="1039.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (3 samples, 0.54%)</title><rect x="790.3" y="629" width="6.4" height="15.0" fill="rgb(241,55,37)" rx="2" ry="2" />
<text  x="793.32" y="639.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (28 samples, 5.02%)</title><rect x="428.7" y="549" width="59.2" height="15.0" fill="rgb(217,62,50)" rx="2" ry="2" />
<text  x="431.71" y="559.5" >__tcp_..</text>
</g>
<g >
<title>sock_sendmsg (36 samples, 6.45%)</title><rect x="1020.8" y="853" width="76.2" height="15.0" fill="rgb(211,169,54)" rx="2" ry="2" />
<text  x="1023.82" y="863.5" >sock_sen..</text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.18%)</title><rect x="705.7" y="773" width="2.1" height="15.0" fill="rgb(226,131,14)" rx="2" ry="2" />
<text  x="708.73" y="783.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.18%)</title><rect x="308.2" y="677" width="2.1" height="15.0" fill="rgb(241,185,36)" rx="2" ry="2" />
<text  x="311.17" y="687.5" ></text>
</g>
<g >
<title>__nf_ct_l4proto_find (1 samples, 0.18%)</title><rect x="445.6" y="421" width="2.1" height="15.0" fill="rgb(249,15,30)" rx="2" ry="2" />
<text  x="448.63" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.18%)</title><rect x="1116.0" y="949" width="2.1" height="15.0" fill="rgb(248,167,5)" rx="2" ry="2" />
<text  x="1118.99" y="959.5" ></text>
</g>
<g >
<title>__kfree_skb (3 samples, 0.54%)</title><rect x="473.1" y="149" width="6.4" height="15.0" fill="rgb(211,57,14)" rx="2" ry="2" />
<text  x="476.12" y="159.5" ></text>
</g>
<g >
<title>std::io::Read::read_to_string (1 samples, 0.18%)</title><rect x="43.8" y="1189" width="2.1" height="15.0" fill="rgb(212,215,7)" rx="2" ry="2" />
<text  x="46.84" y="1199.5" ></text>
</g>
<g >
<title>ip_queue_xmit (5 samples, 0.90%)</title><rect x="314.5" y="485" width="10.6" height="15.0" fill="rgb(225,161,33)" rx="2" ry="2" />
<text  x="317.52" y="495.5" ></text>
</g>
<g >
<title>dentry_kill (1 samples, 0.18%)</title><rect x="109.4" y="917" width="2.1" height="15.0" fill="rgb(225,61,11)" rx="2" ry="2" />
<text  x="112.39" y="927.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (2 samples, 0.36%)</title><rect x="834.7" y="853" width="4.3" height="15.0" fill="rgb(236,1,48)" rx="2" ry="2" />
<text  x="837.73" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.61%)</title><rect x="695.2" y="901" width="19.0" height="15.0" fill="rgb(246,30,30)" rx="2" ry="2" />
<text  x="698.16" y="911.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.18%)</title><rect x="253.2" y="837" width="2.1" height="15.0" fill="rgb(225,63,22)" rx="2" ry="2" />
<text  x="256.19" y="847.5" ></text>
</g>
<g >
<title>__sys_sendto (39 samples, 6.99%)</title><rect x="1016.6" y="869" width="82.5" height="15.0" fill="rgb(224,47,54)" rx="2" ry="2" />
<text  x="1019.59" y="879.5" >__sys_sen..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h640bd2c5797e63da (1 samples, 0.18%)</title><rect x="1185.8" y="1221" width="2.1" height="15.0" fill="rgb(237,197,13)" rx="2" ry="2" />
<text  x="1188.77" y="1231.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u32 (5 samples, 0.90%)</title><rect x="1118.1" y="981" width="10.6" height="15.0" fill="rgb(231,58,48)" rx="2" ry="2" />
<text  x="1121.10" y="991.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.18%)</title><rect x="948.9" y="165" width="2.1" height="15.0" fill="rgb(229,162,9)" rx="2" ry="2" />
<text  x="951.92" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.18%)</title><rect x="16.3" y="1221" width="2.2" height="15.0" fill="rgb(243,26,46)" rx="2" ry="2" />
<text  x="19.34" y="1231.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.72%)</title><rect x="257.4" y="789" width="8.5" height="15.0" fill="rgb(242,124,48)" rx="2" ry="2" />
<text  x="260.42" y="799.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.54%)</title><rect x="991.2" y="757" width="6.4" height="15.0" fill="rgb(216,168,25)" rx="2" ry="2" />
<text  x="994.22" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 1.08%)</title><rect x="75.6" y="997" width="12.6" height="15.0" fill="rgb(243,167,48)" rx="2" ry="2" />
<text  x="78.56" y="1007.5" ></text>
</g>
<g >
<title>ip_local_out (28 samples, 5.02%)</title><rect x="428.7" y="501" width="59.2" height="15.0" fill="rgb(226,169,8)" rx="2" ry="2" />
<text  x="431.71" y="511.5" >ip_loc..</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.18%)</title><rect x="968.0" y="293" width="2.1" height="15.0" fill="rgb(230,117,31)" rx="2" ry="2" />
<text  x="970.96" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.18%)</title><rect x="342.0" y="725" width="2.1" height="15.0" fill="rgb(230,169,13)" rx="2" ry="2" />
<text  x="345.01" y="735.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.18%)</title><rect x="12.1" y="1285" width="2.1" height="15.0" fill="rgb(252,129,22)" rx="2" ry="2" />
<text  x="15.11" y="1295.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (3 samples, 0.54%)</title><rect x="997.6" y="757" width="6.3" height="15.0" fill="rgb(214,105,20)" rx="2" ry="2" />
<text  x="1000.56" y="767.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.18%)</title><rect x="1120.2" y="757" width="2.1" height="15.0" fill="rgb(212,102,48)" rx="2" ry="2" />
<text  x="1123.22" y="767.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.36%)</title><rect x="18.5" y="1205" width="4.2" height="15.0" fill="rgb(217,10,5)" rx="2" ry="2" />
<text  x="21.46" y="1215.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.18%)</title><rect x="1139.2" y="1061" width="2.2" height="15.0" fill="rgb(254,24,2)" rx="2" ry="2" />
<text  x="1142.25" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.18%)</title><rect x="67.1" y="965" width="2.1" height="15.0" fill="rgb(206,60,22)" rx="2" ry="2" />
<text  x="70.10" y="975.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.18%)</title><rect x="232.0" y="597" width="2.2" height="15.0" fill="rgb(209,47,43)" rx="2" ry="2" />
<text  x="235.04" y="607.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::read_bytes (1 samples, 0.18%)</title><rect x="354.7" y="821" width="2.1" height="15.0" fill="rgb(234,226,17)" rx="2" ry="2" />
<text  x="357.70" y="831.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (1 samples, 0.18%)</title><rect x="968.0" y="277" width="2.1" height="15.0" fill="rgb(243,143,16)" rx="2" ry="2" />
<text  x="970.96" y="287.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.18%)</title><rect x="240.5" y="677" width="2.1" height="15.0" fill="rgb(245,75,51)" rx="2" ry="2" />
<text  x="243.50" y="687.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.36%)</title><rect x="39.6" y="1205" width="4.2" height="15.0" fill="rgb(212,101,15)" rx="2" ry="2" />
<text  x="42.61" y="1215.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.54%)</title><rect x="111.5" y="1061" width="6.3" height="15.0" fill="rgb(213,153,9)" rx="2" ry="2" />
<text  x="114.51" y="1071.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.18%)</title><rect x="752.3" y="949" width="2.1" height="15.0" fill="rgb(207,38,16)" rx="2" ry="2" />
<text  x="755.26" y="959.5" ></text>
</g>
<g >
<title>ip_output (22 samples, 3.94%)</title><rect x="932.0" y="485" width="46.5" height="15.0" fill="rgb(220,194,3)" rx="2" ry="2" />
<text  x="935.01" y="495.5" >ip_o..</text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for bool&gt;::deserialize (72 samples, 12.90%)</title><rect x="853.8" y="901" width="152.2" height="15.0" fill="rgb(211,12,34)" rx="2" ry="2" />
<text  x="856.76" y="911.5" >serde::de::impls::&lt;..</text>
</g>
<g >
<title>do_mmap (1 samples, 0.18%)</title><rect x="14.2" y="1173" width="2.1" height="15.0" fill="rgb(241,171,22)" rx="2" ry="2" />
<text  x="17.23" y="1183.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.54%)</title><rect x="784.0" y="597" width="6.3" height="15.0" fill="rgb(229,157,16)" rx="2" ry="2" />
<text  x="786.98" y="607.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.36%)</title><rect x="382.2" y="597" width="4.2" height="15.0" fill="rgb(217,54,30)" rx="2" ry="2" />
<text  x="385.19" y="607.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.18%)</title><rect x="572.5" y="757" width="2.1" height="15.0" fill="rgb(207,110,18)" rx="2" ry="2" />
<text  x="575.51" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (69 samples, 12.37%)</title><rect x="356.8" y="741" width="145.9" height="15.0" fill="rgb(222,108,0)" rx="2" ry="2" />
<text  x="359.81" y="751.5" >std::sys::unix::ne..</text>
</g>
<g >
<title>ip_finish_output2 (20 samples, 3.58%)</title><rect x="1039.9" y="645" width="42.3" height="15.0" fill="rgb(225,40,28)" rx="2" ry="2" />
<text  x="1042.86" y="655.5" >ip_..</text>
</g>
<g >
<title>sigaltstack (1 samples, 0.18%)</title><rect x="1181.5" y="1189" width="2.2" height="15.0" fill="rgb(217,77,54)" rx="2" ry="2" />
<text  x="1184.54" y="1199.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.72%)</title><rect x="111.5" y="1093" width="8.5" height="15.0" fill="rgb(247,177,7)" rx="2" ry="2" />
<text  x="114.51" y="1103.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.18%)</title><rect x="676.1" y="789" width="2.1" height="15.0" fill="rgb(226,66,52)" rx="2" ry="2" />
<text  x="679.13" y="799.5" ></text>
</g>
<g >
<title>std::io::Read::read_exact (41 samples, 7.35%)</title><rect x="183.4" y="853" width="86.7" height="15.0" fill="rgb(237,109,34)" rx="2" ry="2" />
<text  x="186.41" y="863.5" >std::io::R..</text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="1003.9" y="837" width="2.1" height="15.0" fill="rgb(212,168,49)" rx="2" ry="2" />
<text  x="1006.91" y="847.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.18%)</title><rect x="661.3" y="549" width="2.1" height="15.0" fill="rgb(223,198,25)" rx="2" ry="2" />
<text  x="664.33" y="559.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.18%)</title><rect x="955.3" y="133" width="2.1" height="15.0" fill="rgb(245,57,52)" rx="2" ry="2" />
<text  x="958.27" y="143.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.18%)</title><rect x="48.1" y="1029" width="2.1" height="15.0" fill="rgb(215,127,8)" rx="2" ry="2" />
<text  x="51.06" y="1039.5" ></text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.36%)</title><rect x="917.2" y="453" width="4.2" height="15.0" fill="rgb(252,74,47)" rx="2" ry="2" />
<text  x="920.20" y="463.5" ></text>
</g>
<g >
<title>process_backlog (3 samples, 0.54%)</title><rect x="314.5" y="309" width="6.4" height="15.0" fill="rgb(216,101,36)" rx="2" ry="2" />
<text  x="317.52" y="319.5" ></text>
</g>
<g >
<title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTupleVariant&gt;::end (1 samples, 0.18%)</title><rect x="1099.1" y="1029" width="2.1" height="15.0" fill="rgb(241,82,32)" rx="2" ry="2" />
<text  x="1102.07" y="1039.5" ></text>
</g>
<g >
<title>mod_timer (4 samples, 0.72%)</title><rect x="600.0" y="325" width="8.5" height="15.0" fill="rgb(246,78,45)" rx="2" ry="2" />
<text  x="603.00" y="335.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.18%)</title><rect x="978.5" y="597" width="2.1" height="15.0" fill="rgb(216,69,19)" rx="2" ry="2" />
<text  x="981.53" y="607.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_from_custom_seed (126 samples, 22.58%)</title><rect x="741.7" y="1029" width="266.4" height="15.0" fill="rgb(237,140,9)" rx="2" ry="2" />
<text  x="744.68" y="1039.5" >bincode::internal::deserialize_from..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.18%)</title><rect x="1168.9" y="1093" width="2.1" height="15.0" fill="rgb(210,5,25)" rx="2" ry="2" />
<text  x="1171.85" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_exit (1 samples, 0.18%)</title><rect x="1183.7" y="1237" width="2.1" height="15.0" fill="rgb(246,149,40)" rx="2" ry="2" />
<text  x="1186.66" y="1247.5" ></text>
</g>
<g >
<title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::SeedableRng&gt;::from_seed (1 samples, 0.18%)</title><rect x="1177.3" y="949" width="2.1" height="15.0" fill="rgb(252,228,13)" rx="2" ry="2" />
<text  x="1180.31" y="959.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.18%)</title><rect x="536.6" y="965" width="2.1" height="15.0" fill="rgb(218,205,43)" rx="2" ry="2" />
<text  x="539.56" y="975.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (6 samples, 1.08%)</title><rect x="1101.2" y="917" width="12.7" height="15.0" fill="rgb(224,217,2)" rx="2" ry="2" />
<text  x="1104.18" y="927.5" ></text>
</g>
<g >
<title>tcp_newly_delivered (1 samples, 0.18%)</title><rect x="957.4" y="165" width="2.1" height="15.0" fill="rgb(219,54,33)" rx="2" ry="2" />
<text  x="960.38" y="175.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (11 samples, 1.97%)</title><rect x="693.0" y="1013" width="23.3" height="15.0" fill="rgb(238,5,17)" rx="2" ry="2" />
<text  x="696.05" y="1023.5" >s..</text>
</g>
<g >
<title>byteorder::io::ReadBytesExt::read_u32 (40 samples, 7.17%)</title><rect x="764.9" y="885" width="84.6" height="15.0" fill="rgb(223,62,51)" rx="2" ry="2" />
<text  x="767.95" y="895.5" >byteorder..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (31 samples, 5.56%)</title><rect x="593.7" y="517" width="65.5" height="15.0" fill="rgb(228,32,6)" rx="2" ry="2" />
<text  x="596.66" y="527.5" >__netif..</text>
</g>
<g >
<title>&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (2 samples, 0.36%)</title><rect x="339.9" y="741" width="4.2" height="15.0" fill="rgb(215,171,20)" rx="2" ry="2" />
<text  x="342.89" y="751.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.18%)</title><rect x="67.1" y="949" width="2.1" height="15.0" fill="rgb(210,58,4)" rx="2" ry="2" />
<text  x="70.10" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 1.61%)</title><rect x="695.2" y="885" width="19.0" height="15.0" fill="rgb(207,78,11)" rx="2" ry="2" />
<text  x="698.16" y="895.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (28 samples, 5.02%)</title><rect x="595.8" y="453" width="59.2" height="15.0" fill="rgb(240,43,35)" rx="2" ry="2" />
<text  x="598.77" y="463.5" >ip_loc..</text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.72%)</title><rect x="96.7" y="997" width="8.5" height="15.0" fill="rgb(214,221,42)" rx="2" ry="2" />
<text  x="99.70" y="1007.5" ></text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 0.54%)</title><rect x="314.5" y="149" width="6.4" height="15.0" fill="rgb(216,101,13)" rx="2" ry="2" />
<text  x="317.52" y="159.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.18%)</title><rect x="229.9" y="581" width="2.1" height="15.0" fill="rgb(213,170,34)" rx="2" ry="2" />
<text  x="232.93" y="591.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (1 samples, 0.18%)</title><rect x="915.1" y="469" width="2.1" height="15.0" fill="rgb(212,155,25)" rx="2" ry="2" />
<text  x="918.09" y="479.5" ></text>
</g>
<g >
<title>ip_output (20 samples, 3.58%)</title><rect x="1039.9" y="677" width="42.3" height="15.0" fill="rgb(245,181,2)" rx="2" ry="2" />
<text  x="1042.86" y="687.5" >ip_..</text>
</g>
<g >
<title>security_socket_recvmsg (4 samples, 0.72%)</title><rect x="487.9" y="629" width="8.5" height="15.0" fill="rgb(252,91,52)" rx="2" ry="2" />
<text  x="490.92" y="639.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.36%)</title><rect x="775.5" y="757" width="4.2" height="15.0" fill="rgb(237,78,11)" rx="2" ry="2" />
<text  x="778.52" y="767.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.18%)</title><rect x="1187.9" y="1189" width="2.1" height="15.0" fill="rgb(228,225,34)" rx="2" ry="2" />
<text  x="1190.89" y="1199.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.18%)</title><rect x="62.9" y="981" width="2.1" height="15.0" fill="rgb(252,153,26)" rx="2" ry="2" />
<text  x="65.87" y="991.5" ></text>
</g>
<g >
<title>bincode::de::read::IoReader&lt;R&gt;::new (5 samples, 0.90%)</title><rect x="128.4" y="1029" width="10.6" height="15.0" fill="rgb(252,200,6)" rx="2" ry="2" />
<text  x="131.42" y="1039.5" ></text>
</g>
<g >
<title>ip_finish_output (20 samples, 3.58%)</title><rect x="1039.9" y="661" width="42.3" height="15.0" fill="rgb(243,137,2)" rx="2" ry="2" />
<text  x="1042.86" y="671.5" >ip_..</text>
</g>
<g >
<title>ip_rcv_finish (30 samples, 5.38%)</title><rect x="595.8" y="485" width="63.4" height="15.0" fill="rgb(229,47,51)" rx="2" ry="2" />
<text  x="598.77" y="495.5" >ip_rcv..</text>
</g>
<g >
<title>____fput (1 samples, 0.18%)</title><rect x="109.4" y="965" width="2.1" height="15.0" fill="rgb(242,168,34)" rx="2" ry="2" />
<text  x="112.39" y="975.5" ></text>
</g>
<g >
<title>tcp_push (29 samples, 5.20%)</title><rect x="1031.4" y="789" width="61.3" height="15.0" fill="rgb(239,55,34)" rx="2" ry="2" />
<text  x="1034.40" y="799.5" >tcp_push</text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (107 samples, 19.18%)</title><rect x="293.4" y="949" width="226.2" height="15.0" fill="rgb(205,27,11)" rx="2" ry="2" />
<text  x="296.37" y="959.5" >serde::de::VariantAccess::new..</text>
</g>
<g >
<title>ip_finish_output (22 samples, 3.94%)</title><rect x="932.0" y="469" width="46.5" height="15.0" fill="rgb(247,131,36)" rx="2" ry="2" />
<text  x="935.01" y="479.5" >ip_f..</text>
</g>
<g >
<title>schedule_timeout (11 samples, 1.97%)</title><rect x="392.8" y="565" width="23.2" height="15.0" fill="rgb(220,168,10)" rx="2" ry="2" />
<text  x="395.76" y="575.5" >s..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.18%)</title><rect x="45.9" y="1141" width="2.2" height="15.0" fill="rgb(229,92,26)" rx="2" ry="2" />
<text  x="48.95" y="1151.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.18%)</title><rect x="961.6" y="245" width="2.1" height="15.0" fill="rgb(205,117,36)" rx="2" ry="2" />
<text  x="964.61" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::into_vec (4 samples, 0.72%)</title><rect x="130.5" y="1013" width="8.5" height="15.0" fill="rgb(215,202,23)" rx="2" ry="2" />
<text  x="133.54" y="1023.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.18%)</title><rect x="464.7" y="213" width="2.1" height="15.0" fill="rgb(212,223,43)" rx="2" ry="2" />
<text  x="467.66" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.18%)</title><rect x="1177.3" y="997" width="2.1" height="15.0" fill="rgb(244,126,0)" rx="2" ry="2" />
<text  x="1180.31" y="1007.5" ></text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.54%)</title><rect x="22.7" y="1221" width="6.3" height="15.0" fill="rgb(252,92,16)" rx="2" ry="2" />
<text  x="25.69" y="1231.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2 samples, 0.36%)</title><rect x="77.7" y="965" width="4.2" height="15.0" fill="rgb(214,15,52)" rx="2" ry="2" />
<text  x="80.67" y="975.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (6 samples, 1.08%)</title><rect x="312.4" y="741" width="12.7" height="15.0" fill="rgb(230,80,22)" rx="2" ry="2" />
<text  x="315.40" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="680.4" y="965" width="2.1" height="15.0" fill="rgb(221,123,8)" rx="2" ry="2" />
<text  x="683.36" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="853.8" y="869" width="2.1" height="15.0" fill="rgb(251,215,0)" rx="2" ry="2" />
<text  x="856.76" y="879.5" ></text>
</g>
<g >
<title>ipv4_helper (1 samples, 0.18%)</title><rect x="655.0" y="453" width="2.1" height="15.0" fill="rgb(243,128,33)" rx="2" ry="2" />
<text  x="657.98" y="463.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.18%)</title><rect x="1187.9" y="1237" width="2.1" height="15.0" fill="rgb(241,229,33)" rx="2" ry="2" />
<text  x="1190.89" y="1247.5" ></text>
</g>
<g >
<title>ip_finish_output (17 samples, 3.05%)</title><rect x="452.0" y="469" width="35.9" height="15.0" fill="rgb(229,36,47)" rx="2" ry="2" />
<text  x="454.97" y="479.5" >ip_..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::into_unique (1 samples, 0.18%)</title><rect x="739.6" y="949" width="2.1" height="15.0" fill="rgb(208,145,0)" rx="2" ry="2" />
<text  x="742.57" y="959.5" ></text>
</g>
<g >
<title>tcp_sendmsg (3 samples, 0.54%)</title><rect x="1120.2" y="805" width="6.4" height="15.0" fill="rgb(243,184,42)" rx="2" ry="2" />
<text  x="1123.22" y="815.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h13bad78544670d24 (1 samples, 0.18%)</title><rect x="1185.8" y="1109" width="2.1" height="15.0" fill="rgb(227,96,7)" rx="2" ry="2" />
<text  x="1188.77" y="1119.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::read_string (20 samples, 3.58%)</title><rect x="301.8" y="821" width="42.3" height="15.0" fill="rgb(218,111,2)" rx="2" ry="2" />
<text  x="304.83" y="831.5" >bin..</text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 0.18%)</title><rect x="667.7" y="741" width="2.1" height="15.0" fill="rgb(249,228,47)" rx="2" ry="2" />
<text  x="670.67" y="751.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (3 samples, 0.54%)</title><rect x="819.9" y="805" width="6.4" height="15.0" fill="rgb(234,50,35)" rx="2" ry="2" />
<text  x="822.93" y="815.5" ></text>
</g>
<g >
<title>sock_sendmsg (58 samples, 10.39%)</title><rect x="555.6" y="853" width="122.6" height="15.0" fill="rgb(235,2,35)" rx="2" ry="2" />
<text  x="558.59" y="863.5" >sock_sendmsg</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66 samples, 11.83%)</title><rect x="363.2" y="709" width="139.5" height="15.0" fill="rgb(223,223,25)" rx="2" ry="2" />
<text  x="366.15" y="719.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.18%)</title><rect x="299.7" y="853" width="2.1" height="15.0" fill="rgb(244,33,6)" rx="2" ry="2" />
<text  x="302.71" y="863.5" ></text>
</g>
<g >
<title>sk_reset_timer (4 samples, 0.72%)</title><rect x="600.0" y="341" width="8.5" height="15.0" fill="rgb(226,174,47)" rx="2" ry="2" />
<text  x="603.00" y="351.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.20 (1 samples, 0.18%)</title><rect x="970.1" y="309" width="2.1" height="15.0" fill="rgb(219,200,53)" rx="2" ry="2" />
<text  x="973.07" y="319.5" ></text>
</g>
<g >
<title>__recv (3 samples, 0.54%)</title><rect x="331.4" y="645" width="6.4" height="15.0" fill="rgb(233,143,24)" rx="2" ry="2" />
<text  x="334.43" y="655.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (15 samples, 2.69%)</title><rect x="1048.3" y="341" width="31.7" height="15.0" fill="rgb(213,197,48)" rx="2" ry="2" />
<text  x="1051.32" y="351.5" >__..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.18%)</title><rect x="45.9" y="1157" width="2.2" height="15.0" fill="rgb(222,19,17)" rx="2" ry="2" />
<text  x="48.95" y="1167.5" ></text>
</g>
<g >
<title>c2_chacha::guts::refill_wide_impl (12 samples, 2.15%)</title><rect x="18.5" y="1253" width="25.3" height="15.0" fill="rgb(210,54,47)" rx="2" ry="2" />
<text  x="21.46" y="1263.5" >c..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="1183.7" y="1253" width="2.1" height="15.0" fill="rgb(227,140,14)" rx="2" ry="2" />
<text  x="1186.66" y="1263.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (72 samples, 12.90%)</title><rect x="853.8" y="949" width="152.2" height="15.0" fill="rgb(244,71,8)" rx="2" ry="2" />
<text  x="856.76" y="959.5" >serde::de::VariantA..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (4 samples, 0.72%)</title><rect x="331.4" y="693" width="8.5" height="15.0" fill="rgb(253,139,19)" rx="2" ry="2" />
<text  x="334.43" y="703.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (3 samples, 0.54%)</title><rect x="314.5" y="197" width="6.4" height="15.0" fill="rgb(215,186,43)" rx="2" ry="2" />
<text  x="317.52" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (15 samples, 2.69%)</title><rect x="940.5" y="325" width="31.7" height="15.0" fill="rgb(227,158,0)" rx="2" ry="2" />
<text  x="943.47" y="335.5" >__..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (58 samples, 10.39%)</title><rect x="866.5" y="789" width="122.6" height="15.0" fill="rgb(216,69,48)" rx="2" ry="2" />
<text  x="869.45" y="799.5" >&lt;&amp;std::net::tcp..</text>
</g>
<g >
<title>ktime_get (1 samples, 0.18%)</title><rect x="1086.4" y="741" width="2.1" height="15.0" fill="rgb(223,176,52)" rx="2" ry="2" />
<text  x="1089.38" y="751.5" ></text>
</g>
<g >
<title>core::ops::range::RangeInclusive&lt;Idx&gt;::new (3 samples, 0.54%)</title><rect x="90.4" y="997" width="6.3" height="15.0" fill="rgb(225,93,38)" rx="2" ry="2" />
<text  x="93.36" y="1007.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.18%)</title><rect x="299.7" y="837" width="2.1" height="15.0" fill="rgb(244,35,41)" rx="2" ry="2" />
<text  x="302.71" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (1 samples, 0.18%)</title><rect x="48.1" y="1157" width="2.1" height="15.0" fill="rgb(220,32,41)" rx="2" ry="2" />
<text  x="51.06" y="1167.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (3 samples, 0.54%)</title><rect x="77.7" y="981" width="6.3" height="15.0" fill="rgb(218,141,27)" rx="2" ry="2" />
<text  x="80.67" y="991.5" ></text>
</g>
<g >
<title>_$LT$rand_core..block..BlockRng$LT$R$GT$$u20$as$u20$rand_core..RngCore$GT$::next_u64::_$u7b$$u7b$closure$u7d$$u7d$::he2810b5ad5f251b1 (7 samples, 1.25%)</title><rect x="90.4" y="1013" width="14.8" height="15.0" fill="rgb(245,173,7)" rx="2" ry="2" />
<text  x="93.36" y="1023.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.54%)</title><rect x="314.5" y="389" width="6.4" height="15.0" fill="rgb(226,165,43)" rx="2" ry="2" />
<text  x="317.52" y="399.5" ></text>
</g>
<g >
<title>sock_recvmsg (50 samples, 8.96%)</title><rect x="879.1" y="645" width="105.8" height="15.0" fill="rgb(218,20,50)" rx="2" ry="2" />
<text  x="882.14" y="655.5" >sock_recvmsg</text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (16 samples, 2.87%)</title><rect x="767.1" y="805" width="33.8" height="15.0" fill="rgb(208,81,21)" rx="2" ry="2" />
<text  x="770.06" y="815.5" >st..</text>
</g>
<g >
<title>std::io::Write::write_all (41 samples, 7.35%)</title><rect x="1012.4" y="981" width="86.7" height="15.0" fill="rgb(214,12,4)" rx="2" ry="2" />
<text  x="1015.37" y="991.5" >std::io::W..</text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u32 (43 samples, 7.71%)</title><rect x="762.8" y="901" width="91.0" height="15.0" fill="rgb(205,224,42)" rx="2" ry="2" />
<text  x="765.83" y="911.5" >&lt;&amp;mut binc..</text>
</g>
<g >
<title>__ip_queue_xmit (5 samples, 0.90%)</title><rect x="314.5" y="469" width="10.6" height="15.0" fill="rgb(215,193,15)" rx="2" ry="2" />
<text  x="317.52" y="479.5" ></text>
</g>
<g >
<title>mm_release (1 samples, 0.18%)</title><rect x="1183.7" y="1205" width="2.1" height="15.0" fill="rgb(214,118,37)" rx="2" ry="2" />
<text  x="1186.66" y="1215.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (1 samples, 0.18%)</title><rect x="263.8" y="773" width="2.1" height="15.0" fill="rgb(225,136,8)" rx="2" ry="2" />
<text  x="266.76" y="783.5" ></text>
</g>
<g >
<title>_copy_to_iter (3 samples, 0.54%)</title><rect x="418.1" y="549" width="6.4" height="15.0" fill="rgb(220,173,24)" rx="2" ry="2" />
<text  x="421.14" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.18%)</title><rect x="48.1" y="1141" width="2.1" height="15.0" fill="rgb(223,20,28)" rx="2" ry="2" />
<text  x="51.06" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.18%)</title><rect x="14.2" y="1253" width="2.1" height="15.0" fill="rgb(217,185,10)" rx="2" ry="2" />
<text  x="17.23" y="1263.5" ></text>
</g>
<g >
<title>sock_recvmsg (60 samples, 10.75%)</title><rect x="369.5" y="645" width="126.9" height="15.0" fill="rgb(251,55,53)" rx="2" ry="2" />
<text  x="372.50" y="655.5" >sock_recvmsg</text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.36%)</title><rect x="1092.7" y="805" width="4.3" height="15.0" fill="rgb(249,58,46)" rx="2" ry="2" />
<text  x="1095.72" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 4.84%)</title><rect x="185.5" y="789" width="57.1" height="15.0" fill="rgb(230,5,17)" rx="2" ry="2" />
<text  x="188.52" y="799.5" >std::s..</text>
</g>
<g >
<title>do_softirq.part.20 (9 samples, 1.61%)</title><rect x="460.4" y="421" width="19.1" height="15.0" fill="rgb(217,124,0)" rx="2" ry="2" />
<text  x="463.43" y="431.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.18%)</title><rect x="229.9" y="597" width="2.1" height="15.0" fill="rgb(218,0,36)" rx="2" ry="2" />
<text  x="232.93" y="607.5" ></text>
</g>
<g >
<title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.36%)</title><rect x="24.8" y="1189" width="4.2" height="15.0" fill="rgb(212,156,8)" rx="2" ry="2" />
<text  x="27.80" y="1199.5" ></text>
</g>
<g >
<title>byteorder::io::WriteBytesExt::write_u64 (6 samples, 1.08%)</title><rect x="1101.2" y="965" width="12.7" height="15.0" fill="rgb(230,131,0)" rx="2" ry="2" />
<text  x="1104.18" y="975.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::raw (1 samples, 0.18%)</title><rect x="337.8" y="645" width="2.1" height="15.0" fill="rgb(240,226,21)" rx="2" ry="2" />
<text  x="340.78" y="655.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 1.61%)</title><rect x="397.0" y="517" width="19.0" height="15.0" fill="rgb(251,136,47)" rx="2" ry="2" />
<text  x="399.99" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::amortized_new_size (1 samples, 0.18%)</title><rect x="43.8" y="1061" width="2.1" height="15.0" fill="rgb(237,53,29)" rx="2" ry="2" />
<text  x="46.84" y="1071.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.36%)</title><rect x="382.2" y="565" width="4.2" height="15.0" fill="rgb(247,4,54)" rx="2" ry="2" />
<text  x="385.19" y="575.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (1 samples, 0.18%)</title><rect x="14.2" y="1269" width="2.1" height="15.0" fill="rgb(233,14,7)" rx="2" ry="2" />
<text  x="17.23" y="1279.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.18%)</title><rect x="587.3" y="613" width="2.1" height="15.0" fill="rgb(228,137,34)" rx="2" ry="2" />
<text  x="590.31" y="623.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.36%)</title><rect x="1044.1" y="325" width="4.2" height="15.0" fill="rgb(218,112,53)" rx="2" ry="2" />
<text  x="1047.09" y="335.5" ></text>
</g>
<g >
<title>__ip_local_out (9 samples, 1.61%)</title><rect x="913.0" y="485" width="19.0" height="15.0" fill="rgb(227,4,46)" rx="2" ry="2" />
<text  x="915.97" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver (7 samples, 1.25%)</title><rect x="464.7" y="277" width="14.8" height="15.0" fill="rgb(241,107,14)" rx="2" ry="2" />
<text  x="467.66" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.18%)</title><rect x="12.1" y="1253" width="2.1" height="15.0" fill="rgb(210,189,38)" rx="2" ry="2" />
<text  x="15.11" y="1263.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.90%)</title><rect x="196.1" y="757" width="10.6" height="15.0" fill="rgb(235,201,47)" rx="2" ry="2" />
<text  x="199.09" y="767.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::hb26e39676675046f (534 samples, 95.70%)</title><rect x="52.3" y="1157" width="1129.2" height="15.0" fill="rgb(245,133,8)" rx="2" ry="2" />
<text  x="55.29" y="1167.5" >std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::hb26e39676675046f</text>
</g>
<g >
<title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (2 samples, 0.36%)</title><rect x="33.3" y="1221" width="4.2" height="15.0" fill="rgb(242,207,0)" rx="2" ry="2" />
<text  x="36.26" y="1231.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.18%)</title><rect x="325.1" y="725" width="2.1" height="15.0" fill="rgb(246,81,38)" rx="2" ry="2" />
<text  x="328.09" y="735.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (5 samples, 0.90%)</title><rect x="314.5" y="501" width="10.6" height="15.0" fill="rgb(214,153,34)" rx="2" ry="2" />
<text  x="317.52" y="511.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.18%)</title><rect x="79.8" y="949" width="2.1" height="15.0" fill="rgb(233,44,33)" rx="2" ry="2" />
<text  x="82.78" y="959.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.18%)</title><rect x="41.7" y="1173" width="2.1" height="15.0" fill="rgb(235,198,0)" rx="2" ry="2" />
<text  x="44.72" y="1183.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 1.25%)</title><rect x="989.1" y="789" width="14.8" height="15.0" fill="rgb(225,56,11)" rx="2" ry="2" />
<text  x="992.10" y="799.5" ></text>
</g>
<g >
<title>_start (535 samples, 95.88%)</title><rect x="52.3" y="1301" width="1131.4" height="15.0" fill="rgb(251,213,53)" rx="2" ry="2" />
<text  x="55.29" y="1311.5" >_start</text>
</g>
<g >
<title>kfree (1 samples, 0.18%)</title><rect x="477.3" y="85" width="2.2" height="15.0" fill="rgb(230,144,2)" rx="2" ry="2" />
<text  x="480.35" y="95.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.18%)</title><rect x="898.2" y="549" width="2.1" height="15.0" fill="rgb(253,229,31)" rx="2" ry="2" />
<text  x="901.17" y="559.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (14 samples, 2.51%)</title><rect x="58.6" y="1045" width="29.6" height="15.0" fill="rgb(252,146,16)" rx="2" ry="2" />
<text  x="61.64" y="1055.5" >al..</text>
</g>
<g >
<title>inet_recvmsg (7 samples, 1.25%)</title><rect x="781.9" y="677" width="14.8" height="15.0" fill="rgb(238,20,20)" rx="2" ry="2" />
<text  x="784.86" y="687.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.36%)</title><rect x="333.5" y="565" width="4.3" height="15.0" fill="rgb(206,137,4)" rx="2" ry="2" />
<text  x="336.55" y="575.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.18%)</title><rect x="509.1" y="757" width="2.1" height="15.0" fill="rgb(247,97,0)" rx="2" ry="2" />
<text  x="512.07" y="767.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.18%)</title><rect x="690.9" y="997" width="2.1" height="15.0" fill="rgb(210,77,43)" rx="2" ry="2" />
<text  x="693.93" y="1007.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.18%)</title><rect x="963.7" y="261" width="2.1" height="15.0" fill="rgb(241,210,12)" rx="2" ry="2" />
<text  x="966.73" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.36%)</title><rect x="720.5" y="1077" width="4.3" height="15.0" fill="rgb(222,94,50)" rx="2" ry="2" />
<text  x="723.54" y="1087.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.18%)</title><rect x="953.2" y="117" width="2.1" height="15.0" fill="rgb(228,45,13)" rx="2" ry="2" />
<text  x="956.15" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 1.08%)</title><rect x="60.8" y="1029" width="12.6" height="15.0" fill="rgb(207,131,8)" rx="2" ry="2" />
<text  x="63.75" y="1039.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.54%)</title><rect x="314.5" y="293" width="6.4" height="15.0" fill="rgb(215,62,49)" rx="2" ry="2" />
<text  x="317.52" y="303.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_SERIALIZE_FOR_Command::&lt;impl serde::ser::Serialize for cse403_distributed_hash_table::transport::Command&gt;::serialize (55 samples, 9.86%)</title><rect x="1012.4" y="1045" width="116.3" height="15.0" fill="rgb(210,151,47)" rx="2" ry="2" />
<text  x="1015.37" y="1055.5" >cse403_distrib..</text>
</g>
<g >
<title>sock_recvmsg (16 samples, 2.87%)</title><rect x="208.8" y="693" width="33.8" height="15.0" fill="rgb(210,198,15)" rx="2" ry="2" />
<text  x="211.78" y="703.5" >so..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.18%)</title><rect x="1044.1" y="309" width="2.1" height="15.0" fill="rgb(210,203,27)" rx="2" ry="2" />
<text  x="1047.09" y="319.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.36%)</title><rect x="587.3" y="661" width="4.2" height="15.0" fill="rgb(221,221,3)" rx="2" ry="2" />
<text  x="590.31" y="671.5" ></text>
</g>
<g >
<title>ip_finish_output2 (34 samples, 6.09%)</title><rect x="591.5" y="645" width="71.9" height="15.0" fill="rgb(220,81,33)" rx="2" ry="2" />
<text  x="594.54" y="655.5" >ip_finis..</text>
</g>
<g >
<title>__tcp_push_pending_frames (29 samples, 5.20%)</title><rect x="1031.4" y="773" width="61.3" height="15.0" fill="rgb(254,221,40)" rx="2" ry="2" />
<text  x="1034.40" y="783.5" >__tcp_..</text>
</g>
<g >
<title>tcp_recvmsg (52 samples, 9.32%)</title><rect x="378.0" y="613" width="109.9" height="15.0" fill="rgb(218,102,25)" rx="2" ry="2" />
<text  x="380.96" y="623.5" >tcp_recvmsg</text>
</g>
<g >
<title>dev_queue_xmit (3 samples, 0.54%)</title><rect x="972.2" y="437" width="6.3" height="15.0" fill="rgb(209,106,48)" rx="2" ry="2" />
<text  x="975.19" y="447.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.18%)</title><rect x="373.7" y="613" width="2.1" height="15.0" fill="rgb(251,7,3)" rx="2" ry="2" />
<text  x="376.73" y="623.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.18%)</title><rect x="1126.6" y="933" width="2.1" height="15.0" fill="rgb(233,191,52)" rx="2" ry="2" />
<text  x="1129.56" y="943.5" ></text>
</g>
<g >
<title>yaml_rust::scanner::Scanner&lt;T&gt;::fetch_more_tokens (1 samples, 0.18%)</title><rect x="50.2" y="1141" width="2.1" height="15.0" fill="rgb(227,10,4)" rx="2" ry="2" />
<text  x="53.18" y="1151.5" ></text>
</g>
<g >
<title>__nf_ct_refresh_acct (1 samples, 0.18%)</title><rect x="1037.7" y="613" width="2.2" height="15.0" fill="rgb(223,170,30)" rx="2" ry="2" />
<text  x="1040.74" y="623.5" ></text>
</g>
<g >
<title>tcp_sendmsg (34 samples, 6.09%)</title><rect x="1020.8" y="821" width="71.9" height="15.0" fill="rgb(254,56,51)" rx="2" ry="2" />
<text  x="1023.82" y="831.5" >tcp_send..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.18%)</title><rect x="502.7" y="789" width="2.1" height="15.0" fill="rgb(253,87,26)" rx="2" ry="2" />
<text  x="505.72" y="799.5" ></text>
</g>
<g >
<title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.36%)</title><rect x="39.6" y="1221" width="4.2" height="15.0" fill="rgb(210,109,0)" rx="2" ry="2" />
<text  x="42.61" y="1231.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.36%)</title><rect x="1113.9" y="965" width="4.2" height="15.0" fill="rgb(248,76,45)" rx="2" ry="2" />
<text  x="1116.87" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (64 samples, 11.47%)</title><rect x="367.4" y="677" width="135.3" height="15.0" fill="rgb(207,64,3)" rx="2" ry="2" />
<text  x="370.38" y="687.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>skb_free_head (1 samples, 0.18%)</title><rect x="955.3" y="101" width="2.1" height="15.0" fill="rgb(214,204,0)" rx="2" ry="2" />
<text  x="958.27" y="111.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::into_vec (6 samples, 1.08%)</title><rect x="729.0" y="1013" width="12.7" height="15.0" fill="rgb(218,57,25)" rx="2" ry="2" />
<text  x="732.00" y="1023.5" ></text>
</g>
<g >
<title>inet_recvmsg (48 samples, 8.60%)</title><rect x="879.1" y="629" width="101.5" height="15.0" fill="rgb(251,18,26)" rx="2" ry="2" />
<text  x="882.14" y="639.5" >inet_recvmsg</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.18%)</title><rect x="48.1" y="1045" width="2.1" height="15.0" fill="rgb(224,36,14)" rx="2" ry="2" />
<text  x="51.06" y="1055.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (34 samples, 6.09%)</title><rect x="906.6" y="597" width="71.9" height="15.0" fill="rgb(231,61,19)" rx="2" ry="2" />
<text  x="909.63" y="607.5" >tcp_clea..</text>
</g>
<g >
<title>__sys_sendto (7 samples, 1.25%)</title><rect x="699.4" y="853" width="14.8" height="15.0" fill="rgb(240,100,49)" rx="2" ry="2" />
<text  x="702.39" y="863.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (105 samples, 18.82%)</title><rect x="297.6" y="901" width="222.0" height="15.0" fill="rgb(217,173,12)" rx="2" ry="2" />
<text  x="300.60" y="911.5" >serde::de::impls::&lt;impl serde..</text>
</g>
<g >
<title>copyin (1 samples, 0.18%)</title><rect x="568.3" y="773" width="2.1" height="15.0" fill="rgb(242,223,21)" rx="2" ry="2" />
<text  x="571.28" y="783.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (16 samples, 2.87%)</title><rect x="767.1" y="821" width="33.8" height="15.0" fill="rgb(247,4,33)" rx="2" ry="2" />
<text  x="770.06" y="831.5" >st..</text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.18%)</title><rect x="14.2" y="1045" width="2.1" height="15.0" fill="rgb(252,199,24)" rx="2" ry="2" />
<text  x="17.23" y="1055.5" ></text>
</g>
<g >
<title>bincode::de::Deserializer&lt;R,O&gt;::read_type (1 samples, 0.18%)</title><rect x="172.8" y="885" width="2.1" height="15.0" fill="rgb(223,66,47)" rx="2" ry="2" />
<text  x="175.83" y="895.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (5 samples, 0.90%)</title><rect x="1118.1" y="965" width="10.6" height="15.0" fill="rgb(215,100,9)" rx="2" ry="2" />
<text  x="1121.10" y="975.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_CommandResponse::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::deserialize (178 samples, 31.90%)</title><rect x="143.2" y="997" width="376.4" height="15.0" fill="rgb(245,30,26)" rx="2" ry="2" />
<text  x="146.23" y="1007.5" >cse403_distributed_hash_table::transport::_IMPL_DES..</text>
</g>
<g >
<title>&lt;bincode::de::read::IoReader&lt;R&gt; as std::io::Read&gt;::read_exact (41 samples, 7.35%)</title><rect x="183.4" y="869" width="86.7" height="15.0" fill="rgb(223,95,30)" rx="2" ry="2" />
<text  x="186.41" y="879.5" >&lt;bincode::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.36%)</title><rect x="60.8" y="997" width="4.2" height="15.0" fill="rgb(253,61,15)" rx="2" ry="2" />
<text  x="63.75" y="1007.5" ></text>
</g>
<g >
<title>config::file::format::yaml::from_yaml_value (1 samples, 0.18%)</title><rect x="45.9" y="1173" width="2.2" height="15.0" fill="rgb(240,166,35)" rx="2" ry="2" />
<text  x="48.95" y="1183.5" ></text>
</g>
<g >
<title>_$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$config..source..Source$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$$u20$as$u20$config..source..Source$GT$::collect::h5d7bbd561dba1a02 (2 samples, 0.36%)</title><rect x="43.8" y="1253" width="4.3" height="15.0" fill="rgb(254,87,34)" rx="2" ry="2" />
<text  x="46.84" y="1263.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.18%)</title><rect x="1183.7" y="1221" width="2.1" height="15.0" fill="rgb(233,102,23)" rx="2" ry="2" />
<text  x="1186.66" y="1231.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.18%)</title><rect x="217.2" y="613" width="2.2" height="15.0" fill="rgb(229,55,51)" rx="2" ry="2" />
<text  x="220.24" y="623.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.18%)</title><rect x="424.5" y="549" width="2.1" height="15.0" fill="rgb(227,129,42)" rx="2" ry="2" />
<text  x="427.48" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (19 samples, 3.41%)</title><rect x="1042.0" y="597" width="40.2" height="15.0" fill="rgb(237,179,35)" rx="2" ry="2" />
<text  x="1044.97" y="607.5" >do_..</text>
</g>
<g >
<title>ip_local_out (31 samples, 5.56%)</title><rect x="913.0" y="501" width="65.5" height="15.0" fill="rgb(220,59,47)" rx="2" ry="2" />
<text  x="915.97" y="511.5" >ip_loca..</text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.18%)</title><rect x="1187.9" y="1269" width="2.1" height="15.0" fill="rgb(208,120,18)" rx="2" ry="2" />
<text  x="1190.89" y="1279.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.18%)</title><rect x="593.7" y="501" width="2.1" height="15.0" fill="rgb(253,67,54)" rx="2" ry="2" />
<text  x="596.66" y="511.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.18%)</title><rect x="426.6" y="549" width="2.1" height="15.0" fill="rgb(240,152,27)" rx="2" ry="2" />
<text  x="429.59" y="559.5" ></text>
</g>
<g >
<title>bincode::internal::deserialize_from (133 samples, 23.84%)</title><rect x="726.9" y="1061" width="281.2" height="15.0" fill="rgb(238,74,43)" rx="2" ry="2" />
<text  x="729.88" y="1071.5" >bincode::internal::deserialize_from</text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.18%)</title><rect x="109.4" y="821" width="2.1" height="15.0" fill="rgb(231,186,32)" rx="2" ry="2" />
<text  x="112.39" y="831.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (1 samples, 0.18%)</title><rect x="447.7" y="421" width="2.2" height="15.0" fill="rgb(221,70,46)" rx="2" ry="2" />
<text  x="450.74" y="431.5" ></text>
</g>
<g >
<title>net_rx_action (9 samples, 1.61%)</title><rect x="460.4" y="373" width="19.1" height="15.0" fill="rgb(250,137,45)" rx="2" ry="2" />
<text  x="463.43" y="383.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (6 samples, 1.08%)</title><rect x="466.8" y="213" width="12.7" height="15.0" fill="rgb(239,101,21)" rx="2" ry="2" />
<text  x="469.77" y="223.5" ></text>
</g>
<g >
<title>&lt;serde::de::value::U32Deserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.18%)</title><rect x="758.6" y="885" width="2.1" height="15.0" fill="rgb(252,9,17)" rx="2" ry="2" />
<text  x="761.60" y="895.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (15 samples, 2.69%)</title><rect x="1048.3" y="357" width="31.7" height="15.0" fill="rgb(223,210,12)" rx="2" ry="2" />
<text  x="1051.32" y="367.5" >__..</text>
</g>
<g >
<title>ip_rcv_finish (12 samples, 2.15%)</title><rect x="942.6" y="293" width="25.4" height="15.0" fill="rgb(218,149,9)" rx="2" ry="2" />
<text  x="945.58" y="303.5" >i..</text>
</g>
<g >
<title>__netif_receive_skb (19 samples, 3.41%)</title><rect x="1042.0" y="533" width="40.2" height="15.0" fill="rgb(253,159,8)" rx="2" ry="2" />
<text  x="1044.97" y="543.5" >__n..</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.36%)</title><rect x="452.0" y="453" width="4.2" height="15.0" fill="rgb(243,54,41)" rx="2" ry="2" />
<text  x="454.97" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.18%)</title><rect x="327.2" y="789" width="2.1" height="15.0" fill="rgb(226,179,17)" rx="2" ry="2" />
<text  x="330.20" y="799.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.18%)</title><rect x="794.6" y="581" width="2.1" height="15.0" fill="rgb(222,5,21)" rx="2" ry="2" />
<text  x="797.55" y="591.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.18%)</title><rect x="1183.7" y="1157" width="2.1" height="15.0" fill="rgb(210,82,46)" rx="2" ry="2" />
<text  x="1186.66" y="1167.5" ></text>
</g>
<g >
<title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_u64 (7 samples, 1.25%)</title><rect x="329.3" y="773" width="14.8" height="15.0" fill="rgb(209,66,27)" rx="2" ry="2" />
<text  x="332.32" y="783.5" ></text>
</g>
<g >
<title>__sys_sendto (61 samples, 10.93%)</title><rect x="551.4" y="869" width="129.0" height="15.0" fill="rgb(248,70,4)" rx="2" ry="2" />
<text  x="554.36" y="879.5" >__sys_sendto</text>
</g>
<g >
<title>skb_release_data (1 samples, 0.18%)</title><rect x="477.3" y="117" width="2.2" height="15.0" fill="rgb(243,103,12)" rx="2" ry="2" />
<text  x="480.35" y="127.5" ></text>
</g>
<g >
<title>core::option::Option::Some (1 samples, 0.18%)</title><rect x="299.7" y="821" width="2.1" height="15.0" fill="rgb(250,45,24)" rx="2" ry="2" />
<text  x="302.71" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (26 samples, 4.66%)</title><rect x="600.0" y="405" width="55.0" height="15.0" fill="rgb(253,65,34)" rx="2" ry="2" />
<text  x="603.00" y="415.5" >tcp_v..</text>
</g>
<g >
<title>std::io::Write::write_all (6 samples, 1.08%)</title><rect x="1101.2" y="949" width="12.7" height="15.0" fill="rgb(230,67,53)" rx="2" ry="2" />
<text  x="1104.18" y="959.5" ></text>
</g>
<g >
<title>__send (63 samples, 11.29%)</title><rect x="547.1" y="933" width="133.3" height="15.0" fill="rgb(205,111,52)" rx="2" ry="2" />
<text  x="550.13" y="943.5" >__send</text>
</g>
<g >
<title>__tcp_ack_snd_check (4 samples, 0.72%)</title><rect x="600.0" y="373" width="8.5" height="15.0" fill="rgb(240,102,29)" rx="2" ry="2" />
<text  x="603.00" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (16 samples, 2.87%)</title><rect x="767.1" y="789" width="33.8" height="15.0" fill="rgb(253,7,33)" rx="2" ry="2" />
<text  x="770.06" y="799.5" >st..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.72%)</title><rect x="257.4" y="805" width="8.5" height="15.0" fill="rgb(245,159,32)" rx="2" ry="2" />
<text  x="260.42" y="815.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new (1 samples, 0.18%)</title><rect x="10.0" y="1285" width="2.1" height="15.0" fill="rgb(249,165,31)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 4.84%)</title><rect x="185.5" y="837" width="57.1" height="15.0" fill="rgb(220,174,36)" rx="2" ry="2" />
<text  x="188.52" y="847.5" >&lt;&amp;std:..</text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.36%)</title><rect x="1092.7" y="789" width="4.3" height="15.0" fill="rgb(253,57,37)" rx="2" ry="2" />
<text  x="1095.72" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (14 samples, 2.51%)</title><rect x="58.6" y="1077" width="29.6" height="15.0" fill="rgb(230,163,17)" rx="2" ry="2" />
<text  x="61.64" y="1087.5" >al..</text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.36%)</title><rect x="980.6" y="629" width="4.3" height="15.0" fill="rgb(233,222,32)" rx="2" ry="2" />
<text  x="983.65" y="639.5" ></text>
</g>
<g >
<title>&lt;&amp;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.18%)</title><rect x="50.2" y="1125" width="2.1" height="15.0" fill="rgb(254,23,24)" rx="2" ry="2" />
<text  x="53.18" y="1135.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (3 samples, 0.54%)</title><rect x="809.4" y="837" width="6.3" height="15.0" fill="rgb(224,100,6)" rx="2" ry="2" />
<text  x="812.35" y="847.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.54 (1 samples, 0.18%)</title><rect x="426.6" y="533" width="2.1" height="15.0" fill="rgb(220,227,19)" rx="2" ry="2" />
<text  x="429.59" y="543.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.18%)</title><rect x="946.8" y="213" width="2.1" height="15.0" fill="rgb(224,114,43)" rx="2" ry="2" />
<text  x="949.81" y="223.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.18%)</title><rect x="12.1" y="1189" width="2.1" height="15.0" fill="rgb(213,92,40)" rx="2" ry="2" />
<text  x="15.11" y="1199.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.18%)</title><rect x="16.3" y="1189" width="2.2" height="15.0" fill="rgb(234,191,31)" rx="2" ry="2" />
<text  x="19.34" y="1199.5" ></text>
</g>
<g >
<title>sock_def_readable (15 samples, 2.69%)</title><rect x="1048.3" y="373" width="31.7" height="15.0" fill="rgb(250,29,53)" rx="2" ry="2" />
<text  x="1051.32" y="383.5" >so..</text>
</g>
<g >
<title>std::sys::unix::time::inner::now (1 samples, 0.18%)</title><rect x="1185.8" y="965" width="2.1" height="15.0" fill="rgb(227,112,22)" rx="2" ry="2" />
<text  x="1188.77" y="975.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::barrier::_$u7b$$u7b$closure$u7d$$u7d$::h667470dae72110f0 (1 samples, 0.18%)</title><rect x="1185.8" y="1077" width="2.1" height="15.0" fill="rgb(231,201,4)" rx="2" ry="2" />
<text  x="1188.77" y="1087.5" ></text>
</g>
<g >
<title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.18%)</title><rect x="1181.5" y="1205" width="2.2" height="15.0" fill="rgb(253,116,27)" rx="2" ry="2" />
<text  x="1184.54" y="1215.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.18%)</title><rect x="227.8" y="565" width="2.1" height="15.0" fill="rgb(210,206,27)" rx="2" ry="2" />
<text  x="230.81" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.18%)</title><rect x="14.2" y="1237" width="2.1" height="15.0" fill="rgb(254,98,46)" rx="2" ry="2" />
<text  x="17.23" y="1247.5" ></text>
</g>
<g >
<title>ip_output (34 samples, 6.09%)</title><rect x="591.5" y="677" width="71.9" height="15.0" fill="rgb(211,166,52)" rx="2" ry="2" />
<text  x="594.54" y="687.5" >ip_output</text>
</g>
<g >
<title>wait_woken (11 samples, 1.97%)</title><rect x="392.8" y="581" width="23.2" height="15.0" fill="rgb(228,52,16)" rx="2" ry="2" />
<text  x="395.76" y="591.5" >w..</text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.18%)</title><rect x="1086.4" y="725" width="2.1" height="15.0" fill="rgb(215,23,6)" rx="2" ry="2" />
<text  x="1089.38" y="735.5" ></text>
</g>
<g >
<title>__send (6 samples, 1.08%)</title><rect x="1101.2" y="901" width="12.7" height="15.0" fill="rgb(220,49,21)" rx="2" ry="2" />
<text  x="1104.18" y="911.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.18%)</title><rect x="1177.3" y="1013" width="2.1" height="15.0" fill="rgb(205,21,12)" rx="2" ry="2" />
<text  x="1180.31" y="1023.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (9 samples, 1.61%)</title><rect x="460.4" y="437" width="19.1" height="15.0" fill="rgb(246,152,34)" rx="2" ry="2" />
<text  x="463.43" y="447.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.18%)</title><rect x="1124.4" y="725" width="2.2" height="15.0" fill="rgb(226,49,34)" rx="2" ry="2" />
<text  x="1127.44" y="735.5" ></text>
</g>
<g >
<title>serde::de::EnumAccess::variant (66 samples, 11.83%)</title><rect x="153.8" y="949" width="139.6" height="15.0" fill="rgb(216,0,48)" rx="2" ry="2" />
<text  x="156.80" y="959.5" >serde::de::EnumAc..</text>
</g>
<g >
<title>std::panicking::try::do_call (1 samples, 0.18%)</title><rect x="1185.8" y="1141" width="2.1" height="15.0" fill="rgb(218,204,22)" rx="2" ry="2" />
<text  x="1188.77" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.54%)</title><rect x="306.1" y="741" width="6.3" height="15.0" fill="rgb(253,134,31)" rx="2" ry="2" />
<text  x="309.06" y="751.5" ></text>
</g>
<g >
<title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (9 samples, 1.61%)</title><rect x="90.4" y="1029" width="19.0" height="15.0" fill="rgb(236,95,50)" rx="2" ry="2" />
<text  x="93.36" y="1039.5" ></text>
</g>
<g >
<title>schedule_timeout (4 samples, 0.72%)</title><rect x="221.5" y="613" width="8.4" height="15.0" fill="rgb(233,97,17)" rx="2" ry="2" />
<text  x="224.47" y="623.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.18%)</title><rect x="1105.4" y="885" width="2.1" height="15.0" fill="rgb(240,214,12)" rx="2" ry="2" />
<text  x="1108.41" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (10 samples, 1.79%)</title><rect x="779.7" y="725" width="21.2" height="15.0" fill="rgb(220,100,6)" rx="2" ry="2" />
<text  x="782.75" y="735.5" ></text>
</g>
<g >
<title>&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::write_u32 (2 samples, 0.36%)</title><rect x="534.4" y="981" width="4.3" height="15.0" fill="rgb(233,219,39)" rx="2" ry="2" />
<text  x="537.44" y="991.5" ></text>
</g>
<g >
<title>tcp_rcv_established (26 samples, 4.66%)</title><rect x="600.0" y="389" width="55.0" height="15.0" fill="rgb(222,7,45)" rx="2" ry="2" />
<text  x="603.00" y="399.5" >tcp_r..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.18%)</title><rect x="48.1" y="1077" width="2.1" height="15.0" fill="rgb(248,9,40)" rx="2" ry="2" />
<text  x="51.06" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.72%)</title><rect x="841.1" y="869" width="8.4" height="15.0" fill="rgb(238,52,45)" rx="2" ry="2" />
<text  x="844.08" y="879.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.18%)</title><rect x="572.5" y="789" width="2.1" height="15.0" fill="rgb(207,123,8)" rx="2" ry="2" />
<text  x="575.51" y="799.5" ></text>
</g>
<g >
<title>ip_local_out (5 samples, 0.90%)</title><rect x="314.5" y="453" width="10.6" height="15.0" fill="rgb(240,102,1)" rx="2" ry="2" />
<text  x="317.52" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_clone (1 samples, 0.18%)</title><rect x="10.0" y="1221" width="2.1" height="15.0" fill="rgb(249,166,50)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>std::sys::unix::time::inner::Instant::now (1 samples, 0.18%)</title><rect x="1185.8" y="981" width="2.1" height="15.0" fill="rgb(253,102,7)" rx="2" ry="2" />
<text  x="1188.77" y="991.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.18%)</title><rect x="661.3" y="613" width="2.1" height="15.0" fill="rgb(233,1,52)" rx="2" ry="2" />
<text  x="664.33" y="623.5" ></text>
</g>
<g >
<title>rand::Rng::gen (10 samples, 1.79%)</title><rect x="88.2" y="1093" width="21.2" height="15.0" fill="rgb(237,191,47)" rx="2" ry="2" />
<text  x="91.24" y="1103.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.18%)</title><rect x="557.7" y="805" width="2.1" height="15.0" fill="rgb(221,141,23)" rx="2" ry="2" />
<text  x="560.71" y="815.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.72%)</title><rect x="826.3" y="853" width="8.4" height="15.0" fill="rgb(230,198,27)" rx="2" ry="2" />
<text  x="829.27" y="863.5" ></text>
</g>
<g >
<title>ip_finish_output (34 samples, 6.09%)</title><rect x="591.5" y="661" width="71.9" height="15.0" fill="rgb(217,96,47)" rx="2" ry="2" />
<text  x="594.54" y="671.5" >ip_finis..</text>
</g>
<g >
<title>apparmor_socket_recvmsg (3 samples, 0.54%)</title><rect x="490.0" y="613" width="6.4" height="15.0" fill="rgb(227,131,44)" rx="2" ry="2" />
<text  x="493.04" y="623.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.36%)</title><rect x="509.1" y="773" width="4.2" height="15.0" fill="rgb(245,67,24)" rx="2" ry="2" />
<text  x="512.07" y="783.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.18%)</title><rect x="449.9" y="421" width="2.1" height="15.0" fill="rgb(211,180,24)" rx="2" ry="2" />
<text  x="452.86" y="431.5" ></text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.36%)</title><rect x="587.3" y="629" width="4.2" height="15.0" fill="rgb(233,43,38)" rx="2" ry="2" />
<text  x="590.31" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.18%)</title><rect x="12.1" y="1205" width="2.1" height="15.0" fill="rgb(251,137,10)" rx="2" ry="2" />
<text  x="15.11" y="1215.5" ></text>
</g>
<g >
<title>bincode::internal::serialize_into (55 samples, 9.86%)</title><rect x="1012.4" y="1061" width="116.3" height="15.0" fill="rgb(213,227,20)" rx="2" ry="2" />
<text  x="1015.37" y="1071.5" >bincode::inter..</text>
</g>
<g >
<title>__dev_queue_xmit (3 samples, 0.54%)</title><rect x="972.2" y="421" width="6.3" height="15.0" fill="rgb(216,31,41)" rx="2" ry="2" />
<text  x="975.19" y="431.5" ></text>
</g>
</g>
</svg>
