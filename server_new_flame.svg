<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1318.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1301" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1301" > </text>
<g id="frames">
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (8 samples, 1.00%)</title><rect x="36.6" y="949" width="11.8" height="15.0" fill="rgb(246,71,23)" rx="2" ry="2" />
<text  x="39.62" y="959.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.13%)</title><rect x="960.8" y="741" width="1.5" height="15.0" fill="rgb(249,51,13)" rx="2" ry="2" />
<text  x="963.80" y="751.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (34 samples, 4.26%)</title><rect x="146.0" y="885" width="50.3" height="15.0" fill="rgb(212,106,16)" rx="2" ry="2" />
<text  x="149.04" y="895.5" >serde..</text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.13%)</title><rect x="770.1" y="725" width="1.4" height="15.0" fill="rgb(210,9,29)" rx="2" ry="2" />
<text  x="773.05" y="735.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="1005.2" y="1013" width="1.4" height="15.0" fill="rgb(221,89,33)" rx="2" ry="2" />
<text  x="1008.16" y="1023.5" ></text>
</g>
<g >
<title>__sys_recvfrom (17 samples, 2.13%)</title><rect x="351.6" y="613" width="25.1" height="15.0" fill="rgb(208,75,46)" rx="2" ry="2" />
<text  x="354.58" y="623.5" >_..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.13%)</title><rect x="63.2" y="949" width="1.5" height="15.0" fill="rgb(229,146,37)" rx="2" ry="2" />
<text  x="66.23" y="959.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.13%)</title><rect x="997.8" y="1045" width="1.4" height="15.0" fill="rgb(245,57,1)" rx="2" ry="2" />
<text  x="1000.77" y="1055.5" ></text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="180.1" y="725" width="1.4" height="15.0" fill="rgb(226,26,12)" rx="2" ry="2" />
<text  x="183.05" y="735.5" ></text>
</g>
<g >
<title>sock_recvmsg (36 samples, 4.51%)</title><rect x="471.4" y="613" width="53.2" height="15.0" fill="rgb(211,104,51)" rx="2" ry="2" />
<text  x="474.35" y="623.5" >sock_..</text>
</g>
<g >
<title>core::ptr::write (1 samples, 0.13%)</title><rect x="310.2" y="789" width="1.5" height="15.0" fill="rgb(226,160,48)" rx="2" ry="2" />
<text  x="313.18" y="799.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.13%)</title><rect x="191.9" y="453" width="1.5" height="15.0" fill="rgb(216,2,13)" rx="2" ry="2" />
<text  x="194.88" y="463.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::make_slice (2 samples, 0.25%)</title><rect x="159.3" y="661" width="3.0" height="15.0" fill="rgb(205,195,33)" rx="2" ry="2" />
<text  x="162.35" y="671.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="180.1" y="549" width="1.4" height="15.0" fill="rgb(248,147,50)" rx="2" ry="2" />
<text  x="183.05" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (10 samples, 1.25%)</title><rect x="747.9" y="789" width="14.8" height="15.0" fill="rgb(237,143,36)" rx="2" ry="2" />
<text  x="750.87" y="799.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.13%)</title><rect x="821.8" y="709" width="1.5" height="15.0" fill="rgb(227,110,14)" rx="2" ry="2" />
<text  x="824.80" y="719.5" ></text>
</g>
<g >
<title>inet_sendmsg (5 samples, 0.63%)</title><rect x="807.0" y="725" width="7.4" height="15.0" fill="rgb(215,93,25)" rx="2" ry="2" />
<text  x="810.02" y="735.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.13%)</title><rect x="33.7" y="357" width="1.4" height="15.0" fill="rgb(206,179,44)" rx="2" ry="2" />
<text  x="36.66" y="367.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="814.4" y="741" width="1.5" height="15.0" fill="rgb(233,113,7)" rx="2" ry="2" />
<text  x="817.41" y="751.5" ></text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.13%)</title><rect x="1185.6" y="1061" width="1.4" height="15.0" fill="rgb(244,203,8)" rx="2" ry="2" />
<text  x="1188.56" y="1071.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h237009b438a76b5e (125 samples, 15.66%)</title><rect x="999.2" y="1077" width="184.9" height="15.0" fill="rgb(213,3,39)" rx="2" ry="2" />
<text  x="1002.25" y="1087.5" >std::rt::lang_start::_$u..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.25%)</title><rect x="540.9" y="725" width="2.9" height="15.0" fill="rgb(245,215,25)" rx="2" ry="2" />
<text  x="543.85" y="735.5" ></text>
</g>
<g >
<title>std::panicking::try (125 samples, 15.66%)</title><rect x="999.2" y="1141" width="184.9" height="15.0" fill="rgb(210,92,33)" rx="2" ry="2" />
<text  x="1002.25" y="1151.5" >std::panicking::try</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::deserialize_prim_number (53 samples, 6.64%)</title><rect x="546.8" y="853" width="78.3" height="15.0" fill="rgb(209,99,47)" rx="2" ry="2" />
<text  x="549.77" y="863.5" >serde_jso..</text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.50%)</title><rect x="966.7" y="901" width="5.9" height="15.0" fill="rgb(240,194,3)" rx="2" ry="2" />
<text  x="969.72" y="911.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.13%)</title><rect x="33.7" y="725" width="1.4" height="15.0" fill="rgb(208,219,51)" rx="2" ry="2" />
<text  x="36.66" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.63%)</title><rect x="722.7" y="453" width="7.4" height="15.0" fill="rgb(237,16,46)" rx="2" ry="2" />
<text  x="725.73" y="463.5" ></text>
</g>
<g >
<title>tcp_sendmsg (5 samples, 0.63%)</title><rect x="807.0" y="709" width="7.4" height="15.0" fill="rgb(253,149,54)" rx="2" ry="2" />
<text  x="810.02" y="719.5" ></text>
</g>
<g >
<title>schedule (41 samples, 5.14%)</title><rect x="1122.0" y="917" width="60.6" height="15.0" fill="rgb(240,168,40)" rx="2" ry="2" />
<text  x="1124.98" y="927.5" >schedule</text>
</g>
<g >
<title>do_softirq.part.20 (7 samples, 0.88%)</title><rect x="719.8" y="501" width="10.3" height="15.0" fill="rgb(206,189,16)" rx="2" ry="2" />
<text  x="722.77" y="511.5" ></text>
</g>
<g >
<title>sk_reset_timer (3 samples, 0.38%)</title><rect x="950.5" y="645" width="4.4" height="15.0" fill="rgb(235,68,54)" rx="2" ry="2" />
<text  x="953.45" y="655.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="570.4" y="501" width="1.5" height="15.0" fill="rgb(249,108,18)" rx="2" ry="2" />
<text  x="573.43" y="511.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.13%)</title><rect x="180.1" y="533" width="1.4" height="15.0" fill="rgb(218,36,43)" rx="2" ry="2" />
<text  x="183.05" y="543.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.13%)</title><rect x="289.5" y="661" width="1.5" height="15.0" fill="rgb(248,125,25)" rx="2" ry="2" />
<text  x="292.47" y="671.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 4.76%)</title><rect x="326.4" y="757" width="56.2" height="15.0" fill="rgb(210,1,39)" rx="2" ry="2" />
<text  x="329.44" y="767.5" >&lt;std:..</text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="743.4" y="901" width="3.0" height="15.0" fill="rgb(238,139,18)" rx="2" ry="2" />
<text  x="746.43" y="911.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (663 samples, 83.08%)</title><rect x="10.0" y="1125" width="980.4" height="15.0" fill="rgb(209,65,54)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.13%)</title><rect x="583.7" y="405" width="1.5" height="15.0" fill="rgb(219,51,28)" rx="2" ry="2" />
<text  x="586.73" y="415.5" ></text>
</g>
<g >
<title>ip_rcv_finish (47 samples, 5.89%)</title><rect x="870.6" y="421" width="69.5" height="15.0" fill="rgb(207,203,31)" rx="2" ry="2" />
<text  x="873.60" y="431.5" >ip_rcv_..</text>
</g>
<g >
<title>_$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$config..source..Source$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$$u20$as$u20$config..source..Source$GT$::collect::h5d7bbd561dba1a02 (1 samples, 0.13%)</title><rect x="996.3" y="1189" width="1.5" height="15.0" fill="rgb(246,209,32)" rx="2" ry="2" />
<text  x="999.29" y="1199.5" ></text>
</g>
<g >
<title>ip_finish_output2 (52 samples, 6.52%)</title><rect x="867.6" y="581" width="76.9" height="15.0" fill="rgb(248,155,46)" rx="2" ry="2" />
<text  x="870.64" y="591.5" >ip_finis..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::find (1 samples, 0.13%)</title><rect x="994.8" y="997" width="1.5" height="15.0" fill="rgb(216,68,34)" rx="2" ry="2" />
<text  x="997.81" y="1007.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (38 samples, 4.76%)</title><rect x="563.0" y="741" width="56.2" height="15.0" fill="rgb(209,144,8)" rx="2" ry="2" />
<text  x="566.03" y="751.5" >&lt;&amp;std..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.13%)</title><rect x="289.5" y="677" width="1.5" height="15.0" fill="rgb(241,222,2)" rx="2" ry="2" />
<text  x="292.47" y="687.5" ></text>
</g>
<g >
<title>inet_recvmsg (2 samples, 0.25%)</title><rect x="190.4" y="533" width="3.0" height="15.0" fill="rgb(253,46,49)" rx="2" ry="2" />
<text  x="193.40" y="543.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::hb26e39676675046f (125 samples, 15.66%)</title><rect x="999.2" y="1093" width="184.9" height="15.0" fill="rgb(223,0,46)" rx="2" ry="2" />
<text  x="1002.25" y="1103.5" >std::rt::lang_start_inte..</text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.13%)</title><rect x="980.0" y="757" width="1.5" height="15.0" fill="rgb(232,156,0)" rx="2" ry="2" />
<text  x="983.03" y="767.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.13%)</title><rect x="33.7" y="453" width="1.4" height="15.0" fill="rgb(239,123,40)" rx="2" ry="2" />
<text  x="36.66" y="463.5" ></text>
</g>
<g >
<title>core::alloc::Layout::new (1 samples, 0.13%)</title><rect x="103.2" y="885" width="1.4" height="15.0" fill="rgb(247,207,54)" rx="2" ry="2" />
<text  x="106.16" y="895.5" ></text>
</g>
<g >
<title>ip_output (18 samples, 2.26%)</title><rect x="585.2" y="437" width="26.6" height="15.0" fill="rgb(248,52,0)" rx="2" ry="2" />
<text  x="588.21" y="447.5" >i..</text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::try_lock (1 samples, 0.13%)</title><rect x="72.1" y="949" width="1.5" height="15.0" fill="rgb(221,106,40)" rx="2" ry="2" />
<text  x="75.11" y="959.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (125 samples, 15.66%)</title><rect x="999.2" y="1157" width="184.9" height="15.0" fill="rgb(211,186,10)" rx="2" ry="2" />
<text  x="1002.25" y="1167.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.25%)</title><rect x="980.0" y="837" width="3.0" height="15.0" fill="rgb(253,140,29)" rx="2" ry="2" />
<text  x="983.03" y="847.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (7 samples, 0.88%)</title><rect x="693.2" y="645" width="10.3" height="15.0" fill="rgb(233,91,36)" rx="2" ry="2" />
<text  x="696.16" y="655.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.25%)</title><rect x="941.6" y="565" width="2.9" height="15.0" fill="rgb(225,160,17)" rx="2" ry="2" />
<text  x="944.58" y="575.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.38%)</title><rect x="699.1" y="613" width="4.4" height="15.0" fill="rgb(227,64,26)" rx="2" ry="2" />
<text  x="702.07" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::RWLock::read_unlock (1 samples, 0.13%)</title><rect x="60.3" y="933" width="1.5" height="15.0" fill="rgb(251,133,11)" rx="2" ry="2" />
<text  x="63.28" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (7 samples, 0.88%)</title><rect x="95.8" y="949" width="10.3" height="15.0" fill="rgb(235,62,13)" rx="2" ry="2" />
<text  x="98.76" y="959.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.13%)</title><rect x="715.3" y="501" width="1.5" height="15.0" fill="rgb(207,198,13)" rx="2" ry="2" />
<text  x="718.34" y="511.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.13%)</title><rect x="570.4" y="533" width="1.5" height="15.0" fill="rgb(231,179,29)" rx="2" ry="2" />
<text  x="573.43" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (2 samples, 0.25%)</title><rect x="1025.9" y="1013" width="2.9" height="15.0" fill="rgb(235,154,49)" rx="2" ry="2" />
<text  x="1028.86" y="1023.5" ></text>
</g>
<g >
<title>config::config::Config::refresh (1 samples, 0.13%)</title><rect x="994.8" y="1205" width="1.5" height="15.0" fill="rgb(250,213,5)" rx="2" ry="2" />
<text  x="997.81" y="1215.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.13%)</title><rect x="971.2" y="869" width="1.4" height="15.0" fill="rgb(237,135,12)" rx="2" ry="2" />
<text  x="974.15" y="879.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::scan_next_token (1 samples, 0.13%)</title><rect x="997.8" y="1125" width="1.4" height="15.0" fill="rgb(230,225,31)" rx="2" ry="2" />
<text  x="1000.77" y="1135.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (2 samples, 0.25%)</title><rect x="571.9" y="469" width="3.0" height="15.0" fill="rgb(222,184,2)" rx="2" ry="2" />
<text  x="574.90" y="479.5" ></text>
</g>
<g >
<title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="1185.6" y="853" width="1.4" height="15.0" fill="rgb(244,48,15)" rx="2" ry="2" />
<text  x="1188.56" y="863.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::block_mapping_key (1 samples, 0.13%)</title><rect x="997.8" y="1157" width="1.4" height="15.0" fill="rgb(215,113,16)" rx="2" ry="2" />
<text  x="1000.77" y="1167.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 0.13%)</title><rect x="542.3" y="581" width="1.5" height="15.0" fill="rgb(241,52,0)" rx="2" ry="2" />
<text  x="545.33" y="591.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for bool&gt;::serialize (5 samples, 0.63%)</title><rect x="815.9" y="933" width="7.4" height="15.0" fill="rgb(231,227,38)" rx="2" ry="2" />
<text  x="818.89" y="943.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="193.4" y="533" width="1.4" height="15.0" fill="rgb(245,29,9)" rx="2" ry="2" />
<text  x="196.36" y="543.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.50%)</title><rect x="778.9" y="885" width="17.8" height="15.0" fill="rgb(232,13,5)" rx="2" ry="2" />
<text  x="781.92" y="895.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;R&gt;&gt;::from_reader (1 samples, 0.13%)</title><rect x="737.5" y="981" width="1.5" height="15.0" fill="rgb(242,176,40)" rx="2" ry="2" />
<text  x="740.52" y="991.5" ></text>
</g>
<g >
<title>__sys_recvfrom (3 samples, 0.38%)</title><rect x="190.4" y="565" width="4.4" height="15.0" fill="rgb(243,127,51)" rx="2" ry="2" />
<text  x="193.40" y="575.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="873.6" y="277" width="1.4" height="15.0" fill="rgb(246,116,5)" rx="2" ry="2" />
<text  x="876.56" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 4.64%)</title><rect x="564.5" y="661" width="54.7" height="15.0" fill="rgb(249,34,34)" rx="2" ry="2" />
<text  x="567.51" y="671.5" >entry..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (7 samples, 0.88%)</title><rect x="421.1" y="805" width="10.3" height="15.0" fill="rgb(213,111,53)" rx="2" ry="2" />
<text  x="424.08" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.50%)</title><rect x="188.9" y="613" width="5.9" height="15.0" fill="rgb(232,192,51)" rx="2" ry="2" />
<text  x="191.92" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="1008.1" y="965" width="3.0" height="15.0" fill="rgb(225,117,44)" rx="2" ry="2" />
<text  x="1011.12" y="975.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::RWLock::read (3 samples, 0.38%)</title><rect x="83.9" y="949" width="4.5" height="15.0" fill="rgb(213,29,28)" rx="2" ry="2" />
<text  x="86.93" y="959.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.13%)</title><rect x="33.7" y="773" width="1.4" height="15.0" fill="rgb(245,78,23)" rx="2" ry="2" />
<text  x="36.66" y="783.5" ></text>
</g>
<g >
<title>tcp_recvmsg (32 samples, 4.01%)</title><rect x="570.4" y="565" width="47.3" height="15.0" fill="rgb(216,101,34)" rx="2" ry="2" />
<text  x="573.43" y="575.5" >tcp_..</text>
</g>
<g >
<title>core::cmp::max (3 samples, 0.38%)</title><rect x="286.5" y="725" width="4.5" height="15.0" fill="rgb(241,185,9)" rx="2" ry="2" />
<text  x="289.52" y="735.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (7 samples, 0.88%)</title><rect x="125.3" y="965" width="10.4" height="15.0" fill="rgb(237,152,21)" rx="2" ry="2" />
<text  x="128.34" y="975.5" ></text>
</g>
<g >
<title>wait_woken (1 samples, 0.13%)</title><rect x="520.2" y="565" width="1.4" height="15.0" fill="rgb(206,162,20)" rx="2" ry="2" />
<text  x="523.15" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (48 samples, 6.02%)</title><rect x="869.1" y="517" width="71.0" height="15.0" fill="rgb(216,180,33)" rx="2" ry="2" />
<text  x="872.12" y="527.5" >__softir..</text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.13%)</title><rect x="943.1" y="469" width="1.4" height="15.0" fill="rgb(251,215,29)" rx="2" ry="2" />
<text  x="946.06" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.13%)</title><rect x="796.7" y="869" width="1.4" height="15.0" fill="rgb(244,203,11)" rx="2" ry="2" />
<text  x="799.67" y="879.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.50%)</title><rect x="684.3" y="613" width="5.9" height="15.0" fill="rgb(229,149,35)" rx="2" ry="2" />
<text  x="687.29" y="623.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::tuple_variant (37 samples, 4.64%)</title><rect x="144.6" y="933" width="54.7" height="15.0" fill="rgb(254,171,20)" rx="2" ry="2" />
<text  x="147.56" y="943.5" >&lt;serd..</text>
</g>
<g >
<title>hrtimer_start_range_ns (4 samples, 0.50%)</title><rect x="1116.1" y="917" width="5.9" height="15.0" fill="rgb(242,221,21)" rx="2" ry="2" />
<text  x="1119.07" y="927.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.13%)</title><rect x="57.3" y="853" width="1.5" height="15.0" fill="rgb(207,124,40)" rx="2" ry="2" />
<text  x="60.32" y="863.5" ></text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::Command&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (328 samples, 41.10%)</title><rect x="140.1" y="949" width="485.0" height="15.0" fill="rgb(226,131,46)" rx="2" ry="2" />
<text  x="143.13" y="959.5" >&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_C..</text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (1 samples, 0.13%)</title><rect x="969.7" y="821" width="1.5" height="15.0" fill="rgb(253,187,50)" rx="2" ry="2" />
<text  x="972.67" y="831.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.13%)</title><rect x="852.9" y="709" width="1.4" height="15.0" fill="rgb(224,191,8)" rx="2" ry="2" />
<text  x="855.86" y="719.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.13%)</title><rect x="761.2" y="629" width="1.5" height="15.0" fill="rgb(215,43,41)" rx="2" ry="2" />
<text  x="764.18" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="32.2" y="917" width="1.5" height="15.0" fill="rgb(242,190,45)" rx="2" ry="2" />
<text  x="35.18" y="927.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.13%)</title><rect x="579.3" y="373" width="1.5" height="15.0" fill="rgb(228,132,52)" rx="2" ry="2" />
<text  x="582.30" y="383.5" ></text>
</g>
<g >
<title>vfs_statx (1 samples, 0.13%)</title><rect x="996.3" y="949" width="1.5" height="15.0" fill="rgb(221,156,53)" rx="2" ry="2" />
<text  x="999.29" y="959.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (40 samples, 5.01%)</title><rect x="560.1" y="805" width="59.1" height="15.0" fill="rgb(247,37,20)" rx="2" ry="2" />
<text  x="563.08" y="815.5" >serde_..</text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (1 samples, 0.13%)</title><rect x="802.6" y="805" width="1.5" height="15.0" fill="rgb(238,141,36)" rx="2" ry="2" />
<text  x="805.58" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.13%)</title><rect x="153.4" y="645" width="1.5" height="15.0" fill="rgb(231,228,51)" rx="2" ry="2" />
<text  x="156.43" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.13%)</title><rect x="1188.5" y="1205" width="1.5" height="15.0" fill="rgb(246,168,43)" rx="2" ry="2" />
<text  x="1191.52" y="1215.5" ></text>
</g>
<g >
<title>__do_sys_statx (1 samples, 0.13%)</title><rect x="996.3" y="965" width="1.5" height="15.0" fill="rgb(219,148,24)" rx="2" ry="2" />
<text  x="999.29" y="975.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (5 samples, 0.63%)</title><rect x="187.4" y="757" width="7.4" height="15.0" fill="rgb(220,70,54)" rx="2" ry="2" />
<text  x="190.44" y="767.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.13%)</title><rect x="484.7" y="565" width="1.4" height="15.0" fill="rgb(232,227,41)" rx="2" ry="2" />
<text  x="487.66" y="575.5" ></text>
</g>
<g >
<title>serde_json::read::as_str (5 samples, 0.63%)</title><rect x="314.6" y="789" width="7.4" height="15.0" fill="rgb(236,54,10)" rx="2" ry="2" />
<text  x="317.61" y="799.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.13%)</title><rect x="946.0" y="677" width="1.5" height="15.0" fill="rgb(247,35,11)" rx="2" ry="2" />
<text  x="949.02" y="687.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (8 samples, 1.00%)</title><rect x="183.0" y="789" width="11.8" height="15.0" fill="rgb(245,74,45)" rx="2" ry="2" />
<text  x="186.01" y="799.5" ></text>
</g>
<g >
<title>sock_sendmsg (82 samples, 10.28%)</title><rect x="839.5" y="789" width="121.3" height="15.0" fill="rgb(232,211,48)" rx="2" ry="2" />
<text  x="842.55" y="799.5" >sock_sendmsg</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (4 samples, 0.50%)</title><rect x="394.5" y="677" width="5.9" height="15.0" fill="rgb(237,212,50)" rx="2" ry="2" />
<text  x="397.46" y="687.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::peek_token (1 samples, 0.13%)</title><rect x="997.8" y="1141" width="1.4" height="15.0" fill="rgb(227,24,9)" rx="2" ry="2" />
<text  x="1000.77" y="1151.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.13%)</title><rect x="1185.6" y="565" width="1.4" height="15.0" fill="rgb(219,2,25)" rx="2" ry="2" />
<text  x="1188.56" y="575.5" ></text>
</g>
<g >
<title>__ip_local_out (5 samples, 0.63%)</title><rect x="577.8" y="437" width="7.4" height="15.0" fill="rgb(212,169,32)" rx="2" ry="2" />
<text  x="580.82" y="447.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.13%)</title><rect x="134.2" y="917" width="1.5" height="15.0" fill="rgb(251,46,46)" rx="2" ry="2" />
<text  x="137.21" y="927.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="851.4" y="709" width="1.5" height="15.0" fill="rgb(229,155,0)" rx="2" ry="2" />
<text  x="854.38" y="719.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::barrier_broadcast (1 samples, 0.13%)</title><rect x="1185.6" y="997" width="1.4" height="15.0" fill="rgb(216,100,24)" rx="2" ry="2" />
<text  x="1188.56" y="1007.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.25%)</title><rect x="540.9" y="661" width="2.9" height="15.0" fill="rgb(249,112,42)" rx="2" ry="2" />
<text  x="543.85" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (62 samples, 7.77%)</title><rect x="1092.4" y="965" width="91.7" height="15.0" fill="rgb(245,74,15)" rx="2" ry="2" />
<text  x="1095.41" y="975.5" >__x64_sys_..</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (46 samples, 5.76%)</title><rect x="551.2" y="837" width="68.0" height="15.0" fill="rgb(247,141,47)" rx="2" ry="2" />
<text  x="554.20" y="847.5" >serde_j..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="197.8" y="741" width="1.5" height="15.0" fill="rgb(254,45,1)" rx="2" ry="2" />
<text  x="200.79" y="751.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.13%)</title><rect x="18.9" y="933" width="1.5" height="15.0" fill="rgb(227,226,42)" rx="2" ry="2" />
<text  x="21.87" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum (406 samples, 50.88%)</title><rect x="137.2" y="965" width="600.3" height="15.0" fill="rgb(247,104,44)" rx="2" ry="2" />
<text  x="140.17" y="975.5" >&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_enum</text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.13%)</title><rect x="993.3" y="1221" width="1.5" height="15.0" fill="rgb(216,30,15)" rx="2" ry="2" />
<text  x="996.33" y="1231.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::as_slice (2 samples, 0.25%)</title><rect x="159.3" y="677" width="3.0" height="15.0" fill="rgb(223,202,7)" rx="2" ry="2" />
<text  x="162.35" y="687.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (37 samples, 4.64%)</title><rect x="144.6" y="917" width="54.7" height="15.0" fill="rgb(244,12,38)" rx="2" ry="2" />
<text  x="147.56" y="927.5" >&lt;&amp;mut..</text>
</g>
<g >
<title>ip_finish_output2 (8 samples, 1.00%)</title><rect x="718.3" y="533" width="11.8" height="15.0" fill="rgb(217,48,30)" rx="2" ry="2" />
<text  x="721.30" y="543.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.13%)</title><rect x="33.7" y="549" width="1.4" height="15.0" fill="rgb(244,153,12)" rx="2" ry="2" />
<text  x="36.66" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.88%)</title><rect x="719.8" y="469" width="10.3" height="15.0" fill="rgb(234,74,19)" rx="2" ry="2" />
<text  x="722.77" y="479.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (52 samples, 6.52%)</title><rect x="449.2" y="757" width="76.9" height="15.0" fill="rgb(242,140,3)" rx="2" ry="2" />
<text  x="452.17" y="767.5" >&lt;&amp;std::n..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.50%)</title><rect x="817.4" y="869" width="5.9" height="15.0" fill="rgb(234,156,54)" rx="2" ry="2" />
<text  x="820.37" y="879.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.13%)</title><rect x="33.7" y="757" width="1.4" height="15.0" fill="rgb(216,202,37)" rx="2" ry="2" />
<text  x="36.66" y="767.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (16 samples, 2.01%)</title><rect x="707.9" y="597" width="23.7" height="15.0" fill="rgb(243,180,42)" rx="2" ry="2" />
<text  x="710.94" y="607.5" >_..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.25%)</title><rect x="428.5" y="773" width="2.9" height="15.0" fill="rgb(241,220,0)" rx="2" ry="2" />
<text  x="431.47" y="783.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (71 samples, 8.90%)</title><rect x="632.5" y="917" width="105.0" height="15.0" fill="rgb(226,197,7)" rx="2" ry="2" />
<text  x="635.53" y="927.5" >&lt;serde_json:..</text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.13%)</title><rect x="81.0" y="821" width="1.5" height="15.0" fill="rgb(252,54,35)" rx="2" ry="2" />
<text  x="83.98" y="831.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.13%)</title><rect x="582.3" y="373" width="1.4" height="15.0" fill="rgb(239,131,54)" rx="2" ry="2" />
<text  x="585.26" y="383.5" ></text>
</g>
<g >
<title>__libc_close (1 samples, 0.13%)</title><rect x="33.7" y="965" width="1.4" height="15.0" fill="rgb(248,154,26)" rx="2" ry="2" />
<text  x="36.66" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (7 samples, 0.88%)</title><rect x="95.8" y="965" width="10.3" height="15.0" fill="rgb(243,206,42)" rx="2" ry="2" />
<text  x="98.76" y="975.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (57 samples, 7.14%)</title><rect x="860.3" y="645" width="84.2" height="15.0" fill="rgb(234,29,0)" rx="2" ry="2" />
<text  x="863.25" y="655.5" >__ip_queu..</text>
</g>
<g >
<title>sock_recvmsg (12 samples, 1.50%)</title><rect x="356.0" y="597" width="17.8" height="15.0" fill="rgb(252,174,19)" rx="2" ry="2" />
<text  x="359.02" y="607.5" ></text>
</g>
<g >
<title>ip_rcv_finish (9 samples, 1.13%)</title><rect x="595.6" y="245" width="13.3" height="15.0" fill="rgb(253,47,32)" rx="2" ry="2" />
<text  x="598.56" y="255.5" ></text>
</g>
<g >
<title>sk_wait_data (1 samples, 0.13%)</title><rect x="662.1" y="693" width="1.5" height="15.0" fill="rgb(216,198,30)" rx="2" ry="2" />
<text  x="665.11" y="703.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.13%)</title><rect x="728.6" y="325" width="1.5" height="15.0" fill="rgb(205,195,32)" rx="2" ry="2" />
<text  x="731.65" y="335.5" ></text>
</g>
<g >
<title>serde::de::EnumAccess::variant (231 samples, 28.95%)</title><rect x="202.2" y="933" width="341.6" height="15.0" fill="rgb(229,47,8)" rx="2" ry="2" />
<text  x="205.23" y="943.5" >serde::de::EnumAccess::variant</text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.13%)</title><rect x="997.8" y="1013" width="1.4" height="15.0" fill="rgb(251,97,16)" rx="2" ry="2" />
<text  x="1000.77" y="1023.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.25%)</title><rect x="521.6" y="597" width="3.0" height="15.0" fill="rgb(215,167,1)" rx="2" ry="2" />
<text  x="524.63" y="607.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.50%)</title><rect x="778.9" y="869" width="5.9" height="15.0" fill="rgb(248,68,30)" rx="2" ry="2" />
<text  x="781.92" y="879.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.13%)</title><rect x="285.0" y="725" width="1.5" height="15.0" fill="rgb(224,31,30)" rx="2" ry="2" />
<text  x="288.04" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="236.2" y="805" width="1.5" height="15.0" fill="rgb(246,133,48)" rx="2" ry="2" />
<text  x="239.24" y="815.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::post_inc_start (1 samples, 0.13%)</title><rect x="795.2" y="853" width="1.5" height="15.0" fill="rgb(237,145,42)" rx="2" ry="2" />
<text  x="798.19" y="863.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.13%)</title><rect x="1028.8" y="869" width="1.5" height="15.0" fill="rgb(253,148,43)" rx="2" ry="2" />
<text  x="1031.82" y="879.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.13%)</title><rect x="1185.6" y="917" width="1.4" height="15.0" fill="rgb(238,193,40)" rx="2" ry="2" />
<text  x="1188.56" y="927.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.13%)</title><rect x="1185.6" y="1205" width="1.4" height="15.0" fill="rgb(217,159,31)" rx="2" ry="2" />
<text  x="1188.56" y="1215.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.13%)</title><rect x="675.4" y="645" width="1.5" height="15.0" fill="rgb(238,164,26)" rx="2" ry="2" />
<text  x="678.41" y="655.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.13%)</title><rect x="194.8" y="773" width="1.5" height="15.0" fill="rgb(250,165,16)" rx="2" ry="2" />
<text  x="197.84" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="1185.6" y="805" width="1.4" height="15.0" fill="rgb(239,114,36)" rx="2" ry="2" />
<text  x="1188.56" y="815.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (3 samples, 0.38%)</title><rect x="416.6" y="789" width="4.5" height="15.0" fill="rgb(222,133,1)" rx="2" ry="2" />
<text  x="419.64" y="799.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.63%)</title><rect x="220.0" y="789" width="7.4" height="15.0" fill="rgb(219,81,24)" rx="2" ry="2" />
<text  x="222.97" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_statx (1 samples, 0.13%)</title><rect x="996.3" y="981" width="1.5" height="15.0" fill="rgb(214,216,32)" rx="2" ry="2" />
<text  x="999.29" y="991.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::eat_char (2 samples, 0.25%)</title><rect x="625.1" y="949" width="3.0" height="15.0" fill="rgb(230,225,12)" rx="2" ry="2" />
<text  x="628.14" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.25%)</title><rect x="540.9" y="805" width="2.9" height="15.0" fill="rgb(248,154,1)" rx="2" ry="2" />
<text  x="543.85" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 1.25%)</title><rect x="747.9" y="805" width="14.8" height="15.0" fill="rgb(215,50,38)" rx="2" ry="2" />
<text  x="750.87" y="815.5" ></text>
</g>
<g >
<title>__nf_ct_l4proto_find (1 samples, 0.13%)</title><rect x="863.2" y="549" width="1.5" height="15.0" fill="rgb(213,96,9)" rx="2" ry="2" />
<text  x="866.21" y="559.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.13%)</title><rect x="821.8" y="741" width="1.5" height="15.0" fill="rgb(230,226,20)" rx="2" ry="2" />
<text  x="824.80" y="751.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::barrier::_$u7b$$u7b$closure$u7d$$u7d$::h667470dae72110f0 (1 samples, 0.13%)</title><rect x="1185.6" y="1013" width="1.4" height="15.0" fill="rgb(224,140,16)" rx="2" ry="2" />
<text  x="1188.56" y="1023.5" ></text>
</g>
<g >
<title>ip_rcv_finish (5 samples, 0.63%)</title><rect x="722.7" y="373" width="7.4" height="15.0" fill="rgb(222,145,22)" rx="2" ry="2" />
<text  x="725.73" y="383.5" ></text>
</g>
<g >
<title>__netif_receive_skb (5 samples, 0.63%)</title><rect x="722.7" y="421" width="7.4" height="15.0" fill="rgb(246,141,22)" rx="2" ry="2" />
<text  x="725.73" y="431.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.13%)</title><rect x="768.6" y="661" width="1.5" height="15.0" fill="rgb(235,174,6)" rx="2" ry="2" />
<text  x="771.57" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (1 samples, 0.13%)</title><rect x="805.5" y="789" width="1.5" height="15.0" fill="rgb(246,202,17)" rx="2" ry="2" />
<text  x="808.54" y="799.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.13%)</title><rect x="191.9" y="501" width="1.5" height="15.0" fill="rgb(248,76,21)" rx="2" ry="2" />
<text  x="194.88" y="511.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (1 samples, 0.13%)</title><rect x="200.8" y="917" width="1.4" height="15.0" fill="rgb(235,84,12)" rx="2" ry="2" />
<text  x="203.75" y="927.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (1 samples, 0.13%)</title><rect x="181.5" y="725" width="1.5" height="15.0" fill="rgb(236,10,18)" rx="2" ry="2" />
<text  x="184.53" y="735.5" ></text>
</g>
<g >
<title>__sys_recvfrom (36 samples, 4.51%)</title><rect x="566.0" y="613" width="53.2" height="15.0" fill="rgb(245,72,5)" rx="2" ry="2" />
<text  x="568.99" y="623.5" >__sys..</text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="540.9" y="837" width="2.9" height="15.0" fill="rgb(209,4,36)" rx="2" ry="2" />
<text  x="543.85" y="847.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.25%)</title><rect x="1077.6" y="997" width="3.0" height="15.0" fill="rgb(224,220,22)" rx="2" ry="2" />
<text  x="1080.62" y="1007.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object (98 samples, 12.28%)</title><rect x="827.7" y="933" width="144.9" height="15.0" fill="rgb(243,170,23)" rx="2" ry="2" />
<text  x="830.72" y="943.5" >serde_json::ser::F..</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.25%)</title><rect x="585.2" y="405" width="3.0" height="15.0" fill="rgb(220,227,49)" rx="2" ry="2" />
<text  x="588.21" y="415.5" ></text>
</g>
<g >
<title>&lt;config::file::source::file::FileSourceFile as config::file::source::FileSource&gt;::resolve (1 samples, 0.13%)</title><rect x="996.3" y="1141" width="1.5" height="15.0" fill="rgb(223,137,23)" rx="2" ry="2" />
<text  x="999.29" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="150.5" y="661" width="1.5" height="15.0" fill="rgb(216,96,29)" rx="2" ry="2" />
<text  x="153.48" y="671.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.13%)</title><rect x="996.3" y="853" width="1.5" height="15.0" fill="rgb(224,70,17)" rx="2" ry="2" />
<text  x="999.29" y="863.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (221 samples, 27.69%)</title><rect x="211.1" y="869" width="326.8" height="15.0" fill="rgb(217,110,15)" rx="2" ry="2" />
<text  x="214.10" y="879.5" >&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as ser..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.13%)</title><rect x="33.7" y="565" width="1.4" height="15.0" fill="rgb(223,179,52)" rx="2" ry="2" />
<text  x="36.66" y="575.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.13%)</title><rect x="1185.6" y="581" width="1.4" height="15.0" fill="rgb(222,112,21)" rx="2" ry="2" />
<text  x="1188.56" y="591.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (3 samples, 0.38%)</title><rect x="120.9" y="965" width="4.4" height="15.0" fill="rgb(222,217,10)" rx="2" ry="2" />
<text  x="123.90" y="975.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.13%)</title><rect x="100.2" y="869" width="1.5" height="15.0" fill="rgb(227,38,8)" rx="2" ry="2" />
<text  x="103.20" y="879.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (23 samples, 2.88%)</title><rect x="149.0" y="821" width="34.0" height="15.0" fill="rgb(209,89,47)" rx="2" ry="2" />
<text  x="152.00" y="831.5" >&lt;&amp;..</text>
</g>
<g >
<title>__libc_malloc (8 samples, 1.00%)</title><rect x="261.4" y="709" width="11.8" height="15.0" fill="rgb(238,155,1)" rx="2" ry="2" />
<text  x="264.38" y="719.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 0.13%)</title><rect x="570.4" y="517" width="1.5" height="15.0" fill="rgb(244,9,54)" rx="2" ry="2" />
<text  x="573.43" y="527.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.13%)</title><rect x="1185.6" y="357" width="1.4" height="15.0" fill="rgb(245,193,29)" rx="2" ry="2" />
<text  x="1188.56" y="367.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (7 samples, 0.88%)</title><rect x="719.8" y="517" width="10.3" height="15.0" fill="rgb(216,96,44)" rx="2" ry="2" />
<text  x="722.77" y="527.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.13%)</title><rect x="180.1" y="629" width="1.4" height="15.0" fill="rgb(241,117,28)" rx="2" ry="2" />
<text  x="183.05" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.13%)</title><rect x="1028.8" y="901" width="1.5" height="15.0" fill="rgb(205,203,23)" rx="2" ry="2" />
<text  x="1031.82" y="911.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.13%)</title><rect x="616.3" y="501" width="1.4" height="15.0" fill="rgb(253,229,41)" rx="2" ry="2" />
<text  x="619.27" y="511.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::next (1 samples, 0.13%)</title><rect x="997.8" y="1205" width="1.4" height="15.0" fill="rgb(249,108,4)" rx="2" ry="2" />
<text  x="1000.77" y="1215.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.13%)</title><rect x="1187.0" y="1125" width="1.5" height="15.0" fill="rgb(243,180,35)" rx="2" ry="2" />
<text  x="1190.04" y="1135.5" ></text>
</g>
<g >
<title>sock_sendmsg (4 samples, 0.50%)</title><rect x="765.6" y="757" width="5.9" height="15.0" fill="rgb(247,92,47)" rx="2" ry="2" />
<text  x="768.61" y="767.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_bool (4 samples, 0.50%)</title><rect x="817.4" y="901" width="5.9" height="15.0" fill="rgb(212,7,32)" rx="2" ry="2" />
<text  x="820.37" y="911.5" ></text>
</g>
<g >
<title>core::mem::swap (1 samples, 0.13%)</title><rect x="555.6" y="741" width="1.5" height="15.0" fill="rgb(236,174,11)" rx="2" ry="2" />
<text  x="558.64" y="751.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="180.1" y="693" width="1.4" height="15.0" fill="rgb(249,191,49)" rx="2" ry="2" />
<text  x="183.05" y="703.5" ></text>
</g>
<g >
<title>ip_finish_output (53 samples, 6.64%)</title><rect x="866.2" y="597" width="78.3" height="15.0" fill="rgb(251,82,19)" rx="2" ry="2" />
<text  x="869.17" y="607.5" >ip_finish..</text>
</g>
<g >
<title>skb_page_frag_refill (3 samples, 0.38%)</title><rect x="756.7" y="693" width="4.5" height="15.0" fill="rgb(209,109,20)" rx="2" ry="2" />
<text  x="759.74" y="703.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.13%)</title><rect x="944.5" y="661" width="1.5" height="15.0" fill="rgb(251,74,26)" rx="2" ry="2" />
<text  x="947.54" y="671.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.13%)</title><rect x="940.1" y="517" width="1.5" height="15.0" fill="rgb(214,32,26)" rx="2" ry="2" />
<text  x="943.10" y="527.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.13%)</title><rect x="168.2" y="629" width="1.5" height="15.0" fill="rgb(254,24,47)" rx="2" ry="2" />
<text  x="171.22" y="639.5" ></text>
</g>
<g >
<title>tcp_send_ack (18 samples, 2.26%)</title><rect x="705.0" y="661" width="26.6" height="15.0" fill="rgb(228,69,38)" rx="2" ry="2" />
<text  x="707.99" y="671.5" >t..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.13%)</title><rect x="33.7" y="469" width="1.4" height="15.0" fill="rgb(239,178,6)" rx="2" ry="2" />
<text  x="36.66" y="479.5" ></text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.13%)</title><rect x="954.9" y="725" width="1.5" height="15.0" fill="rgb(209,117,20)" rx="2" ry="2" />
<text  x="957.89" y="735.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.13%)</title><rect x="671.0" y="629" width="1.5" height="15.0" fill="rgb(206,16,17)" rx="2" ry="2" />
<text  x="673.98" y="639.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="196.3" y="837" width="3.0" height="15.0" fill="rgb(252,90,20)" rx="2" ry="2" />
<text  x="199.32" y="847.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_unit_variant (1 samples, 0.13%)</title><rect x="1185.6" y="949" width="1.4" height="15.0" fill="rgb(247,183,17)" rx="2" ry="2" />
<text  x="1188.56" y="959.5" ></text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.63%)</title><rect x="187.4" y="725" width="7.4" height="15.0" fill="rgb(206,165,10)" rx="2" ry="2" />
<text  x="190.44" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 3.01%)</title><rect x="344.2" y="645" width="35.5" height="15.0" fill="rgb(208,132,50)" rx="2" ry="2" />
<text  x="347.19" y="655.5" >do_..</text>
</g>
<g >
<title>tcp_recvmsg (2 samples, 0.25%)</title><rect x="190.4" y="517" width="3.0" height="15.0" fill="rgb(226,229,22)" rx="2" ry="2" />
<text  x="193.40" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx (1 samples, 0.13%)</title><rect x="996.3" y="1061" width="1.5" height="15.0" fill="rgb(212,200,4)" rx="2" ry="2" />
<text  x="999.29" y="1071.5" ></text>
</g>
<g >
<title>sk_wait_data (10 samples, 1.25%)</title><rect x="675.4" y="677" width="14.8" height="15.0" fill="rgb(214,194,54)" rx="2" ry="2" />
<text  x="678.41" y="687.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (1 samples, 0.13%)</title><rect x="1185.6" y="1093" width="1.4" height="15.0" fill="rgb(210,177,52)" rx="2" ry="2" />
<text  x="1188.56" y="1103.5" ></text>
</g>
<g >
<title>tcp_v4_send_ack (1 samples, 0.13%)</title><rect x="33.7" y="405" width="1.4" height="15.0" fill="rgb(216,74,17)" rx="2" ry="2" />
<text  x="36.66" y="415.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.13%)</title><rect x="841.0" y="741" width="1.5" height="15.0" fill="rgb(213,223,14)" rx="2" ry="2" />
<text  x="844.03" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (2 samples, 0.25%)</title><rect x="106.1" y="965" width="3.0" height="15.0" fill="rgb(219,145,4)" rx="2" ry="2" />
<text  x="109.12" y="975.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.13%)</title><rect x="873.6" y="293" width="1.4" height="15.0" fill="rgb(229,186,12)" rx="2" ry="2" />
<text  x="876.56" y="303.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.13%)</title><rect x="1185.6" y="725" width="1.4" height="15.0" fill="rgb(215,138,24)" rx="2" ry="2" />
<text  x="1188.56" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (1 samples, 0.13%)</title><rect x="826.2" y="805" width="1.5" height="15.0" fill="rgb(235,190,15)" rx="2" ry="2" />
<text  x="829.24" y="815.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (50 samples, 6.27%)</title><rect x="742.0" y="933" width="73.9" height="15.0" fill="rgb(205,86,18)" rx="2" ry="2" />
<text  x="744.95" y="943.5" >&lt;&amp;mut se..</text>
</g>
<g >
<title>check_stack_object (1 samples, 0.13%)</title><rect x="515.7" y="517" width="1.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="518.71" y="527.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (1 samples, 0.13%)</title><rect x="826.2" y="869" width="1.5" height="15.0" fill="rgb(229,144,40)" rx="2" ry="2" />
<text  x="829.24" y="879.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (59 samples, 7.39%)</title><rect x="858.8" y="677" width="87.2" height="15.0" fill="rgb(229,9,37)" rx="2" ry="2" />
<text  x="861.77" y="687.5" >__tcp_tran..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (46 samples, 5.76%)</title><rect x="242.2" y="789" width="68.0" height="15.0" fill="rgb(247,35,41)" rx="2" ry="2" />
<text  x="245.16" y="799.5" >alloc::..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.13%)</title><rect x="1185.6" y="389" width="1.4" height="15.0" fill="rgb(210,62,23)" rx="2" ry="2" />
<text  x="1188.56" y="399.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.38%)</title><rect x="712.4" y="517" width="4.4" height="15.0" fill="rgb(244,203,24)" rx="2" ry="2" />
<text  x="715.38" y="527.5" ></text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="619.2" y="789" width="3.0" height="15.0" fill="rgb(246,76,5)" rx="2" ry="2" />
<text  x="622.22" y="799.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.13%)</title><rect x="483.2" y="565" width="1.5" height="15.0" fill="rgb(233,194,11)" rx="2" ry="2" />
<text  x="486.18" y="575.5" ></text>
</g>
<g >
<title>ip_queue_xmit (27 samples, 3.38%)</title><rect x="576.3" y="485" width="40.0" height="15.0" fill="rgb(241,76,3)" rx="2" ry="2" />
<text  x="579.34" y="495.5" >ip_..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (4 samples, 0.50%)</title><rect x="778.9" y="853" width="5.9" height="15.0" fill="rgb(248,66,21)" rx="2" ry="2" />
<text  x="781.92" y="863.5" ></text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.13%)</title><rect x="582.3" y="357" width="1.4" height="15.0" fill="rgb(206,178,49)" rx="2" ry="2" />
<text  x="585.26" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (18 samples, 2.26%)</title><rect x="150.5" y="725" width="26.6" height="15.0" fill="rgb(212,67,43)" rx="2" ry="2" />
<text  x="153.48" y="735.5" >a..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (220 samples, 27.57%)</title><rect x="212.6" y="853" width="325.3" height="15.0" fill="rgb(210,215,28)" rx="2" ry="2" />
<text  x="215.58" y="863.5" >&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as se..</text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 8.40%)</title><rect x="638.4" y="901" width="99.1" height="15.0" fill="rgb(212,8,30)" rx="2" ry="2" />
<text  x="641.45" y="911.5" >&lt;serde_json..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map (5 samples, 0.63%)</title><rect x="48.4" y="965" width="7.4" height="15.0" fill="rgb(229,181,39)" rx="2" ry="2" />
<text  x="51.45" y="975.5" ></text>
</g>
<g >
<title>net_rx_action (48 samples, 6.02%)</title><rect x="869.1" y="501" width="71.0" height="15.0" fill="rgb(214,147,16)" rx="2" ry="2" />
<text  x="872.12" y="511.5" >net_rx_a..</text>
</g>
<g >
<title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1 samples, 0.13%)</title><rect x="994.8" y="933" width="1.5" height="15.0" fill="rgb(224,52,15)" rx="2" ry="2" />
<text  x="997.81" y="943.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (2 samples, 0.25%)</title><rect x="196.3" y="885" width="3.0" height="15.0" fill="rgb(244,221,25)" rx="2" ry="2" />
<text  x="199.32" y="895.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.13%)</title><rect x="305.7" y="693" width="1.5" height="15.0" fill="rgb(254,28,23)" rx="2" ry="2" />
<text  x="308.74" y="703.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.13%)</title><rect x="462.5" y="677" width="1.5" height="15.0" fill="rgb(214,157,44)" rx="2" ry="2" />
<text  x="465.48" y="687.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.13%)</title><rect x="1187.0" y="1109" width="1.5" height="15.0" fill="rgb(227,115,3)" rx="2" ry="2" />
<text  x="1190.04" y="1119.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.13%)</title><rect x="873.6" y="309" width="1.4" height="15.0" fill="rgb(235,188,7)" rx="2" ry="2" />
<text  x="876.56" y="319.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (62 samples, 7.77%)</title><rect x="642.9" y="853" width="91.7" height="15.0" fill="rgb(228,202,33)" rx="2" ry="2" />
<text  x="645.88" y="863.5" >std::sys_c..</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.13%)</title><rect x="610.4" y="357" width="1.4" height="15.0" fill="rgb(248,65,7)" rx="2" ry="2" />
<text  x="613.35" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.13%)</title><rect x="175.6" y="709" width="1.5" height="15.0" fill="rgb(244,175,15)" rx="2" ry="2" />
<text  x="178.61" y="719.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::barrier::_IMPL_SERIALIZE_FOR_BarrierCommand::&lt;impl serde::ser::Serialize for cse403_distributed_hash_table::barrier::BarrierCommand&gt;::serialize (1 samples, 0.13%)</title><rect x="1185.6" y="965" width="1.4" height="15.0" fill="rgb(205,134,34)" rx="2" ry="2" />
<text  x="1188.56" y="975.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.50%)</title><rect x="88.4" y="965" width="5.9" height="15.0" fill="rgb(223,102,17)" rx="2" ry="2" />
<text  x="91.37" y="975.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.13%)</title><rect x="814.4" y="725" width="1.5" height="15.0" fill="rgb(223,142,23)" rx="2" ry="2" />
<text  x="817.41" y="735.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.13%)</title><rect x="486.1" y="549" width="1.5" height="15.0" fill="rgb(211,31,50)" rx="2" ry="2" />
<text  x="489.14" y="559.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.13%)</title><rect x="391.5" y="677" width="1.5" height="15.0" fill="rgb(217,119,14)" rx="2" ry="2" />
<text  x="394.50" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::clear (21 samples, 2.63%)</title><rect x="400.4" y="837" width="31.0" height="15.0" fill="rgb(219,87,12)" rx="2" ry="2" />
<text  x="403.38" y="847.5" >al..</text>
</g>
<g >
<title>std::io::Write::write_all (4 samples, 0.50%)</title><rect x="817.4" y="885" width="5.9" height="15.0" fill="rgb(211,23,26)" rx="2" ry="2" />
<text  x="820.37" y="895.5" ></text>
</g>
<g >
<title>ip_local_out (24 samples, 3.01%)</title><rect x="577.8" y="453" width="35.5" height="15.0" fill="rgb(254,203,4)" rx="2" ry="2" />
<text  x="580.82" y="463.5" >ip_..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (6 samples, 0.75%)</title><rect x="974.1" y="901" width="8.9" height="15.0" fill="rgb(208,165,4)" rx="2" ry="2" />
<text  x="977.11" y="911.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="1008.1" y="981" width="3.0" height="15.0" fill="rgb(240,24,17)" rx="2" ry="2" />
<text  x="1011.12" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (11 samples, 1.38%)</title><rect x="592.6" y="277" width="16.3" height="15.0" fill="rgb(220,197,9)" rx="2" ry="2" />
<text  x="595.61" y="287.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (68 samples, 8.52%)</title><rect x="437.3" y="805" width="100.6" height="15.0" fill="rgb(243,183,8)" rx="2" ry="2" />
<text  x="440.34" y="815.5" >&lt;serde_json:..</text>
</g>
<g >
<title>page_fault (1 samples, 0.13%)</title><rect x="1188.5" y="1237" width="1.5" height="15.0" fill="rgb(245,14,42)" rx="2" ry="2" />
<text  x="1191.52" y="1247.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.25%)</title><rect x="1025.9" y="981" width="2.9" height="15.0" fill="rgb(217,167,26)" rx="2" ry="2" />
<text  x="1028.86" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85 samples, 10.65%)</title><rect x="838.1" y="853" width="125.7" height="15.0" fill="rgb(231,34,54)" rx="2" ry="2" />
<text  x="841.07" y="863.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="1185.6" y="517" width="1.4" height="15.0" fill="rgb(238,189,3)" rx="2" ry="2" />
<text  x="1188.56" y="527.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="752.3" y="693" width="1.5" height="15.0" fill="rgb(246,78,22)" rx="2" ry="2" />
<text  x="755.31" y="703.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.13%)</title><rect x="1185.6" y="469" width="1.4" height="15.0" fill="rgb(209,48,53)" rx="2" ry="2" />
<text  x="1188.56" y="479.5" ></text>
</g>
<g >
<title>__libc_recv (35 samples, 4.39%)</title><rect x="327.9" y="677" width="51.8" height="15.0" fill="rgb(215,191,1)" rx="2" ry="2" />
<text  x="330.92" y="687.5" >__lib..</text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.25%)</title><rect x="79.5" y="901" width="3.0" height="15.0" fill="rgb(235,53,35)" rx="2" ry="2" />
<text  x="82.50" y="911.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_number (1 samples, 0.13%)</title><rect x="557.1" y="821" width="1.5" height="15.0" fill="rgb(250,204,51)" rx="2" ry="2" />
<text  x="560.12" y="831.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="733.1" y="725" width="1.5" height="15.0" fill="rgb(250,229,15)" rx="2" ry="2" />
<text  x="736.08" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.13%)</title><rect x="78.0" y="885" width="1.5" height="15.0" fill="rgb(239,220,26)" rx="2" ry="2" />
<text  x="81.02" y="895.5" ></text>
</g>
<g >
<title>__nf_ct_l4proto_find (1 samples, 0.13%)</title><rect x="713.9" y="501" width="1.4" height="15.0" fill="rgb(226,147,32)" rx="2" ry="2" />
<text  x="716.86" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.50%)</title><rect x="765.6" y="821" width="5.9" height="15.0" fill="rgb(208,3,10)" rx="2" ry="2" />
<text  x="768.61" y="831.5" ></text>
</g>
<g >
<title>wait_woken (13 samples, 1.63%)</title><rect x="492.1" y="549" width="19.2" height="15.0" fill="rgb(214,185,23)" rx="2" ry="2" />
<text  x="495.06" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (8 samples, 1.00%)</title><rect x="804.1" y="837" width="11.8" height="15.0" fill="rgb(206,109,50)" rx="2" ry="2" />
<text  x="807.06" y="847.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (2 samples, 0.25%)</title><rect x="765.6" y="693" width="3.0" height="15.0" fill="rgb(235,227,47)" rx="2" ry="2" />
<text  x="768.61" y="703.5" ></text>
</g>
<g >
<title>ip_finish_output (9 samples, 1.13%)</title><rect x="716.8" y="549" width="13.3" height="15.0" fill="rgb(208,45,13)" rx="2" ry="2" />
<text  x="719.82" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="870.6" y="357" width="1.5" height="15.0" fill="rgb(243,27,53)" rx="2" ry="2" />
<text  x="873.60" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.50%)</title><rect x="188.9" y="597" width="5.9" height="15.0" fill="rgb(211,161,52)" rx="2" ry="2" />
<text  x="191.92" y="607.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.13%)</title><rect x="1185.6" y="453" width="1.4" height="15.0" fill="rgb(229,10,35)" rx="2" ry="2" />
<text  x="1188.56" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 1.00%)</title><rect x="150.5" y="709" width="11.8" height="15.0" fill="rgb(246,80,48)" rx="2" ry="2" />
<text  x="153.48" y="719.5" ></text>
</g>
<g >
<title>__sys_sendto (10 samples, 1.25%)</title><rect x="747.9" y="773" width="14.8" height="15.0" fill="rgb(245,220,34)" rx="2" ry="2" />
<text  x="750.87" y="783.5" ></text>
</g>
<g >
<title>sock_zerocopy_put (1 samples, 0.13%)</title><rect x="844.0" y="741" width="1.5" height="15.0" fill="rgb(215,214,28)" rx="2" ry="2" />
<text  x="846.98" y="751.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.13%)</title><rect x="63.2" y="965" width="1.5" height="15.0" fill="rgb(239,150,41)" rx="2" ry="2" />
<text  x="66.23" y="975.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.25%)</title><rect x="511.3" y="501" width="2.9" height="15.0" fill="rgb(226,184,54)" rx="2" ry="2" />
<text  x="514.28" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::LoopState&lt;C,B&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="106.1" y="949" width="1.5" height="15.0" fill="rgb(211,129,40)" rx="2" ry="2" />
<text  x="109.12" y="959.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.13%)</title><rect x="517.2" y="517" width="1.5" height="15.0" fill="rgb(220,117,19)" rx="2" ry="2" />
<text  x="520.19" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="705.0" y="613" width="1.5" height="15.0" fill="rgb(212,114,13)" rx="2" ry="2" />
<text  x="707.99" y="623.5" ></text>
</g>
<g >
<title>sock_sendmsg (10 samples, 1.25%)</title><rect x="747.9" y="757" width="14.8" height="15.0" fill="rgb(232,76,45)" rx="2" ry="2" />
<text  x="750.87" y="767.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.25%)</title><rect x="849.9" y="725" width="3.0" height="15.0" fill="rgb(216,213,9)" rx="2" ry="2" />
<text  x="852.90" y="735.5" ></text>
</g>
<g >
<title>core::alloc::Layout::array (1 samples, 0.13%)</title><rect x="103.2" y="901" width="1.4" height="15.0" fill="rgb(223,228,52)" rx="2" ry="2" />
<text  x="106.16" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (85 samples, 10.65%)</title><rect x="838.1" y="837" width="125.7" height="15.0" fill="rgb(245,105,47)" rx="2" ry="2" />
<text  x="841.07" y="847.5" >do_syscall_64</text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.13%)</title><rect x="98.7" y="869" width="1.5" height="15.0" fill="rgb(214,61,28)" rx="2" ry="2" />
<text  x="101.72" y="879.5" ></text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="196.3" y="853" width="3.0" height="15.0" fill="rgb(225,15,14)" rx="2" ry="2" />
<text  x="199.32" y="863.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (6 samples, 0.75%)</title><rect x="762.7" y="901" width="8.8" height="15.0" fill="rgb(252,210,38)" rx="2" ry="2" />
<text  x="765.66" y="911.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.25%)</title><rect x="359.0" y="485" width="2.9" height="15.0" fill="rgb(254,204,31)" rx="2" ry="2" />
<text  x="361.97" y="495.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::settings::parse_ips (1 samples, 0.13%)</title><rect x="1028.8" y="1029" width="1.5" height="15.0" fill="rgb(248,98,5)" rx="2" ry="2" />
<text  x="1031.82" y="1039.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.38%)</title><rect x="676.9" y="645" width="4.4" height="15.0" fill="rgb(229,224,40)" rx="2" ry="2" />
<text  x="679.89" y="655.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.13%)</title><rect x="770.1" y="709" width="1.4" height="15.0" fill="rgb(219,216,0)" rx="2" ry="2" />
<text  x="773.05" y="719.5" ></text>
</g>
<g >
<title>_start (126 samples, 15.79%)</title><rect x="999.2" y="1237" width="186.4" height="15.0" fill="rgb(249,175,30)" rx="2" ry="2" />
<text  x="1002.25" y="1247.5" >_start</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (52 samples, 6.52%)</title><rect x="449.2" y="741" width="76.9" height="15.0" fill="rgb(242,45,40)" rx="2" ry="2" />
<text  x="452.17" y="751.5" >std::sys..</text>
</g>
<g >
<title>mmput (1 samples, 0.13%)</title><rect x="1187.0" y="1157" width="1.5" height="15.0" fill="rgb(254,135,21)" rx="2" ry="2" />
<text  x="1190.04" y="1167.5" ></text>
</g>
<g >
<title>nom::bytes::complete::is_a::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h225a093286ba594c (1 samples, 0.13%)</title><rect x="994.8" y="917" width="1.5" height="15.0" fill="rgb(230,91,19)" rx="2" ry="2" />
<text  x="997.81" y="927.5" ></text>
</g>
<g >
<title>__sysconf (1 samples, 0.13%)</title><rect x="1184.1" y="1125" width="1.5" height="15.0" fill="rgb(235,85,29)" rx="2" ry="2" />
<text  x="1187.09" y="1135.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.13%)</title><rect x="1184.1" y="1109" width="1.5" height="15.0" fill="rgb(224,157,19)" rx="2" ry="2" />
<text  x="1187.09" y="1119.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="672.5" y="661" width="1.4" height="15.0" fill="rgb(242,66,25)" rx="2" ry="2" />
<text  x="675.46" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="996.3" y="1013" width="1.5" height="15.0" fill="rgb(248,24,24)" rx="2" ry="2" />
<text  x="999.29" y="1023.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (1 samples, 0.13%)</title><rect x="969.7" y="837" width="1.5" height="15.0" fill="rgb(244,189,29)" rx="2" ry="2" />
<text  x="972.67" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="180.1" y="597" width="1.4" height="15.0" fill="rgb(228,67,25)" rx="2" ry="2" />
<text  x="183.05" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.13%)</title><rect x="1009.6" y="933" width="1.5" height="15.0" fill="rgb(222,12,47)" rx="2" ry="2" />
<text  x="1012.60" y="943.5" ></text>
</g>
<g >
<title>process_backlog (5 samples, 0.63%)</title><rect x="722.7" y="437" width="7.4" height="15.0" fill="rgb(228,10,30)" rx="2" ry="2" />
<text  x="725.73" y="447.5" ></text>
</g>
<g >
<title>core::alloc::Layout::new (1 samples, 0.13%)</title><rect x="299.8" y="725" width="1.5" height="15.0" fill="rgb(233,181,45)" rx="2" ry="2" />
<text  x="302.82" y="735.5" ></text>
</g>
<g >
<title>nf_hook_slow (3 samples, 0.38%)</title><rect x="860.3" y="597" width="4.4" height="15.0" fill="rgb(234,132,40)" rx="2" ry="2" />
<text  x="863.25" y="607.5" ></text>
</g>
<g >
<title>config::source::Source::collect_to (1 samples, 0.13%)</title><rect x="994.8" y="1157" width="1.5" height="15.0" fill="rgb(245,225,26)" rx="2" ry="2" />
<text  x="997.81" y="1167.5" ></text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.25%)</title><rect x="605.9" y="181" width="3.0" height="15.0" fill="rgb(224,50,50)" rx="2" ry="2" />
<text  x="608.91" y="191.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (5 samples, 0.63%)</title><rect x="187.4" y="741" width="7.4" height="15.0" fill="rgb(239,28,52)" rx="2" ry="2" />
<text  x="190.44" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="736.0" y="885" width="1.5" height="15.0" fill="rgb(207,87,22)" rx="2" ry="2" />
<text  x="739.04" y="895.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (74 samples, 9.27%)</title><rect x="628.1" y="949" width="109.4" height="15.0" fill="rgb(211,119,50)" rx="2" ry="2" />
<text  x="631.10" y="959.5" >serde_json::d..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 3.01%)</title><rect x="344.2" y="661" width="35.5" height="15.0" fill="rgb(246,116,47)" rx="2" ry="2" />
<text  x="347.19" y="671.5" >ent..</text>
</g>
<g >
<title>alloc::alloc::alloc (3 samples, 0.38%)</title><rect x="165.3" y="645" width="4.4" height="15.0" fill="rgb(223,54,14)" rx="2" ry="2" />
<text  x="168.26" y="655.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="375.2" y="565" width="1.5" height="15.0" fill="rgb(244,51,52)" rx="2" ry="2" />
<text  x="378.24" y="575.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.13%)</title><rect x="943.1" y="485" width="1.4" height="15.0" fill="rgb(227,63,31)" rx="2" ry="2" />
<text  x="946.06" y="495.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::settings::parse_settings (1 samples, 0.13%)</title><rect x="1028.8" y="1045" width="1.5" height="15.0" fill="rgb(238,18,1)" rx="2" ry="2" />
<text  x="1031.82" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::truncate (19 samples, 2.38%)</title><rect x="403.3" y="821" width="28.1" height="15.0" fill="rgb(205,24,15)" rx="2" ry="2" />
<text  x="406.33" y="831.5" >a..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.25%)</title><rect x="801.1" y="837" width="3.0" height="15.0" fill="rgb(249,1,36)" rx="2" ry="2" />
<text  x="804.10" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (2 samples, 0.25%)</title><rect x="1080.6" y="981" width="2.9" height="15.0" fill="rgb(245,168,35)" rx="2" ry="2" />
<text  x="1083.58" y="991.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.25%)</title><rect x="1074.7" y="997" width="2.9" height="15.0" fill="rgb(253,44,48)" rx="2" ry="2" />
<text  x="1077.66" y="1007.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="814.4" y="709" width="1.5" height="15.0" fill="rgb(241,184,21)" rx="2" ry="2" />
<text  x="817.41" y="719.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.13%)</title><rect x="960.8" y="773" width="1.5" height="15.0" fill="rgb(244,138,10)" rx="2" ry="2" />
<text  x="963.80" y="783.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.13%)</title><rect x="33.7" y="677" width="1.4" height="15.0" fill="rgb(229,170,3)" rx="2" ry="2" />
<text  x="36.66" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (84 samples, 10.53%)</title><rect x="839.5" y="821" width="124.3" height="15.0" fill="rgb(216,224,8)" rx="2" ry="2" />
<text  x="842.55" y="831.5" >__x64_sys_sendto</text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (1 samples, 0.13%)</title><rect x="555.6" y="725" width="1.5" height="15.0" fill="rgb(246,213,52)" rx="2" ry="2" />
<text  x="558.64" y="735.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.13%)</title><rect x="372.3" y="565" width="1.5" height="15.0" fill="rgb(225,16,50)" rx="2" ry="2" />
<text  x="375.28" y="575.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.13%)</title><rect x="81.0" y="805" width="1.5" height="15.0" fill="rgb(231,87,7)" rx="2" ry="2" />
<text  x="83.98" y="815.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::EnumAccess&gt;::variant_seed (231 samples, 28.95%)</title><rect x="202.2" y="917" width="341.6" height="15.0" fill="rgb(217,211,16)" rx="2" ry="2" />
<text  x="205.23" y="927.5" >&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de..</text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 1.75%)</title><rect x="588.2" y="341" width="20.7" height="15.0" fill="rgb(254,60,44)" rx="2" ry="2" />
<text  x="591.17" y="351.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.25%)</title><rect x="619.2" y="757" width="3.0" height="15.0" fill="rgb(211,128,20)" rx="2" ry="2" />
<text  x="622.22" y="767.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (27 samples, 3.38%)</title><rect x="576.3" y="501" width="40.0" height="15.0" fill="rgb(231,147,6)" rx="2" ry="2" />
<text  x="579.34" y="511.5" >__t..</text>
</g>
<g >
<title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="994.8" y="885" width="1.5" height="15.0" fill="rgb(216,111,35)" rx="2" ry="2" />
<text  x="997.81" y="895.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.38%)</title><rect x="410.7" y="757" width="4.5" height="15.0" fill="rgb(220,181,8)" rx="2" ry="2" />
<text  x="413.73" y="767.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (38 samples, 4.76%)</title><rect x="563.0" y="725" width="56.2" height="15.0" fill="rgb(219,162,43)" rx="2" ry="2" />
<text  x="566.03" y="735.5" >std::..</text>
</g>
<g >
<title>__fget (1 samples, 0.13%)</title><rect x="373.8" y="565" width="1.4" height="15.0" fill="rgb(210,211,29)" rx="2" ry="2" />
<text  x="376.76" y="575.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.13%)</title><rect x="980.0" y="741" width="1.5" height="15.0" fill="rgb(224,191,40)" rx="2" ry="2" />
<text  x="983.03" y="751.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (33 samples, 4.14%)</title><rect x="147.5" y="853" width="48.8" height="15.0" fill="rgb(227,181,13)" rx="2" ry="2" />
<text  x="150.52" y="863.5" >&lt;cor..</text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.13%)</title><rect x="542.3" y="597" width="1.5" height="15.0" fill="rgb(245,225,12)" rx="2" ry="2" />
<text  x="545.33" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.13%)</title><rect x="1028.8" y="917" width="1.5" height="15.0" fill="rgb(235,108,2)" rx="2" ry="2" />
<text  x="1031.82" y="927.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.50%)</title><rect x="188.9" y="693" width="5.9" height="15.0" fill="rgb(235,53,4)" rx="2" ry="2" />
<text  x="191.92" y="703.5" ></text>
</g>
<g >
<title>std::fs::metadata (1 samples, 0.13%)</title><rect x="996.3" y="1093" width="1.5" height="15.0" fill="rgb(209,31,34)" rx="2" ry="2" />
<text  x="999.29" y="1103.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.25%)</title><rect x="196.3" y="821" width="3.0" height="15.0" fill="rgb(229,38,48)" rx="2" ry="2" />
<text  x="199.32" y="831.5" ></text>
</g>
<g >
<title>wait_woken (5 samples, 0.63%)</title><rect x="682.8" y="661" width="7.4" height="15.0" fill="rgb(245,57,10)" rx="2" ry="2" />
<text  x="685.81" y="671.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.13%)</title><rect x="826.2" y="917" width="1.5" height="15.0" fill="rgb(238,137,13)" rx="2" ry="2" />
<text  x="829.24" y="927.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (5 samples, 0.63%)</title><rect x="511.3" y="533" width="7.4" height="15.0" fill="rgb(244,19,28)" rx="2" ry="2" />
<text  x="514.28" y="543.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (46 samples, 5.76%)</title><rect x="872.1" y="357" width="68.0" height="15.0" fill="rgb(243,31,30)" rx="2" ry="2" />
<text  x="875.08" y="367.5" >tcp_v4_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="821.8" y="821" width="1.5" height="15.0" fill="rgb(240,44,11)" rx="2" ry="2" />
<text  x="824.80" y="831.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (14 samples, 1.75%)</title><rect x="588.2" y="357" width="20.7" height="15.0" fill="rgb(213,72,1)" rx="2" ry="2" />
<text  x="591.17" y="367.5" ></text>
</g>
<g >
<title>ip_finish_output2 (16 samples, 2.01%)</title><rect x="588.2" y="405" width="23.6" height="15.0" fill="rgb(246,108,19)" rx="2" ry="2" />
<text  x="591.17" y="415.5" >i..</text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="1008.1" y="1029" width="3.0" height="15.0" fill="rgb(231,122,6)" rx="2" ry="2" />
<text  x="1011.12" y="1039.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (4 samples, 0.50%)</title><rect x="357.5" y="517" width="5.9" height="15.0" fill="rgb(250,103,42)" rx="2" ry="2" />
<text  x="360.49" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (53 samples, 6.64%)</title><rect x="656.2" y="773" width="78.4" height="15.0" fill="rgb(231,136,12)" rx="2" ry="2" />
<text  x="659.19" y="783.5" >do_syscal..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.13%)</title><rect x="1185.6" y="373" width="1.4" height="15.0" fill="rgb(240,78,1)" rx="2" ry="2" />
<text  x="1188.56" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (11 samples, 1.38%)</title><rect x="746.4" y="853" width="16.3" height="15.0" fill="rgb(250,223,26)" rx="2" ry="2" />
<text  x="749.39" y="863.5" ></text>
</g>
<g >
<title>ip_rcv (9 samples, 1.13%)</title><rect x="595.6" y="261" width="13.3" height="15.0" fill="rgb(245,167,35)" rx="2" ry="2" />
<text  x="598.56" y="271.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.43 (18 samples, 2.26%)</title><rect x="705.0" y="645" width="26.6" height="15.0" fill="rgb(234,209,39)" rx="2" ry="2" />
<text  x="707.99" y="655.5" >_..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="107.6" y="949" width="1.5" height="15.0" fill="rgb(225,12,2)" rx="2" ry="2" />
<text  x="110.59" y="959.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="826.2" y="837" width="1.5" height="15.0" fill="rgb(254,214,2)" rx="2" ry="2" />
<text  x="829.24" y="847.5" ></text>
</g>
<g >
<title>inet_release (1 samples, 0.13%)</title><rect x="33.7" y="821" width="1.4" height="15.0" fill="rgb(253,40,38)" rx="2" ry="2" />
<text  x="36.66" y="831.5" ></text>
</g>
<g >
<title>core::mem::swap (1 samples, 0.13%)</title><rect x="1022.9" y="1013" width="1.5" height="15.0" fill="rgb(224,153,47)" rx="2" ry="2" />
<text  x="1025.91" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.50%)</title><rect x="983.0" y="837" width="5.9" height="15.0" fill="rgb(218,115,31)" rx="2" ry="2" />
<text  x="985.98" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 1.25%)</title><rect x="20.4" y="981" width="14.7" height="15.0" fill="rgb(205,108,13)" rx="2" ry="2" />
<text  x="23.35" y="991.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.13%)</title><rect x="981.5" y="741" width="1.5" height="15.0" fill="rgb(226,18,35)" rx="2" ry="2" />
<text  x="984.50" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (3 samples, 0.38%)</title><rect x="190.4" y="581" width="4.4" height="15.0" fill="rgb(237,171,21)" rx="2" ry="2" />
<text  x="193.40" y="591.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.13%)</title><rect x="100.2" y="853" width="1.5" height="15.0" fill="rgb(243,200,2)" rx="2" ry="2" />
<text  x="103.20" y="863.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.13%)</title><rect x="280.6" y="693" width="1.5" height="15.0" fill="rgb(238,154,27)" rx="2" ry="2" />
<text  x="283.60" y="703.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.13%)</title><rect x="157.9" y="645" width="1.4" height="15.0" fill="rgb(221,147,30)" rx="2" ry="2" />
<text  x="160.87" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (19 samples, 2.38%)</title><rect x="351.6" y="629" width="28.1" height="15.0" fill="rgb(245,202,36)" rx="2" ry="2" />
<text  x="354.58" y="639.5" >_..</text>
</g>
<g >
<title>tcp_push (66 samples, 8.27%)</title><rect x="857.3" y="725" width="97.6" height="15.0" fill="rgb(254,203,37)" rx="2" ry="2" />
<text  x="860.29" y="735.5" >tcp_push</text>
</g>
<g >
<title>std::panicking::try::do_call (125 samples, 15.66%)</title><rect x="999.2" y="1109" width="184.9" height="15.0" fill="rgb(214,83,36)" rx="2" ry="2" />
<text  x="1002.25" y="1119.5" >std::panicking::try::do_..</text>
</g>
<g >
<title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (4 samples, 0.50%)</title><rect x="255.5" y="725" width="5.9" height="15.0" fill="rgb(206,130,16)" rx="2" ry="2" />
<text  x="258.46" y="735.5" ></text>
</g>
<g >
<title>schedule_timeout (4 samples, 0.50%)</title><rect x="684.3" y="645" width="5.9" height="15.0" fill="rgb(219,190,34)" rx="2" ry="2" />
<text  x="687.29" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (40 samples, 5.01%)</title><rect x="466.9" y="645" width="59.2" height="15.0" fill="rgb(248,86,37)" rx="2" ry="2" />
<text  x="469.92" y="655.5" >__x64_..</text>
</g>
<g >
<title>__libc_send (8 samples, 1.00%)</title><rect x="804.1" y="821" width="11.8" height="15.0" fill="rgb(219,194,8)" rx="2" ry="2" />
<text  x="807.06" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.50%)</title><rect x="983.0" y="853" width="5.9" height="15.0" fill="rgb(210,109,39)" rx="2" ry="2" />
<text  x="985.98" y="863.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.13%)</title><rect x="33.7" y="325" width="1.4" height="15.0" fill="rgb(213,114,36)" rx="2" ry="2" />
<text  x="36.66" y="335.5" ></text>
</g>
<g >
<title>hyperv_vector_handler (1 samples, 0.13%)</title><rect x="57.3" y="869" width="1.5" height="15.0" fill="rgb(240,34,46)" rx="2" ry="2" />
<text  x="60.32" y="879.5" ></text>
</g>
<g >
<title>clone (663 samples, 83.08%)</title><rect x="10.0" y="1237" width="980.4" height="15.0" fill="rgb(227,9,45)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >clone</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h82cb1f78ab605adb (663 samples, 83.08%)</title><rect x="10.0" y="1141" width="980.4" height="15.0" fill="rgb(209,149,0)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h82cb1f78ab605adb</text>
</g>
<g >
<title>tcp_sendmsg_locked (3 samples, 0.38%)</title><rect x="765.6" y="709" width="4.5" height="15.0" fill="rgb(206,207,4)" rx="2" ry="2" />
<text  x="768.61" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.88%)</title><rect x="805.5" y="805" width="10.4" height="15.0" fill="rgb(216,109,35)" rx="2" ry="2" />
<text  x="808.54" y="815.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.13%)</title><rect x="1185.6" y="629" width="1.4" height="15.0" fill="rgb(241,40,3)" rx="2" ry="2" />
<text  x="1188.56" y="639.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.13%)</title><rect x="1028.8" y="949" width="1.5" height="15.0" fill="rgb(214,105,25)" rx="2" ry="2" />
<text  x="1031.82" y="959.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (6 samples, 0.75%)</title><rect x="762.7" y="869" width="8.8" height="15.0" fill="rgb(225,229,36)" rx="2" ry="2" />
<text  x="765.66" y="879.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (2 samples, 0.25%)</title><rect x="963.8" y="901" width="2.9" height="15.0" fill="rgb(231,153,4)" rx="2" ry="2" />
<text  x="966.76" y="911.5" ></text>
</g>
<g >
<title>iov_iter_init (1 samples, 0.13%)</title><rect x="353.1" y="581" width="1.4" height="15.0" fill="rgb(230,87,54)" rx="2" ry="2" />
<text  x="356.06" y="591.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.13%)</title><rect x="116.5" y="933" width="1.4" height="15.0" fill="rgb(245,42,49)" rx="2" ry="2" />
<text  x="119.47" y="943.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.25%)</title><rect x="196.3" y="757" width="3.0" height="15.0" fill="rgb(254,168,22)" rx="2" ry="2" />
<text  x="199.32" y="767.5" ></text>
</g>
<g >
<title>core::time::Duration::from_millis (2 samples, 0.25%)</title><rect x="1019.9" y="1045" width="3.0" height="15.0" fill="rgb(235,218,0)" rx="2" ry="2" />
<text  x="1022.95" y="1055.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (26 samples, 3.26%)</title><rect x="576.3" y="469" width="38.5" height="15.0" fill="rgb(228,100,42)" rx="2" ry="2" />
<text  x="579.34" y="479.5" >__i..</text>
</g>
<g >
<title>__libc_send (4 samples, 0.50%)</title><rect x="817.4" y="837" width="5.9" height="15.0" fill="rgb(240,127,44)" rx="2" ry="2" />
<text  x="820.37" y="847.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.25%)</title><rect x="169.7" y="645" width="3.0" height="15.0" fill="rgb(231,217,2)" rx="2" ry="2" />
<text  x="172.70" y="655.5" ></text>
</g>
<g >
<title>[listener (663 samples, 83.08%)</title><rect x="10.0" y="1253" width="980.4" height="15.0" fill="rgb(219,17,40)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >[listener</text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.13%)</title><rect x="514.2" y="517" width="1.5" height="15.0" fill="rgb(213,25,49)" rx="2" ry="2" />
<text  x="517.24" y="527.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.13%)</title><rect x="60.3" y="901" width="1.5" height="15.0" fill="rgb(236,30,29)" rx="2" ry="2" />
<text  x="63.28" y="911.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.13%)</title><rect x="33.7" y="917" width="1.4" height="15.0" fill="rgb(212,106,46)" rx="2" ry="2" />
<text  x="36.66" y="927.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.13%)</title><rect x="171.2" y="629" width="1.5" height="15.0" fill="rgb(248,17,20)" rx="2" ry="2" />
<text  x="174.18" y="639.5" ></text>
</g>
<g >
<title>start_thread (663 samples, 83.08%)</title><rect x="10.0" y="1221" width="980.4" height="15.0" fill="rgb(217,104,6)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >start_thread</text>
</g>
<g >
<title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (663 samples, 83.08%)</title><rect x="10.0" y="1061" width="980.4" height="15.0" fill="rgb(221,140,32)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (36 samples, 4.51%)</title><rect x="327.9" y="693" width="53.3" height="15.0" fill="rgb(229,205,42)" rx="2" ry="2" />
<text  x="330.92" y="703.5" >std::..</text>
</g>
<g >
<title>std::io::Write::write_all (11 samples, 1.38%)</title><rect x="746.4" y="885" width="16.3" height="15.0" fill="rgb(239,142,11)" rx="2" ry="2" />
<text  x="749.39" y="895.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.13%)</title><rect x="600.0" y="117" width="1.5" height="15.0" fill="rgb(234,121,20)" rx="2" ry="2" />
<text  x="603.00" y="127.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (53 samples, 6.64%)</title><rect x="546.8" y="885" width="78.3" height="15.0" fill="rgb(237,55,33)" rx="2" ry="2" />
<text  x="549.77" y="895.5" >serde::de..</text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.25%)</title><rect x="941.6" y="549" width="2.9" height="15.0" fill="rgb(221,153,37)" rx="2" ry="2" />
<text  x="944.58" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::amortized_new_size (1 samples, 0.13%)</title><rect x="101.7" y="901" width="1.5" height="15.0" fill="rgb(242,182,33)" rx="2" ry="2" />
<text  x="104.68" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.13%)</title><rect x="1185.6" y="405" width="1.4" height="15.0" fill="rgb(241,164,43)" rx="2" ry="2" />
<text  x="1188.56" y="415.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::done (1 samples, 0.13%)</title><rect x="58.8" y="933" width="1.5" height="15.0" fill="rgb(224,163,51)" rx="2" ry="2" />
<text  x="61.80" y="943.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.13%)</title><rect x="134.2" y="901" width="1.5" height="15.0" fill="rgb(232,95,53)" rx="2" ry="2" />
<text  x="137.21" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 5.26%)</title><rect x="464.0" y="677" width="62.1" height="15.0" fill="rgb(244,31,45)" rx="2" ry="2" />
<text  x="466.96" y="687.5" >entry_..</text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 4.76%)</title><rect x="563.0" y="773" width="56.2" height="15.0" fill="rgb(249,209,13)" rx="2" ry="2" />
<text  x="566.03" y="783.5" >&lt;serd..</text>
</g>
<g >
<title>config::source::Source::collect_to (1 samples, 0.13%)</title><rect x="994.8" y="1189" width="1.5" height="15.0" fill="rgb(242,136,26)" rx="2" ry="2" />
<text  x="997.81" y="1199.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.13%)</title><rect x="58.8" y="917" width="1.5" height="15.0" fill="rgb(216,223,4)" rx="2" ry="2" />
<text  x="61.80" y="927.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.25%)</title><rect x="112.0" y="901" width="3.0" height="15.0" fill="rgb(206,211,48)" rx="2" ry="2" />
<text  x="115.03" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.13%)</title><rect x="33.7" y="533" width="1.4" height="15.0" fill="rgb(243,147,11)" rx="2" ry="2" />
<text  x="36.66" y="543.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.13%)</title><rect x="675.4" y="629" width="1.5" height="15.0" fill="rgb(240,50,47)" rx="2" ry="2" />
<text  x="678.41" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (51 samples, 6.39%)</title><rect x="659.1" y="757" width="75.5" height="15.0" fill="rgb(242,183,8)" rx="2" ry="2" />
<text  x="662.15" y="767.5" >__x64_sy..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.13%)</title><rect x="33.7" y="901" width="1.4" height="15.0" fill="rgb(229,42,29)" rx="2" ry="2" />
<text  x="36.66" y="911.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.25%)</title><rect x="291.0" y="725" width="2.9" height="15.0" fill="rgb(214,111,29)" rx="2" ry="2" />
<text  x="293.95" y="735.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="33.7" y="629" width="1.4" height="15.0" fill="rgb(248,148,54)" rx="2" ry="2" />
<text  x="36.66" y="639.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.25%)</title><rect x="521.6" y="565" width="3.0" height="15.0" fill="rgb(215,71,52)" rx="2" ry="2" />
<text  x="524.63" y="575.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.25%)</title><rect x="951.9" y="629" width="3.0" height="15.0" fill="rgb(215,25,14)" rx="2" ry="2" />
<text  x="954.93" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 1.00%)</title><rect x="150.5" y="693" width="11.8" height="15.0" fill="rgb(205,29,28)" rx="2" ry="2" />
<text  x="153.48" y="703.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (1 samples, 0.13%)</title><rect x="938.6" y="309" width="1.5" height="15.0" fill="rgb(214,128,49)" rx="2" ry="2" />
<text  x="941.62" y="319.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (1 samples, 0.13%)</title><rect x="1185.6" y="981" width="1.4" height="15.0" fill="rgb(251,152,0)" rx="2" ry="2" />
<text  x="1188.56" y="991.5" ></text>
</g>
<g >
<title>core::mem::take (10 samples, 1.25%)</title><rect x="385.6" y="757" width="14.8" height="15.0" fill="rgb(233,154,54)" rx="2" ry="2" />
<text  x="388.59" y="767.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.13%)</title><rect x="943.1" y="501" width="1.4" height="15.0" fill="rgb(217,184,28)" rx="2" ry="2" />
<text  x="946.06" y="511.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (2 samples, 0.25%)</title><rect x="619.2" y="805" width="3.0" height="15.0" fill="rgb(233,213,15)" rx="2" ry="2" />
<text  x="622.22" y="815.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.13%)</title><rect x="761.2" y="693" width="1.5" height="15.0" fill="rgb(214,32,29)" rx="2" ry="2" />
<text  x="764.18" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (36 samples, 4.51%)</title><rect x="327.9" y="709" width="53.3" height="15.0" fill="rgb(237,76,17)" rx="2" ry="2" />
<text  x="330.92" y="719.5" >std::..</text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.25%)</title><rect x="854.3" y="709" width="3.0" height="15.0" fill="rgb(218,87,14)" rx="2" ry="2" />
<text  x="857.34" y="719.5" ></text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (9 samples, 1.13%)</title><rect x="183.0" y="837" width="13.3" height="15.0" fill="rgb(215,168,32)" rx="2" ry="2" />
<text  x="186.01" y="847.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.13%)</title><rect x="733.1" y="677" width="1.5" height="15.0" fill="rgb(235,50,40)" rx="2" ry="2" />
<text  x="736.08" y="687.5" ></text>
</g>
<g >
<title>main (126 samples, 15.79%)</title><rect x="999.2" y="1205" width="186.4" height="15.0" fill="rgb(228,163,35)" rx="2" ry="2" />
<text  x="1002.25" y="1215.5" >main</text>
</g>
<g >
<title>sock_def_readable (43 samples, 5.39%)</title><rect x="875.0" y="309" width="63.6" height="15.0" fill="rgb(250,74,38)" rx="2" ry="2" />
<text  x="878.04" y="319.5" >sock_d..</text>
</g>
<g >
<title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (23 samples, 2.88%)</title><rect x="149.0" y="837" width="34.0" height="15.0" fill="rgb(243,114,2)" rx="2" ry="2" />
<text  x="152.00" y="847.5" >se..</text>
</g>
<g >
<title>ip_rcv (5 samples, 0.63%)</title><rect x="722.7" y="389" width="7.4" height="15.0" fill="rgb(244,20,48)" rx="2" ry="2" />
<text  x="725.73" y="399.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.13%)</title><rect x="1184.1" y="1029" width="1.5" height="15.0" fill="rgb(229,65,0)" rx="2" ry="2" />
<text  x="1187.09" y="1039.5" ></text>
</g>
<g >
<title>core::cmp::max_by (2 samples, 0.25%)</title><rect x="288.0" y="693" width="3.0" height="15.0" fill="rgb(254,18,30)" rx="2" ry="2" />
<text  x="290.99" y="703.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4 samples, 0.50%)</title><rect x="722.7" y="325" width="5.9" height="15.0" fill="rgb(205,0,16)" rx="2" ry="2" />
<text  x="725.73" y="335.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.13%)</title><rect x="33.7" y="373" width="1.4" height="15.0" fill="rgb(229,109,20)" rx="2" ry="2" />
<text  x="36.66" y="383.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::next_char (1 samples, 0.13%)</title><rect x="555.6" y="821" width="1.5" height="15.0" fill="rgb(224,227,20)" rx="2" ry="2" />
<text  x="558.64" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (1 samples, 0.13%)</title><rect x="29.2" y="933" width="1.5" height="15.0" fill="rgb(210,102,23)" rx="2" ry="2" />
<text  x="32.22" y="943.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (47 samples, 5.89%)</title><rect x="870.6" y="453" width="69.5" height="15.0" fill="rgb(238,197,37)" rx="2" ry="2" />
<text  x="873.60" y="463.5" >__netif..</text>
</g>
<g >
<title>sk_page_frag_refill (1 samples, 0.13%)</title><rect x="812.9" y="677" width="1.5" height="15.0" fill="rgb(207,131,47)" rx="2" ry="2" />
<text  x="815.93" y="687.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.13%)</title><rect x="33.7" y="309" width="1.4" height="15.0" fill="rgb(216,223,42)" rx="2" ry="2" />
<text  x="36.66" y="319.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="694.6" y="613" width="1.5" height="15.0" fill="rgb(245,163,21)" rx="2" ry="2" />
<text  x="697.64" y="623.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (1 samples, 0.13%)</title><rect x="33.7" y="613" width="1.4" height="15.0" fill="rgb(234,51,12)" rx="2" ry="2" />
<text  x="36.66" y="623.5" ></text>
</g>
<g >
<title>realloc (4 samples, 0.50%)</title><rect x="276.2" y="709" width="5.9" height="15.0" fill="rgb(236,35,25)" rx="2" ry="2" />
<text  x="279.17" y="719.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.13%)</title><rect x="761.2" y="677" width="1.5" height="15.0" fill="rgb(225,222,14)" rx="2" ry="2" />
<text  x="764.18" y="687.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.13%)</title><rect x="808.5" y="693" width="1.5" height="15.0" fill="rgb(212,144,40)" rx="2" ry="2" />
<text  x="811.50" y="703.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="960.8" y="789" width="1.5" height="15.0" fill="rgb(225,95,20)" rx="2" ry="2" />
<text  x="963.80" y="799.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (69 samples, 8.65%)</title><rect x="435.9" y="821" width="102.0" height="15.0" fill="rgb(207,43,43)" rx="2" ry="2" />
<text  x="438.86" y="831.5" >serde_json::..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.13%)</title><rect x="33.7" y="485" width="1.4" height="15.0" fill="rgb(210,47,48)" rx="2" ry="2" />
<text  x="36.66" y="495.5" ></text>
</g>
<g >
<title>inet_recvmsg (8 samples, 1.00%)</title><rect x="356.0" y="581" width="11.8" height="15.0" fill="rgb(208,102,52)" rx="2" ry="2" />
<text  x="359.02" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (37 samples, 4.64%)</title><rect x="564.5" y="645" width="54.7" height="15.0" fill="rgb(224,206,27)" rx="2" ry="2" />
<text  x="567.51" y="655.5" >do_sy..</text>
</g>
<g >
<title>__sys_sendto (1 samples, 0.13%)</title><rect x="821.8" y="773" width="1.5" height="15.0" fill="rgb(206,144,52)" rx="2" ry="2" />
<text  x="824.80" y="783.5" ></text>
</g>
<g >
<title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.13%)</title><rect x="994.8" y="1013" width="1.5" height="15.0" fill="rgb(230,101,54)" rx="2" ry="2" />
<text  x="997.81" y="1023.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.13%)</title><rect x="1185.6" y="1029" width="1.4" height="15.0" fill="rgb(252,15,23)" rx="2" ry="2" />
<text  x="1188.56" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_read (1 samples, 0.13%)</title><rect x="997.8" y="1061" width="1.4" height="15.0" fill="rgb(243,28,33)" rx="2" ry="2" />
<text  x="1000.77" y="1071.5" ></text>
</g>
<g >
<title>ip_finish_output (18 samples, 2.26%)</title><rect x="585.2" y="421" width="26.6" height="15.0" fill="rgb(226,136,9)" rx="2" ry="2" />
<text  x="588.21" y="431.5" >i..</text>
</g>
<g >
<title>std::sys::unix::thread::Thread::new::thread_start (663 samples, 83.08%)</title><rect x="10.0" y="1205" width="980.4" height="15.0" fill="rgb(222,4,25)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >std::sys::unix::thread::Thread::new::thread_start</text>
</g>
<g >
<title>____fput (1 samples, 0.13%)</title><rect x="33.7" y="885" width="1.4" height="15.0" fill="rgb(208,22,30)" rx="2" ry="2" />
<text  x="36.66" y="895.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.13%)</title><rect x="614.8" y="469" width="1.5" height="15.0" fill="rgb(232,73,5)" rx="2" ry="2" />
<text  x="617.79" y="479.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.25%)</title><rect x="608.9" y="389" width="2.9" height="15.0" fill="rgb(212,106,34)" rx="2" ry="2" />
<text  x="611.87" y="399.5" ></text>
</g>
<g >
<title>std::panicking::try (1 samples, 0.13%)</title><rect x="1185.6" y="1109" width="1.4" height="15.0" fill="rgb(218,187,5)" rx="2" ry="2" />
<text  x="1188.56" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (2 samples, 0.25%)</title><rect x="980.0" y="821" width="3.0" height="15.0" fill="rgb(222,69,1)" rx="2" ry="2" />
<text  x="983.03" y="831.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.13%)</title><rect x="681.3" y="661" width="1.5" height="15.0" fill="rgb(248,124,13)" rx="2" ry="2" />
<text  x="684.33" y="671.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.13%)</title><rect x="753.8" y="677" width="1.5" height="15.0" fill="rgb(231,171,17)" rx="2" ry="2" />
<text  x="756.78" y="687.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.13%)</title><rect x="669.5" y="645" width="1.5" height="15.0" fill="rgb(224,74,53)" rx="2" ry="2" />
<text  x="672.50" y="655.5" ></text>
</g>
<g >
<title>core::str::run_utf8_validation (2 samples, 0.25%)</title><rect x="319.0" y="757" width="3.0" height="15.0" fill="rgb(251,160,17)" rx="2" ry="2" />
<text  x="322.05" y="767.5" ></text>
</g>
<g >
<title>inet_sendmsg (3 samples, 0.38%)</title><rect x="765.6" y="741" width="4.5" height="15.0" fill="rgb(209,205,52)" rx="2" ry="2" />
<text  x="768.61" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (1 samples, 0.13%)</title><rect x="824.8" y="837" width="1.4" height="15.0" fill="rgb(225,179,8)" rx="2" ry="2" />
<text  x="827.76" y="847.5" ></text>
</g>
<g >
<title>core::mem::take (1 samples, 0.13%)</title><rect x="555.6" y="773" width="1.5" height="15.0" fill="rgb(249,52,21)" rx="2" ry="2" />
<text  x="558.64" y="783.5" ></text>
</g>
<g >
<title>__libc_start_main (126 samples, 15.79%)</title><rect x="999.2" y="1221" width="186.4" height="15.0" fill="rgb(221,74,15)" rx="2" ry="2" />
<text  x="1002.25" y="1231.5" >__libc_start_main</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.25%)</title><rect x="540.9" y="709" width="2.9" height="15.0" fill="rgb(216,105,31)" rx="2" ry="2" />
<text  x="543.85" y="719.5" ></text>
</g>
<g >
<title>tcp_recvmsg (30 samples, 3.76%)</title><rect x="477.3" y="581" width="44.3" height="15.0" fill="rgb(238,59,43)" rx="2" ry="2" />
<text  x="480.27" y="591.5" >tcp_..</text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::Command&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (8 samples, 1.00%)</title><rect x="215.5" y="837" width="11.9" height="15.0" fill="rgb(248,18,40)" rx="2" ry="2" />
<text  x="218.54" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="620.7" y="661" width="1.5" height="15.0" fill="rgb(230,197,12)" rx="2" ry="2" />
<text  x="623.70" y="671.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.13%)</title><rect x="514.2" y="501" width="1.5" height="15.0" fill="rgb(250,72,23)" rx="2" ry="2" />
<text  x="517.24" y="511.5" ></text>
</g>
<g >
<title>__netif_receive_skb (11 samples, 1.38%)</title><rect x="592.6" y="293" width="16.3" height="15.0" fill="rgb(212,176,41)" rx="2" ry="2" />
<text  x="595.61" y="303.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.38%)</title><rect x="416.6" y="773" width="4.5" height="15.0" fill="rgb(230,51,24)" rx="2" ry="2" />
<text  x="419.64" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_value (7 samples, 0.88%)</title><rect x="972.6" y="933" width="10.4" height="15.0" fill="rgb(222,33,14)" rx="2" ry="2" />
<text  x="975.63" y="943.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.13%)</title><rect x="33.7" y="581" width="1.4" height="15.0" fill="rgb(211,190,42)" rx="2" ry="2" />
<text  x="36.66" y="591.5" ></text>
</g>
<g >
<title>__netif_receive_skb (47 samples, 5.89%)</title><rect x="870.6" y="469" width="69.5" height="15.0" fill="rgb(207,202,38)" rx="2" ry="2" />
<text  x="873.60" y="479.5" >__netif..</text>
</g>
<g >
<title>__fdget (1 samples, 0.13%)</title><rect x="617.7" y="581" width="1.5" height="15.0" fill="rgb(222,63,49)" rx="2" ry="2" />
<text  x="620.74" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.25%)</title><rect x="30.7" y="949" width="3.0" height="15.0" fill="rgb(232,110,42)" rx="2" ry="2" />
<text  x="33.70" y="959.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.25%)</title><rect x="605.9" y="213" width="3.0" height="15.0" fill="rgb(210,6,54)" rx="2" ry="2" />
<text  x="608.91" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.50%)</title><rect x="765.6" y="805" width="5.9" height="15.0" fill="rgb(222,53,12)" rx="2" ry="2" />
<text  x="768.61" y="815.5" ></text>
</g>
<g >
<title>server::main::_$u7b$$u7b$closure$u7d$$u7d$::h91108ce10043fd53 (663 samples, 83.08%)</title><rect x="10.0" y="1013" width="980.4" height="15.0" fill="rgb(231,49,12)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >server::main::_$u7b$$u7b$closure$u7d$$u7d$::h91108ce10043fd53</text>
</g>
<g >
<title>config::path::parser::from_str (1 samples, 0.13%)</title><rect x="994.8" y="1125" width="1.5" height="15.0" fill="rgb(238,95,44)" rx="2" ry="2" />
<text  x="997.81" y="1135.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="824.8" y="869" width="1.4" height="15.0" fill="rgb(227,215,44)" rx="2" ry="2" />
<text  x="827.76" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg (79 samples, 9.90%)</title><rect x="841.0" y="757" width="116.8" height="15.0" fill="rgb(251,140,21)" rx="2" ry="2" />
<text  x="844.03" y="767.5" >tcp_sendmsg</text>
</g>
<g >
<title>walk_component (1 samples, 0.13%)</title><rect x="996.3" y="869" width="1.5" height="15.0" fill="rgb(234,125,43)" rx="2" ry="2" />
<text  x="999.29" y="879.5" ></text>
</g>
<g >
<title>core::alloc::Layout::array (9 samples, 1.13%)</title><rect x="296.9" y="741" width="13.3" height="15.0" fill="rgb(227,102,7)" rx="2" ry="2" />
<text  x="299.87" y="751.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::SlicePartialEq&lt;A&gt;&gt;::equal (4 samples, 0.50%)</title><rect x="221.5" y="773" width="5.9" height="15.0" fill="rgb(253,64,50)" rx="2" ry="2" />
<text  x="224.45" y="783.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.50%)</title><rect x="966.7" y="885" width="5.9" height="15.0" fill="rgb(239,71,9)" rx="2" ry="2" />
<text  x="969.72" y="895.5" ></text>
</g>
<g >
<title>nf_conntrack_in (3 samples, 0.38%)</title><rect x="579.3" y="389" width="4.4" height="15.0" fill="rgb(209,10,6)" rx="2" ry="2" />
<text  x="582.30" y="399.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.13%)</title><rect x="980.0" y="789" width="1.5" height="15.0" fill="rgb(234,111,53)" rx="2" ry="2" />
<text  x="983.03" y="799.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.13%)</title><rect x="1022.9" y="1029" width="1.5" height="15.0" fill="rgb(250,114,8)" rx="2" ry="2" />
<text  x="1025.91" y="1039.5" ></text>
</g>
<g >
<title>tcp_write_xmit (65 samples, 8.15%)</title><rect x="858.8" y="693" width="96.1" height="15.0" fill="rgb(248,88,5)" rx="2" ry="2" />
<text  x="861.77" y="703.5" >tcp_write_x..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (53 samples, 6.64%)</title><rect x="546.8" y="869" width="78.3" height="15.0" fill="rgb(221,18,2)" rx="2" ry="2" />
<text  x="549.77" y="879.5" >&lt;&amp;mut ser..</text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.13%)</title><rect x="821.8" y="693" width="1.5" height="15.0" fill="rgb(223,180,4)" rx="2" ry="2" />
<text  x="824.80" y="703.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (62 samples, 7.77%)</title><rect x="642.9" y="821" width="91.7" height="15.0" fill="rgb(245,14,38)" rx="2" ry="2" />
<text  x="645.88" y="831.5" >std::sys::..</text>
</g>
<g >
<title>tcp_rcv_space_adjust (2 samples, 0.25%)</title><rect x="474.3" y="581" width="3.0" height="15.0" fill="rgb(253,144,19)" rx="2" ry="2" />
<text  x="477.31" y="591.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4 samples, 0.50%)</title><rect x="600.0" y="149" width="5.9" height="15.0" fill="rgb(211,86,46)" rx="2" ry="2" />
<text  x="603.00" y="159.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.38%)</title><rect x="799.6" y="885" width="4.5" height="15.0" fill="rgb(247,89,44)" rx="2" ry="2" />
<text  x="802.62" y="895.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.25%)</title><rect x="669.5" y="677" width="3.0" height="15.0" fill="rgb(250,179,13)" rx="2" ry="2" />
<text  x="672.50" y="687.5" ></text>
</g>
<g >
<title>server (135 samples, 16.92%)</title><rect x="990.4" y="1253" width="199.6" height="15.0" fill="rgb(213,174,21)" rx="2" ry="2" />
<text  x="993.38" y="1263.5" >server</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.25%)</title><rect x="55.8" y="917" width="3.0" height="15.0" fill="rgb(253,151,0)" rx="2" ry="2" />
<text  x="58.84" y="927.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.13%)</title><rect x="672.5" y="677" width="1.4" height="15.0" fill="rgb(210,76,0)" rx="2" ry="2" />
<text  x="675.46" y="687.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="193.4" y="549" width="1.4" height="15.0" fill="rgb(241,33,41)" rx="2" ry="2" />
<text  x="196.36" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="1187.0" y="1237" width="1.5" height="15.0" fill="rgb(240,151,11)" rx="2" ry="2" />
<text  x="1190.04" y="1247.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (4 samples, 0.50%)</title><rect x="1101.3" y="933" width="5.9" height="15.0" fill="rgb(209,65,20)" rx="2" ry="2" />
<text  x="1104.28" y="943.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.25%)</title><rect x="619.2" y="693" width="3.0" height="15.0" fill="rgb(231,107,23)" rx="2" ry="2" />
<text  x="622.22" y="703.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::VariantAccess&lt;R&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (55 samples, 6.89%)</title><rect x="543.8" y="917" width="81.3" height="15.0" fill="rgb(246,170,37)" rx="2" ry="2" />
<text  x="546.81" y="927.5" >&lt;serde_js..</text>
</g>
<g >
<title>config::config::Config::merge (1 samples, 0.13%)</title><rect x="994.8" y="1221" width="1.5" height="15.0" fill="rgb(234,21,40)" rx="2" ry="2" />
<text  x="997.81" y="1231.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (2 samples, 0.25%)</title><rect x="619.2" y="741" width="3.0" height="15.0" fill="rgb(230,29,45)" rx="2" ry="2" />
<text  x="622.22" y="751.5" ></text>
</g>
<g >
<title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (116 samples, 14.54%)</title><rect x="228.8" y="821" width="171.6" height="15.0" fill="rgb(220,19,15)" rx="2" ry="2" />
<text  x="231.85" y="831.5" >serde_json::read::IoRe..</text>
</g>
<g >
<title>all (798 samples, 100%)</title><rect x="10.0" y="1269" width="1180.0" height="15.0" fill="rgb(239,162,39)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (66 samples, 8.27%)</title><rect x="857.3" y="709" width="97.6" height="15.0" fill="rgb(227,18,43)" rx="2" ry="2" />
<text  x="860.29" y="719.5" >__tcp_push_..</text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.13%)</title><rect x="613.3" y="453" width="1.5" height="15.0" fill="rgb(250,139,13)" rx="2" ry="2" />
<text  x="616.31" y="463.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (170 samples, 21.30%)</title><rect x="739.0" y="981" width="251.4" height="15.0" fill="rgb(234,194,53)" rx="2" ry="2" />
<text  x="742.00" y="991.5" >serde_json::ser::to_writer</text>
</g>
<g >
<title>iptable_security_hook (1 samples, 0.13%)</title><rect x="577.8" y="405" width="1.5" height="15.0" fill="rgb(251,189,31)" rx="2" ry="2" />
<text  x="580.82" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.13%)</title><rect x="110.6" y="917" width="1.4" height="15.0" fill="rgb(206,106,25)" rx="2" ry="2" />
<text  x="113.55" y="927.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.38%)</title><rect x="790.8" y="853" width="4.4" height="15.0" fill="rgb(221,132,42)" rx="2" ry="2" />
<text  x="793.75" y="863.5" ></text>
</g>
<g >
<title>core::mem::swap (10 samples, 1.25%)</title><rect x="385.6" y="725" width="14.8" height="15.0" fill="rgb(233,129,27)" rx="2" ry="2" />
<text  x="388.59" y="735.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (8 samples, 1.00%)</title><rect x="750.8" y="709" width="11.9" height="15.0" fill="rgb(243,35,45)" rx="2" ry="2" />
<text  x="753.83" y="719.5" ></text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.13%)</title><rect x="58.8" y="901" width="1.5" height="15.0" fill="rgb(247,35,3)" rx="2" ry="2" />
<text  x="61.80" y="911.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.25%)</title><rect x="801.1" y="853" width="3.0" height="15.0" fill="rgb(211,183,50)" rx="2" ry="2" />
<text  x="804.10" y="863.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.13%)</title><rect x="191.9" y="469" width="1.5" height="15.0" fill="rgb(223,170,26)" rx="2" ry="2" />
<text  x="194.88" y="479.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (5 samples, 0.63%)</title><rect x="527.5" y="741" width="7.4" height="15.0" fill="rgb(209,14,10)" rx="2" ry="2" />
<text  x="530.54" y="751.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.13%)</title><rect x="954.9" y="693" width="1.5" height="15.0" fill="rgb(219,92,1)" rx="2" ry="2" />
<text  x="957.89" y="703.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.13%)</title><rect x="1185.6" y="613" width="1.4" height="15.0" fill="rgb(208,118,10)" rx="2" ry="2" />
<text  x="1188.56" y="623.5" ></text>
</g>
<g >
<title>sock_recvmsg (48 samples, 6.02%)</title><rect x="662.1" y="725" width="71.0" height="15.0" fill="rgb(208,13,28)" rx="2" ry="2" />
<text  x="665.11" y="735.5" >sock_rec..</text>
</g>
<g >
<title>core::str::from_utf8 (5 samples, 0.63%)</title><rect x="314.6" y="773" width="7.4" height="15.0" fill="rgb(243,32,53)" rx="2" ry="2" />
<text  x="317.61" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="574.9" y="485" width="1.4" height="15.0" fill="rgb(214,80,31)" rx="2" ry="2" />
<text  x="577.86" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="1008.1" y="997" width="3.0" height="15.0" fill="rgb(253,24,46)" rx="2" ry="2" />
<text  x="1011.12" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (5 samples, 0.63%)</title><rect x="722.7" y="405" width="7.4" height="15.0" fill="rgb(219,89,11)" rx="2" ry="2" />
<text  x="725.73" y="415.5" ></text>
</g>
<g >
<title>ip_send_unicast_reply (1 samples, 0.13%)</title><rect x="33.7" y="389" width="1.4" height="15.0" fill="rgb(253,23,16)" rx="2" ry="2" />
<text  x="36.66" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="823.3" y="885" width="1.5" height="15.0" fill="rgb(250,42,15)" rx="2" ry="2" />
<text  x="826.28" y="895.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.50%)</title><rect x="188.9" y="645" width="5.9" height="15.0" fill="rgb(240,36,37)" rx="2" ry="2" />
<text  x="191.92" y="655.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.13%)</title><rect x="981.5" y="773" width="1.5" height="15.0" fill="rgb(254,26,33)" rx="2" ry="2" />
<text  x="984.50" y="783.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.13%)</title><rect x="1185.6" y="437" width="1.4" height="15.0" fill="rgb(230,31,23)" rx="2" ry="2" />
<text  x="1188.56" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="1184.1" y="1045" width="1.5" height="15.0" fill="rgb(236,116,14)" rx="2" ry="2" />
<text  x="1187.09" y="1055.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.13%)</title><rect x="943.1" y="517" width="1.4" height="15.0" fill="rgb(215,142,51)" rx="2" ry="2" />
<text  x="946.06" y="527.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.13%)</title><rect x="873.6" y="261" width="1.4" height="15.0" fill="rgb(214,151,11)" rx="2" ry="2" />
<text  x="876.56" y="271.5" ></text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (4 samples, 0.50%)</title><rect x="78.0" y="949" width="5.9" height="15.0" fill="rgb(223,183,54)" rx="2" ry="2" />
<text  x="81.02" y="959.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.13%)</title><rect x="542.3" y="629" width="1.5" height="15.0" fill="rgb(217,91,47)" rx="2" ry="2" />
<text  x="545.33" y="639.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (31 samples, 3.88%)</title><rect x="571.9" y="549" width="45.8" height="15.0" fill="rgb(215,111,49)" rx="2" ry="2" />
<text  x="574.90" y="559.5" >tcp_..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.25%)</title><rect x="117.9" y="965" width="3.0" height="15.0" fill="rgb(211,171,10)" rx="2" ry="2" />
<text  x="120.94" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.25%)</title><rect x="89.8" y="933" width="3.0" height="15.0" fill="rgb(231,113,33)" rx="2" ry="2" />
<text  x="92.85" y="943.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="716.8" y="533" width="1.5" height="15.0" fill="rgb(212,216,43)" rx="2" ry="2" />
<text  x="719.82" y="543.5" ></text>
</g>
<g >
<title>core::alloc::Layout::align (1 samples, 0.13%)</title><rect x="27.7" y="901" width="1.5" height="15.0" fill="rgb(236,120,18)" rx="2" ry="2" />
<text  x="30.74" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="33.7" y="949" width="1.4" height="15.0" fill="rgb(252,148,36)" rx="2" ry="2" />
<text  x="36.66" y="959.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.25%)</title><rect x="603.0" y="101" width="2.9" height="15.0" fill="rgb(239,68,53)" rx="2" ry="2" />
<text  x="605.96" y="111.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (9 samples, 1.13%)</title><rect x="261.4" y="725" width="13.3" height="15.0" fill="rgb(251,180,3)" rx="2" ry="2" />
<text  x="264.38" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (42 samples, 5.26%)</title><rect x="464.0" y="661" width="62.1" height="15.0" fill="rgb(253,71,11)" rx="2" ry="2" />
<text  x="466.96" y="671.5" >do_sys..</text>
</g>
<g >
<title>core::str::pattern::Searcher::next_match (1 samples, 0.13%)</title><rect x="994.8" y="965" width="1.5" height="15.0" fill="rgb(245,148,48)" rx="2" ry="2" />
<text  x="997.81" y="975.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.13%)</title><rect x="1188.5" y="1221" width="1.5" height="15.0" fill="rgb(234,99,44)" rx="2" ry="2" />
<text  x="1191.52" y="1231.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (1 samples, 0.13%)</title><rect x="92.8" y="949" width="1.5" height="15.0" fill="rgb(211,223,33)" rx="2" ry="2" />
<text  x="95.81" y="959.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.13%)</title><rect x="1188.5" y="1141" width="1.5" height="15.0" fill="rgb(213,83,6)" rx="2" ry="2" />
<text  x="1191.52" y="1151.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2 samples, 0.25%)</title><rect x="1025.9" y="997" width="2.9" height="15.0" fill="rgb(248,65,21)" rx="2" ry="2" />
<text  x="1028.86" y="1007.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (6 samples, 0.75%)</title><rect x="97.2" y="917" width="8.9" height="15.0" fill="rgb(231,170,20)" rx="2" ry="2" />
<text  x="100.24" y="927.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.13%)</title><rect x="755.3" y="693" width="1.4" height="15.0" fill="rgb(252,124,39)" rx="2" ry="2" />
<text  x="758.26" y="703.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.13%)</title><rect x="366.4" y="517" width="1.4" height="15.0" fill="rgb(205,214,16)" rx="2" ry="2" />
<text  x="369.37" y="527.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 7.64%)</title><rect x="444.7" y="773" width="90.2" height="15.0" fill="rgb(215,74,23)" rx="2" ry="2" />
<text  x="447.74" y="783.5" >&lt;std::io::..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.25%)</title><rect x="796.7" y="885" width="2.9" height="15.0" fill="rgb(207,55,53)" rx="2" ry="2" />
<text  x="799.67" y="895.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (36 samples, 4.51%)</title><rect x="327.9" y="741" width="53.3" height="15.0" fill="rgb(240,74,29)" rx="2" ry="2" />
<text  x="330.92" y="751.5" >&lt;&amp;std..</text>
</g>
<g >
<title>std::io::Write::write_all (6 samples, 0.75%)</title><rect x="762.7" y="885" width="8.8" height="15.0" fill="rgb(242,121,0)" rx="2" ry="2" />
<text  x="765.66" y="895.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (1 samples, 0.13%)</title><rect x="1185.6" y="901" width="1.4" height="15.0" fill="rgb(230,148,32)" rx="2" ry="2" />
<text  x="1188.56" y="911.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="110.6" y="949" width="1.4" height="15.0" fill="rgb(216,12,5)" rx="2" ry="2" />
<text  x="113.55" y="959.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.13%)</title><rect x="361.9" y="501" width="1.5" height="15.0" fill="rgb(221,93,12)" rx="2" ry="2" />
<text  x="364.93" y="511.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (125 samples, 15.66%)</title><rect x="999.2" y="1125" width="184.9" height="15.0" fill="rgb(205,228,9)" rx="2" ry="2" />
<text  x="1002.25" y="1135.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>__x64_sys_sendto (3 samples, 0.38%)</title><rect x="984.5" y="821" width="4.4" height="15.0" fill="rgb(239,78,42)" rx="2" ry="2" />
<text  x="987.46" y="831.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (4 samples, 0.50%)</title><rect x="357.5" y="533" width="5.9" height="15.0" fill="rgb(224,124,19)" rx="2" ry="2" />
<text  x="360.49" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.50%)</title><rect x="684.3" y="597" width="5.9" height="15.0" fill="rgb(254,218,54)" rx="2" ry="2" />
<text  x="687.29" y="607.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.13%)</title><rect x="1187.0" y="1093" width="1.5" height="15.0" fill="rgb(224,93,31)" rx="2" ry="2" />
<text  x="1190.04" y="1103.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="617.7" y="597" width="1.5" height="15.0" fill="rgb(224,171,30)" rx="2" ry="2" />
<text  x="620.74" y="607.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (1 samples, 0.13%)</title><rect x="1185.6" y="501" width="1.4" height="15.0" fill="rgb(228,214,24)" rx="2" ry="2" />
<text  x="1188.56" y="511.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.38%)</title><rect x="44.0" y="917" width="4.4" height="15.0" fill="rgb(222,205,7)" rx="2" ry="2" />
<text  x="47.01" y="927.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.25%)</title><rect x="592.6" y="261" width="3.0" height="15.0" fill="rgb(241,77,40)" rx="2" ry="2" />
<text  x="595.61" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (53 samples, 6.64%)</title><rect x="322.0" y="789" width="78.4" height="15.0" fill="rgb(253,177,17)" rx="2" ry="2" />
<text  x="325.01" y="799.5" >&lt;serde_js..</text>
</g>
<g >
<title>std::io::Write::write_all (8 samples, 1.00%)</title><rect x="804.1" y="869" width="11.8" height="15.0" fill="rgb(247,148,46)" rx="2" ry="2" />
<text  x="807.06" y="879.5" ></text>
</g>
<g >
<title>std::panicking::try (663 samples, 83.08%)</title><rect x="10.0" y="1109" width="980.4" height="15.0" fill="rgb(242,150,32)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >std::panicking::try</text>
</g>
<g >
<title>__sock_release (1 samples, 0.13%)</title><rect x="33.7" y="837" width="1.4" height="15.0" fill="rgb(241,140,37)" rx="2" ry="2" />
<text  x="36.66" y="847.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2 samples, 0.25%)</title><rect x="957.8" y="757" width="3.0" height="15.0" fill="rgb(231,197,35)" rx="2" ry="2" />
<text  x="960.84" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (62 samples, 7.77%)</title><rect x="642.9" y="837" width="91.7" height="15.0" fill="rgb(225,81,47)" rx="2" ry="2" />
<text  x="645.88" y="847.5" >std::sys::..</text>
</g>
<g >
<title>__sys_recvfrom (38 samples, 4.76%)</title><rect x="468.4" y="629" width="56.2" height="15.0" fill="rgb(238,48,39)" rx="2" ry="2" />
<text  x="471.40" y="639.5" >__sys..</text>
</g>
<g >
<title>ip_local_deliver (9 samples, 1.13%)</title><rect x="595.6" y="229" width="13.3" height="15.0" fill="rgb(222,91,4)" rx="2" ry="2" />
<text  x="598.56" y="239.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.13%)</title><rect x="33.7" y="437" width="1.4" height="15.0" fill="rgb(209,197,38)" rx="2" ry="2" />
<text  x="36.66" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (1 samples, 0.13%)</title><rect x="180.1" y="661" width="1.4" height="15.0" fill="rgb(245,163,12)" rx="2" ry="2" />
<text  x="183.05" y="671.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.13%)</title><rect x="542.3" y="565" width="1.5" height="15.0" fill="rgb(231,226,12)" rx="2" ry="2" />
<text  x="545.33" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.88%)</title><rect x="165.3" y="693" width="10.3" height="15.0" fill="rgb(206,185,38)" rx="2" ry="2" />
<text  x="168.26" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (30 samples, 3.76%)</title><rect x="771.5" y="901" width="44.4" height="15.0" fill="rgb(236,179,36)" rx="2" ry="2" />
<text  x="774.53" y="911.5" >serd..</text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.13%)</title><rect x="753.8" y="693" width="1.5" height="15.0" fill="rgb(219,2,43)" rx="2" ry="2" />
<text  x="756.78" y="703.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.13%)</title><rect x="956.4" y="741" width="1.4" height="15.0" fill="rgb(227,78,54)" rx="2" ry="2" />
<text  x="959.37" y="751.5" ></text>
</g>
<g >
<title>tcp_recvmsg (8 samples, 1.00%)</title><rect x="356.0" y="565" width="11.8" height="15.0" fill="rgb(216,116,38)" rx="2" ry="2" />
<text  x="359.02" y="575.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (62 samples, 7.77%)</title><rect x="642.9" y="869" width="91.7" height="15.0" fill="rgb(226,34,48)" rx="2" ry="2" />
<text  x="645.88" y="879.5" >&lt;&amp;std::net..</text>
</g>
<g >
<title>__x64_sys_sendto (1 samples, 0.13%)</title><rect x="821.8" y="789" width="1.5" height="15.0" fill="rgb(216,154,46)" rx="2" ry="2" />
<text  x="824.80" y="799.5" ></text>
</g>
<g >
<title>yaml_rust::scanner::Scanner&lt;T&gt;::next_token (1 samples, 0.13%)</title><rect x="997.8" y="1093" width="1.4" height="15.0" fill="rgb(251,143,54)" rx="2" ry="2" />
<text  x="1000.77" y="1103.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (117 samples, 14.66%)</title><rect x="227.4" y="837" width="173.0" height="15.0" fill="rgb(254,31,2)" rx="2" ry="2" />
<text  x="230.37" y="847.5" >&lt;serde_json::read::IoR..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_unit (2 samples, 0.25%)</title><rect x="823.3" y="901" width="2.9" height="15.0" fill="rgb(251,56,5)" rx="2" ry="2" />
<text  x="826.28" y="911.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.13%)</title><rect x="33.7" y="805" width="1.4" height="15.0" fill="rgb(243,99,18)" rx="2" ry="2" />
<text  x="36.66" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.13%)</title><rect x="1184.1" y="1061" width="1.5" height="15.0" fill="rgb(249,211,22)" rx="2" ry="2" />
<text  x="1187.09" y="1071.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.13%)</title><rect x="33.7" y="709" width="1.4" height="15.0" fill="rgb(215,179,26)" rx="2" ry="2" />
<text  x="36.66" y="719.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (5 samples, 0.63%)</title><rect x="947.5" y="661" width="7.4" height="15.0" fill="rgb(219,144,19)" rx="2" ry="2" />
<text  x="950.49" y="671.5" ></text>
</g>
<g >
<title>_$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$config..source..Source$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$$u20$as$u20$config..source..Source$GT$::collect::h5d7bbd561dba1a02 (1 samples, 0.13%)</title><rect x="994.8" y="1173" width="1.5" height="15.0" fill="rgb(212,17,36)" rx="2" ry="2" />
<text  x="997.81" y="1183.5" ></text>
</g>
<g >
<title>std::path::Path::is_file (1 samples, 0.13%)</title><rect x="996.3" y="1109" width="1.5" height="15.0" fill="rgb(254,107,9)" rx="2" ry="2" />
<text  x="999.29" y="1119.5" ></text>
</g>
<g >
<title>&lt;u32 as serde::de::from_primitive::FromPrimitive&gt;::from_u64 (2 samples, 0.25%)</title><rect x="622.2" y="805" width="2.9" height="15.0" fill="rgb(209,28,54)" rx="2" ry="2" />
<text  x="625.18" y="815.5" ></text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.13%)</title><rect x="94.3" y="965" width="1.5" height="15.0" fill="rgb(232,109,4)" rx="2" ry="2" />
<text  x="97.29" y="975.5" ></text>
</g>
<g >
<title>server::listen_stream (663 samples, 83.08%)</title><rect x="10.0" y="997" width="980.4" height="15.0" fill="rgb(224,150,7)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >server::listen_stream</text>
</g>
<g >
<title>cse403_distributed_hash_table::parallel::ConcurrentHashTable::new (4 samples, 0.50%)</title><rect x="1022.9" y="1045" width="5.9" height="15.0" fill="rgb(242,67,25)" rx="2" ry="2" />
<text  x="1025.91" y="1055.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.13%)</title><rect x="1185.6" y="549" width="1.4" height="15.0" fill="rgb(235,4,30)" rx="2" ry="2" />
<text  x="1188.56" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.13%)</title><rect x="32.2" y="933" width="1.5" height="15.0" fill="rgb(224,64,21)" rx="2" ry="2" />
<text  x="35.18" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="30.7" y="965" width="3.0" height="15.0" fill="rgb(229,8,15)" rx="2" ry="2" />
<text  x="33.70" y="975.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.13%)</title><rect x="996.3" y="917" width="1.5" height="15.0" fill="rgb(239,92,40)" rx="2" ry="2" />
<text  x="999.29" y="927.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.13%)</title><rect x="542.3" y="613" width="1.5" height="15.0" fill="rgb(245,18,2)" rx="2" ry="2" />
<text  x="545.33" y="623.5" ></text>
</g>
<g >
<title>process_backlog (12 samples, 1.50%)</title><rect x="591.1" y="309" width="17.8" height="15.0" fill="rgb(231,10,28)" rx="2" ry="2" />
<text  x="594.13" y="319.5" ></text>
</g>
<g >
<title>__libc_send (11 samples, 1.38%)</title><rect x="746.4" y="837" width="16.3" height="15.0" fill="rgb(238,7,22)" rx="2" ry="2" />
<text  x="749.39" y="847.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (10 samples, 1.25%)</title><rect x="385.6" y="709" width="14.8" height="15.0" fill="rgb(253,95,31)" rx="2" ry="2" />
<text  x="388.59" y="719.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.25%)</title><rect x="511.3" y="517" width="2.9" height="15.0" fill="rgb(249,215,14)" rx="2" ry="2" />
<text  x="514.28" y="527.5" ></text>
</g>
<g >
<title>server::main (125 samples, 15.66%)</title><rect x="999.2" y="1061" width="184.9" height="15.0" fill="rgb(254,223,50)" rx="2" ry="2" />
<text  x="1002.25" y="1071.5" >server::main</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.25%)</title><rect x="293.9" y="725" width="3.0" height="15.0" fill="rgb(219,33,26)" rx="2" ry="2" />
<text  x="296.91" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.13%)</title><rect x="807.0" y="677" width="1.5" height="15.0" fill="rgb(230,133,20)" rx="2" ry="2" />
<text  x="810.02" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.50%)</title><rect x="109.1" y="965" width="5.9" height="15.0" fill="rgb(221,149,24)" rx="2" ry="2" />
<text  x="112.07" y="975.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="154.9" y="661" width="1.5" height="15.0" fill="rgb(219,132,2)" rx="2" ry="2" />
<text  x="157.91" y="671.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.13%)</title><rect x="996.3" y="1029" width="1.5" height="15.0" fill="rgb(223,14,5)" rx="2" ry="2" />
<text  x="999.29" y="1039.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (1 samples, 0.13%)</title><rect x="78.0" y="917" width="1.5" height="15.0" fill="rgb(220,179,30)" rx="2" ry="2" />
<text  x="81.02" y="927.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.25%)</title><rect x="693.2" y="629" width="2.9" height="15.0" fill="rgb(208,66,8)" rx="2" ry="2" />
<text  x="696.16" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="1185.6" y="485" width="1.4" height="15.0" fill="rgb(233,7,21)" rx="2" ry="2" />
<text  x="1188.56" y="495.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (14 samples, 1.75%)</title><rect x="588.2" y="389" width="20.7" height="15.0" fill="rgb(212,79,5)" rx="2" ry="2" />
<text  x="591.17" y="399.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (663 samples, 83.08%)</title><rect x="10.0" y="1029" width="980.4" height="15.0" fill="rgb(205,179,15)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >std::sys_common::backtrace::__rust_begin_short_backtrace</text>
</g>
<g >
<title>core::ptr::read (5 samples, 0.63%)</title><rect x="393.0" y="693" width="7.4" height="15.0" fill="rgb(207,207,32)" rx="2" ry="2" />
<text  x="395.98" y="703.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.13%)</title><rect x="353.1" y="597" width="1.4" height="15.0" fill="rgb(228,51,28)" rx="2" ry="2" />
<text  x="356.06" y="607.5" ></text>
</g>
<g >
<title>&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::Command&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (223 samples, 27.94%)</title><rect x="208.1" y="885" width="329.8" height="15.0" fill="rgb(249,198,25)" rx="2" ry="2" />
<text  x="211.15" y="895.5" >&lt;cse403_distributed_hash_table::transport::_..</text>
</g>
<g >
<title>__fput (1 samples, 0.13%)</title><rect x="33.7" y="869" width="1.4" height="15.0" fill="rgb(244,195,46)" rx="2" ry="2" />
<text  x="36.66" y="879.5" ></text>
</g>
<g >
<title>std::sys::unix::os::page_size (1 samples, 0.13%)</title><rect x="1184.1" y="1141" width="1.5" height="15.0" fill="rgb(208,103,47)" rx="2" ry="2" />
<text  x="1187.09" y="1151.5" ></text>
</g>
<g >
<title>ip_output (10 samples, 1.25%)</title><rect x="716.8" y="565" width="14.8" height="15.0" fill="rgb(229,193,47)" rx="2" ry="2" />
<text  x="719.82" y="575.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.13%)</title><rect x="469.9" y="613" width="1.5" height="15.0" fill="rgb(254,135,17)" rx="2" ry="2" />
<text  x="472.87" y="623.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.13%)</title><rect x="1185.6" y="709" width="1.4" height="15.0" fill="rgb(218,52,21)" rx="2" ry="2" />
<text  x="1188.56" y="719.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::parallel::ConcurrentHashTable::insert_if_absent (32 samples, 4.01%)</title><rect x="88.4" y="981" width="47.3" height="15.0" fill="rgb(220,157,12)" rx="2" ry="2" />
<text  x="91.37" y="991.5" >cse4..</text>
</g>
<g >
<title>__GI___pthread_mutex_trylock (2 samples, 0.25%)</title><rect x="122.4" y="917" width="2.9" height="15.0" fill="rgb(252,201,0)" rx="2" ry="2" />
<text  x="125.38" y="927.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.13%)</title><rect x="81.0" y="853" width="1.5" height="15.0" fill="rgb(235,122,40)" rx="2" ry="2" />
<text  x="83.98" y="863.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (2 samples, 0.25%)</title><rect x="540.9" y="773" width="2.9" height="15.0" fill="rgb(254,227,41)" rx="2" ry="2" />
<text  x="543.85" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (4 samples, 0.50%)</title><rect x="765.6" y="789" width="5.9" height="15.0" fill="rgb(239,123,49)" rx="2" ry="2" />
<text  x="768.61" y="799.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::init (1 samples, 0.13%)</title><rect x="1184.1" y="1157" width="1.5" height="15.0" fill="rgb(235,111,49)" rx="2" ry="2" />
<text  x="1187.09" y="1167.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="112.0" y="949" width="3.0" height="15.0" fill="rgb(254,99,45)" rx="2" ry="2" />
<text  x="115.03" y="959.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (4 samples, 0.50%)</title><rect x="1011.1" y="1029" width="5.9" height="15.0" fill="rgb(210,204,34)" rx="2" ry="2" />
<text  x="1014.08" y="1039.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h13bad78544670d24 (1 samples, 0.13%)</title><rect x="1185.6" y="1045" width="1.4" height="15.0" fill="rgb(209,107,38)" rx="2" ry="2" />
<text  x="1188.56" y="1055.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (4 samples, 0.50%)</title><rect x="983.0" y="917" width="5.9" height="15.0" fill="rgb(237,173,42)" rx="2" ry="2" />
<text  x="985.98" y="927.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h06f67fc4fb6cd692 (1 samples, 0.13%)</title><rect x="1185.6" y="1141" width="1.4" height="15.0" fill="rgb(230,140,8)" rx="2" ry="2" />
<text  x="1188.56" y="1151.5" ></text>
</g>
<g >
<title>__alloc_skb (3 samples, 0.38%)</title><rect x="571.9" y="501" width="4.4" height="15.0" fill="rgb(229,219,33)" rx="2" ry="2" />
<text  x="574.90" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.50%)</title><rect x="1116.1" y="901" width="5.9" height="15.0" fill="rgb(231,9,5)" rx="2" ry="2" />
<text  x="1119.07" y="911.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="540.9" y="821" width="2.9" height="15.0" fill="rgb(236,27,20)" rx="2" ry="2" />
<text  x="543.85" y="831.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.13%)</title><rect x="533.5" y="725" width="1.4" height="15.0" fill="rgb(237,173,36)" rx="2" ry="2" />
<text  x="536.46" y="735.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="391.5" y="693" width="1.5" height="15.0" fill="rgb(238,1,15)" rx="2" ry="2" />
<text  x="394.50" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (36 samples, 4.51%)</title><rect x="327.9" y="725" width="53.3" height="15.0" fill="rgb(227,194,24)" rx="2" ry="2" />
<text  x="330.92" y="735.5" >std::..</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.13%)</title><rect x="78.0" y="901" width="1.5" height="15.0" fill="rgb(238,117,32)" rx="2" ry="2" />
<text  x="81.02" y="911.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.13%)</title><rect x="671.0" y="645" width="1.5" height="15.0" fill="rgb(211,110,21)" rx="2" ry="2" />
<text  x="673.98" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.38%)</title><rect x="724.2" y="293" width="4.4" height="15.0" fill="rgb(239,140,0)" rx="2" ry="2" />
<text  x="727.21" y="303.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.13%)</title><rect x="673.9" y="677" width="1.5" height="15.0" fill="rgb(246,46,53)" rx="2" ry="2" />
<text  x="676.93" y="687.5" ></text>
</g>
<g >
<title>core::mem::replace (1 samples, 0.13%)</title><rect x="181.5" y="693" width="1.5" height="15.0" fill="rgb(246,157,24)" rx="2" ry="2" />
<text  x="184.53" y="703.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.13%)</title><rect x="33.7" y="741" width="1.4" height="15.0" fill="rgb(240,83,2)" rx="2" ry="2" />
<text  x="36.66" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (1 samples, 0.13%)</title><rect x="100.2" y="901" width="1.5" height="15.0" fill="rgb(244,56,11)" rx="2" ry="2" />
<text  x="103.20" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="100.2" y="885" width="1.5" height="15.0" fill="rgb(253,13,3)" rx="2" ry="2" />
<text  x="103.20" y="895.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (2 samples, 0.25%)</title><rect x="196.3" y="805" width="3.0" height="15.0" fill="rgb(249,45,17)" rx="2" ry="2" />
<text  x="199.32" y="815.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.25%)</title><rect x="608.9" y="373" width="2.9" height="15.0" fill="rgb(243,204,10)" rx="2" ry="2" />
<text  x="611.87" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::borrow (3 samples, 0.38%)</title><rect x="78.0" y="933" width="4.5" height="15.0" fill="rgb(230,123,5)" rx="2" ry="2" />
<text  x="81.02" y="943.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (8 samples, 1.00%)</title><rect x="804.1" y="885" width="11.8" height="15.0" fill="rgb(210,164,30)" rx="2" ry="2" />
<text  x="807.06" y="895.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.13%)</title><rect x="727.2" y="261" width="1.4" height="15.0" fill="rgb(243,176,0)" rx="2" ry="2" />
<text  x="730.17" y="271.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (1 samples, 0.13%)</title><rect x="826.2" y="853" width="1.5" height="15.0" fill="rgb(248,73,40)" rx="2" ry="2" />
<text  x="829.24" y="863.5" ></text>
</g>
<g >
<title>__libc_send (1 samples, 0.13%)</title><rect x="1185.6" y="821" width="1.4" height="15.0" fill="rgb(248,112,48)" rx="2" ry="2" />
<text  x="1188.56" y="831.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (4 samples, 0.50%)</title><rect x="983.0" y="885" width="5.9" height="15.0" fill="rgb(251,138,29)" rx="2" ry="2" />
<text  x="985.98" y="895.5" ></text>
</g>
<g >
<title>&lt;config::file::File&lt;T&gt; as config::source::Source&gt;::collect (1 samples, 0.13%)</title><rect x="996.3" y="1157" width="1.5" height="15.0" fill="rgb(226,52,37)" rx="2" ry="2" />
<text  x="999.29" y="1167.5" ></text>
</g>
<g >
<title>__sys_sendto (2 samples, 0.25%)</title><rect x="980.0" y="805" width="3.0" height="15.0" fill="rgb(217,117,53)" rx="2" ry="2" />
<text  x="983.03" y="815.5" ></text>
</g>
<g >
<title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.13%)</title><rect x="994.8" y="949" width="1.5" height="15.0" fill="rgb(221,129,3)" rx="2" ry="2" />
<text  x="997.81" y="959.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.25%)</title><rect x="957.8" y="725" width="3.0" height="15.0" fill="rgb(251,127,49)" rx="2" ry="2" />
<text  x="960.84" y="735.5" ></text>
</g>
<g >
<title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.13%)</title><rect x="259.9" y="709" width="1.5" height="15.0" fill="rgb(234,182,49)" rx="2" ry="2" />
<text  x="262.90" y="719.5" ></text>
</g>
<g >
<title>sock_sendmsg (5 samples, 0.63%)</title><rect x="807.0" y="741" width="7.4" height="15.0" fill="rgb(224,172,34)" rx="2" ry="2" />
<text  x="810.02" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::poison::map_result (1 samples, 0.13%)</title><rect x="82.5" y="933" width="1.4" height="15.0" fill="rgb(247,206,50)" rx="2" ry="2" />
<text  x="85.46" y="943.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h5299a4cdb26f54bd (663 samples, 83.08%)</title><rect x="10.0" y="1157" width="980.4" height="15.0" fill="rgb(230,179,8)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h5299a4cdb26f54bd</text>
</g>
<g >
<title>sock_recvmsg (35 samples, 4.39%)</title><rect x="566.0" y="597" width="51.7" height="15.0" fill="rgb(225,52,51)" rx="2" ry="2" />
<text  x="568.99" y="607.5" >sock_..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (7 samples, 0.88%)</title><rect x="311.7" y="805" width="10.3" height="15.0" fill="rgb(234,213,10)" rx="2" ry="2" />
<text  x="314.65" y="815.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.13%)</title><rect x="1027.3" y="965" width="1.5" height="15.0" fill="rgb(247,96,19)" rx="2" ry="2" />
<text  x="1030.34" y="975.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.25%)</title><rect x="951.9" y="613" width="3.0" height="15.0" fill="rgb(254,130,44)" rx="2" ry="2" />
<text  x="954.93" y="623.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (2 samples, 0.25%)</title><rect x="854.3" y="725" width="3.0" height="15.0" fill="rgb(216,64,42)" rx="2" ry="2" />
<text  x="857.34" y="735.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.13%)</title><rect x="61.8" y="917" width="1.4" height="15.0" fill="rgb(251,0,42)" rx="2" ry="2" />
<text  x="64.75" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (6 samples, 0.75%)</title><rect x="807.0" y="773" width="8.9" height="15.0" fill="rgb(243,77,6)" rx="2" ry="2" />
<text  x="810.02" y="783.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.13%)</title><rect x="486.1" y="565" width="1.5" height="15.0" fill="rgb(234,112,15)" rx="2" ry="2" />
<text  x="489.14" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="1028.8" y="981" width="1.5" height="15.0" fill="rgb(247,205,27)" rx="2" ry="2" />
<text  x="1031.82" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.13%)</title><rect x="1028.8" y="933" width="1.5" height="15.0" fill="rgb(231,106,54)" rx="2" ry="2" />
<text  x="1031.82" y="943.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.13%)</title><rect x="1185.6" y="597" width="1.4" height="15.0" fill="rgb(247,214,13)" rx="2" ry="2" />
<text  x="1188.56" y="607.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.25%)</title><rect x="196.3" y="773" width="3.0" height="15.0" fill="rgb(216,106,28)" rx="2" ry="2" />
<text  x="199.32" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (1 samples, 0.13%)</title><rect x="1185.6" y="773" width="1.4" height="15.0" fill="rgb(238,185,15)" rx="2" ry="2" />
<text  x="1188.56" y="783.5" ></text>
</g>
<g >
<title>nom::bytes::complete::is_a::_$u7b$$u7b$closure$u7d$$u7d$::hef53ca54cd7bfd4c (1 samples, 0.13%)</title><rect x="994.8" y="1029" width="1.5" height="15.0" fill="rgb(212,69,16)" rx="2" ry="2" />
<text  x="997.81" y="1039.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (2 samples, 0.25%)</title><rect x="364.9" y="533" width="2.9" height="15.0" fill="rgb(247,218,36)" rx="2" ry="2" />
<text  x="367.89" y="543.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="730.1" y="549" width="1.5" height="15.0" fill="rgb(211,1,0)" rx="2" ry="2" />
<text  x="733.13" y="559.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (11 samples, 1.38%)</title><rect x="746.4" y="869" width="16.3" height="15.0" fill="rgb(245,10,12)" rx="2" ry="2" />
<text  x="749.39" y="879.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (19 samples, 2.38%)</title><rect x="703.5" y="677" width="28.1" height="15.0" fill="rgb(231,211,5)" rx="2" ry="2" />
<text  x="706.51" y="687.5" >t..</text>
</g>
<g >
<title>std::thread::sleep (104 samples, 13.03%)</title><rect x="1030.3" y="1045" width="153.8" height="15.0" fill="rgb(220,38,3)" rx="2" ry="2" />
<text  x="1033.30" y="1055.5" >std::thread::sleep</text>
</g>
<g >
<title>inet_recvmsg (48 samples, 6.02%)</title><rect x="662.1" y="709" width="71.0" height="15.0" fill="rgb(251,84,34)" rx="2" ry="2" />
<text  x="665.11" y="719.5" >inet_rec..</text>
</g>
<g >
<title>__hrtimer_init (2 samples, 0.25%)</title><rect x="1110.2" y="933" width="2.9" height="15.0" fill="rgb(226,54,38)" rx="2" ry="2" />
<text  x="1113.15" y="943.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (1 samples, 0.13%)</title><rect x="180.1" y="677" width="1.4" height="15.0" fill="rgb(240,53,21)" rx="2" ry="2" />
<text  x="183.05" y="687.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (1 samples, 0.13%)</title><rect x="125.3" y="885" width="1.5" height="15.0" fill="rgb(217,3,17)" rx="2" ry="2" />
<text  x="128.34" y="895.5" ></text>
</g>
<g >
<title>ip_rcv (47 samples, 5.89%)</title><rect x="870.6" y="437" width="69.5" height="15.0" fill="rgb(216,157,37)" rx="2" ry="2" />
<text  x="873.60" y="447.5" >ip_rcv</text>
</g>
<g >
<title>__sys_recvfrom (1 samples, 0.13%)</title><rect x="465.4" y="645" width="1.5" height="15.0" fill="rgb(236,201,6)" rx="2" ry="2" />
<text  x="468.44" y="655.5" ></text>
</g>
<g >
<title>_copy_to_iter (5 samples, 0.63%)</title><rect x="696.1" y="629" width="7.4" height="15.0" fill="rgb(235,92,33)" rx="2" ry="2" />
<text  x="699.12" y="639.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2 samples, 0.25%)</title><rect x="619.2" y="837" width="3.0" height="15.0" fill="rgb(235,58,41)" rx="2" ry="2" />
<text  x="622.22" y="847.5" ></text>
</g>
<g >
<title>schedule_timeout (11 samples, 1.38%)</title><rect x="495.0" y="533" width="16.3" height="15.0" fill="rgb(237,155,0)" rx="2" ry="2" />
<text  x="498.01" y="543.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (9 samples, 1.13%)</title><rect x="690.2" y="661" width="13.3" height="15.0" fill="rgb(242,40,53)" rx="2" ry="2" />
<text  x="693.20" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="629.6" y="933" width="2.9" height="15.0" fill="rgb(232,177,9)" rx="2" ry="2" />
<text  x="632.57" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (9 samples, 1.13%)</title><rect x="183.0" y="821" width="13.3" height="15.0" fill="rgb(222,174,37)" rx="2" ry="2" />
<text  x="186.01" y="831.5" ></text>
</g>
<g >
<title>ip_queue_xmit (16 samples, 2.01%)</title><rect x="707.9" y="613" width="23.7" height="15.0" fill="rgb(223,133,49)" rx="2" ry="2" />
<text  x="710.94" y="623.5" >i..</text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.13%)</title><rect x="570.4" y="549" width="1.5" height="15.0" fill="rgb(245,202,13)" rx="2" ry="2" />
<text  x="573.43" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::poison::map_result (1 samples, 0.13%)</title><rect x="126.8" y="933" width="1.5" height="15.0" fill="rgb(231,75,39)" rx="2" ry="2" />
<text  x="129.82" y="943.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.50%)</title><rect x="684.3" y="629" width="5.9" height="15.0" fill="rgb(207,108,54)" rx="2" ry="2" />
<text  x="687.29" y="639.5" ></text>
</g>
<g >
<title>schedule (11 samples, 1.38%)</title><rect x="495.0" y="517" width="16.3" height="15.0" fill="rgb(235,85,2)" rx="2" ry="2" />
<text  x="498.01" y="527.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.13%)</title><rect x="733.1" y="709" width="1.5" height="15.0" fill="rgb(219,208,53)" rx="2" ry="2" />
<text  x="736.08" y="719.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::parse (1 samples, 0.13%)</title><rect x="997.8" y="1189" width="1.4" height="15.0" fill="rgb(248,51,43)" rx="2" ry="2" />
<text  x="1000.77" y="1199.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (4 samples, 0.50%)</title><rect x="367.8" y="581" width="6.0" height="15.0" fill="rgb(232,43,3)" rx="2" ry="2" />
<text  x="370.84" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="1009.6" y="949" width="1.5" height="15.0" fill="rgb(207,205,9)" rx="2" ry="2" />
<text  x="1012.60" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::len (1 samples, 0.13%)</title><rect x="1006.6" y="1045" width="1.5" height="15.0" fill="rgb(235,8,49)" rx="2" ry="2" />
<text  x="1009.64" y="1055.5" ></text>
</g>
<g >
<title>hyperv_callback_vector (1 samples, 0.13%)</title><rect x="57.3" y="885" width="1.5" height="15.0" fill="rgb(247,12,37)" rx="2" ry="2" />
<text  x="60.32" y="895.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.13%)</title><rect x="761.2" y="645" width="1.5" height="15.0" fill="rgb(249,99,3)" rx="2" ry="2" />
<text  x="764.18" y="655.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.13%)</title><rect x="35.1" y="981" width="1.5" height="15.0" fill="rgb(244,5,45)" rx="2" ry="2" />
<text  x="38.14" y="991.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.25%)</title><rect x="968.2" y="853" width="3.0" height="15.0" fill="rgb(214,220,7)" rx="2" ry="2" />
<text  x="971.20" y="863.5" ></text>
</g>
<g >
<title>__schedule (38 samples, 4.76%)</title><rect x="1126.4" y="901" width="56.2" height="15.0" fill="rgb(240,164,29)" rx="2" ry="2" />
<text  x="1129.42" y="911.5" >__sch..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="1009.6" y="901" width="1.5" height="15.0" fill="rgb(211,122,22)" rx="2" ry="2" />
<text  x="1012.60" y="911.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (2 samples, 0.25%)</title><rect x="364.9" y="549" width="2.9" height="15.0" fill="rgb(224,215,21)" rx="2" ry="2" />
<text  x="367.89" y="559.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.13%)</title><rect x="489.1" y="549" width="1.5" height="15.0" fill="rgb(207,1,15)" rx="2" ry="2" />
<text  x="492.10" y="559.5" ></text>
</g>
<g >
<title>&lt;core::iter::LoopState&lt;C,B&gt; as core::ops::try::Try&gt;::from_ok (1 samples, 0.13%)</title><rect x="52.9" y="933" width="1.5" height="15.0" fill="rgb(254,127,14)" rx="2" ry="2" />
<text  x="55.88" y="943.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="722.7" y="293" width="1.5" height="15.0" fill="rgb(227,4,5)" rx="2" ry="2" />
<text  x="725.73" y="303.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (3 samples, 0.38%)</title><rect x="990.4" y="1237" width="4.4" height="15.0" fill="rgb(216,209,0)" rx="2" ry="2" />
<text  x="993.38" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="996.3" y="997" width="1.5" height="15.0" fill="rgb(242,37,44)" rx="2" ry="2" />
<text  x="999.29" y="1007.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.13%)</title><rect x="839.5" y="757" width="1.5" height="15.0" fill="rgb(215,200,16)" rx="2" ry="2" />
<text  x="842.55" y="767.5" ></text>
</g>
<g >
<title>serde_json::read::next_or_eof (2 samples, 0.25%)</title><rect x="180.1" y="757" width="2.9" height="15.0" fill="rgb(242,227,25)" rx="2" ry="2" />
<text  x="183.05" y="767.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="1028.8" y="997" width="1.5" height="15.0" fill="rgb(209,180,49)" rx="2" ry="2" />
<text  x="1031.82" y="1007.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::new (3 samples, 0.38%)</title><rect x="1024.4" y="1029" width="4.4" height="15.0" fill="rgb(228,95,9)" rx="2" ry="2" />
<text  x="1027.39" y="1039.5" ></text>
</g>
<g >
<title>do_softirq.part.20 (14 samples, 1.75%)</title><rect x="588.2" y="373" width="20.7" height="15.0" fill="rgb(231,42,39)" rx="2" ry="2" />
<text  x="591.17" y="383.5" ></text>
</g>
<g >
<title>__libc_send (1 samples, 0.13%)</title><rect x="824.8" y="821" width="1.4" height="15.0" fill="rgb(237,205,35)" rx="2" ry="2" />
<text  x="827.76" y="831.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (2 samples, 0.25%)</title><rect x="196.3" y="789" width="3.0" height="15.0" fill="rgb(240,93,18)" rx="2" ry="2" />
<text  x="199.32" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="534.9" y="773" width="3.0" height="15.0" fill="rgb(237,88,7)" rx="2" ry="2" />
<text  x="537.94" y="783.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.13%)</title><rect x="770.1" y="693" width="1.4" height="15.0" fill="rgb(218,176,6)" rx="2" ry="2" />
<text  x="773.05" y="703.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.00%)</title><rect x="784.8" y="869" width="11.9" height="15.0" fill="rgb(207,45,21)" rx="2" ry="2" />
<text  x="787.84" y="879.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.13%)</title><rect x="761.2" y="661" width="1.5" height="15.0" fill="rgb(211,103,3)" rx="2" ry="2" />
<text  x="764.18" y="671.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (75 samples, 9.40%)</title><rect x="845.5" y="741" width="110.9" height="15.0" fill="rgb(214,220,3)" rx="2" ry="2" />
<text  x="848.46" y="751.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.13%)</title><rect x="826.2" y="885" width="1.5" height="15.0" fill="rgb(230,172,49)" rx="2" ry="2" />
<text  x="829.24" y="895.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="1185.6" y="869" width="1.4" height="15.0" fill="rgb(249,36,52)" rx="2" ry="2" />
<text  x="1188.56" y="879.5" ></text>
</g>
<g >
<title>core::mem::replace (1 samples, 0.13%)</title><rect x="555.6" y="757" width="1.5" height="15.0" fill="rgb(233,165,54)" rx="2" ry="2" />
<text  x="558.64" y="767.5" ></text>
</g>
<g >
<title>nf_ct_deliver_cached_events (1 samples, 0.13%)</title><rect x="730.1" y="533" width="1.5" height="15.0" fill="rgb(234,54,42)" rx="2" ry="2" />
<text  x="733.13" y="543.5" ></text>
</g>
<g >
<title>__sys_recvfrom (1 samples, 0.13%)</title><rect x="180.1" y="565" width="1.4" height="15.0" fill="rgb(232,78,17)" rx="2" ry="2" />
<text  x="183.05" y="575.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (1 samples, 0.13%)</title><rect x="709.4" y="549" width="1.5" height="15.0" fill="rgb(250,173,37)" rx="2" ry="2" />
<text  x="712.42" y="559.5" ></text>
</g>
<g >
<title>__GI___nanosleep (100 samples, 12.53%)</title><rect x="1036.2" y="1013" width="147.9" height="15.0" fill="rgb(246,85,46)" rx="2" ry="2" />
<text  x="1039.22" y="1023.5" >__GI___nanosleep</text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.13%)</title><rect x="710.9" y="533" width="1.5" height="15.0" fill="rgb(239,217,39)" rx="2" ry="2" />
<text  x="713.90" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (2 samples, 0.25%)</title><rect x="180.1" y="741" width="2.9" height="15.0" fill="rgb(222,192,47)" rx="2" ry="2" />
<text  x="183.05" y="751.5" ></text>
</g>
<g >
<title>inet_sendmsg (80 samples, 10.03%)</title><rect x="839.5" y="773" width="118.3" height="15.0" fill="rgb(211,199,9)" rx="2" ry="2" />
<text  x="842.55" y="783.5" >inet_sendmsg</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (663 samples, 83.08%)</title><rect x="10.0" y="1173" width="980.4" height="15.0" fill="rgb(207,107,39)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.13%)</title><rect x="33.7" y="517" width="1.4" height="15.0" fill="rgb(211,218,20)" rx="2" ry="2" />
<text  x="36.66" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 1.25%)</title><rect x="406.3" y="805" width="14.8" height="15.0" fill="rgb(233,63,17)" rx="2" ry="2" />
<text  x="409.29" y="815.5" ></text>
</g>
<g >
<title>core::slice::from_mut (6 samples, 0.75%)</title><rect x="526.1" y="757" width="8.8" height="15.0" fill="rgb(246,160,44)" rx="2" ry="2" />
<text  x="529.07" y="767.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.43 (31 samples, 3.88%)</title><rect x="571.9" y="517" width="45.8" height="15.0" fill="rgb(244,123,15)" rx="2" ry="2" />
<text  x="574.90" y="527.5" >__tc..</text>
</g>
<g >
<title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (1 samples, 0.13%)</title><rect x="98.7" y="885" width="1.5" height="15.0" fill="rgb(240,193,14)" rx="2" ry="2" />
<text  x="101.72" y="895.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="962.3" y="805" width="1.5" height="15.0" fill="rgb(242,177,52)" rx="2" ry="2" />
<text  x="965.28" y="815.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.88%)</title><rect x="217.0" y="821" width="10.4" height="15.0" fill="rgb(228,179,3)" rx="2" ry="2" />
<text  x="220.02" y="831.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::parallel::ConcurrentHashTable::get (35 samples, 4.39%)</title><rect x="36.6" y="981" width="51.8" height="15.0" fill="rgb(231,19,36)" rx="2" ry="2" />
<text  x="39.62" y="991.5" >cse40..</text>
</g>
<g >
<title>tcp_send_ack (31 samples, 3.88%)</title><rect x="571.9" y="533" width="45.8" height="15.0" fill="rgb(243,228,23)" rx="2" ry="2" />
<text  x="574.90" y="543.5" >tcp_..</text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.13%)</title><rect x="1022.9" y="949" width="1.5" height="15.0" fill="rgb(233,80,37)" rx="2" ry="2" />
<text  x="1025.91" y="959.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::Command::Get (1 samples, 0.13%)</title><rect x="200.8" y="901" width="1.4" height="15.0" fill="rgb(218,224,44)" rx="2" ry="2" />
<text  x="203.75" y="911.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (1 samples, 0.13%)</title><rect x="1185.6" y="837" width="1.4" height="15.0" fill="rgb(226,15,20)" rx="2" ry="2" />
<text  x="1188.56" y="847.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.25%)</title><rect x="221.5" y="757" width="2.9" height="15.0" fill="rgb(214,165,50)" rx="2" ry="2" />
<text  x="224.45" y="767.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.25%)</title><rect x="653.2" y="789" width="3.0" height="15.0" fill="rgb(228,120,36)" rx="2" ry="2" />
<text  x="656.23" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="987.4" y="725" width="1.5" height="15.0" fill="rgb(231,181,29)" rx="2" ry="2" />
<text  x="990.42" y="735.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_unlock (1 samples, 0.13%)</title><rect x="110.6" y="933" width="1.4" height="15.0" fill="rgb(249,77,22)" rx="2" ry="2" />
<text  x="113.55" y="943.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.13%)</title><rect x="227.4" y="821" width="1.4" height="15.0" fill="rgb(226,94,39)" rx="2" ry="2" />
<text  x="230.37" y="831.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (72 samples, 9.02%)</title><rect x="431.4" y="837" width="106.5" height="15.0" fill="rgb(238,130,14)" rx="2" ry="2" />
<text  x="434.43" y="847.5" >serde_json::d..</text>
</g>
<g >
<title>tcp_sendmsg_locked (3 samples, 0.38%)</title><rect x="810.0" y="693" width="4.4" height="15.0" fill="rgb(234,24,27)" rx="2" ry="2" />
<text  x="812.97" y="703.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts_mut (1 samples, 0.13%)</title><rect x="381.2" y="725" width="1.4" height="15.0" fill="rgb(239,90,9)" rx="2" ry="2" />
<text  x="384.15" y="735.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (224 samples, 28.07%)</title><rect x="206.7" y="901" width="331.2" height="15.0" fill="rgb(227,1,6)" rx="2" ry="2" />
<text  x="209.67" y="911.5" >&lt;core::marker::PhantomData&lt;T&gt; as serde::de::..</text>
</g>
<g >
<title>do_softirq.part.20 (49 samples, 6.14%)</title><rect x="869.1" y="549" width="72.5" height="15.0" fill="rgb(211,97,0)" rx="2" ry="2" />
<text  x="872.12" y="559.5" >do_softi..</text>
</g>
<g >
<title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.13%)</title><rect x="994.8" y="981" width="1.5" height="15.0" fill="rgb(230,25,48)" rx="2" ry="2" />
<text  x="997.81" y="991.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (2 samples, 0.25%)</title><rect x="619.2" y="821" width="3.0" height="15.0" fill="rgb(253,59,35)" rx="2" ry="2" />
<text  x="622.22" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (40 samples, 5.01%)</title><rect x="560.1" y="789" width="59.1" height="15.0" fill="rgb(246,179,0)" rx="2" ry="2" />
<text  x="563.08" y="799.5" >&lt;serde..</text>
</g>
<g >
<title>std::sync::rwlock::RwLock&lt;T&gt;::read (10 samples, 1.25%)</title><rect x="73.6" y="965" width="14.8" height="15.0" fill="rgb(230,100,10)" rx="2" ry="2" />
<text  x="76.58" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.13%)</title><rect x="1188.5" y="1189" width="1.5" height="15.0" fill="rgb(242,122,10)" rx="2" ry="2" />
<text  x="1191.52" y="1199.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (4 samples, 0.50%)</title><rect x="177.1" y="789" width="5.9" height="15.0" fill="rgb(213,81,15)" rx="2" ry="2" />
<text  x="180.09" y="799.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (1 samples, 0.13%)</title><rect x="92.8" y="933" width="1.5" height="15.0" fill="rgb(234,140,43)" rx="2" ry="2" />
<text  x="95.81" y="943.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.13%)</title><rect x="1185.6" y="1221" width="1.4" height="15.0" fill="rgb(215,157,6)" rx="2" ry="2" />
<text  x="1188.56" y="1231.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.13%)</title><rect x="1185.6" y="677" width="1.4" height="15.0" fill="rgb(244,58,20)" rx="2" ry="2" />
<text  x="1188.56" y="687.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (5 samples, 0.63%)</title><rect x="947.5" y="677" width="7.4" height="15.0" fill="rgb(243,197,52)" rx="2" ry="2" />
<text  x="950.49" y="687.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.13%)</title><rect x="798.1" y="869" width="1.5" height="15.0" fill="rgb(223,68,24)" rx="2" ry="2" />
<text  x="801.15" y="879.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 1.25%)</title><rect x="496.5" y="501" width="14.8" height="15.0" fill="rgb(210,33,48)" rx="2" ry="2" />
<text  x="499.49" y="511.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 4.76%)</title><rect x="563.0" y="757" width="56.2" height="15.0" fill="rgb(254,55,32)" rx="2" ry="2" />
<text  x="566.03" y="767.5" >&lt;std:..</text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.25%)</title><rect x="1095.4" y="949" width="2.9" height="15.0" fill="rgb(245,96,32)" rx="2" ry="2" />
<text  x="1098.36" y="959.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::RWLock::read_unlock (2 samples, 0.25%)</title><rect x="112.0" y="933" width="3.0" height="15.0" fill="rgb(232,96,39)" rx="2" ry="2" />
<text  x="115.03" y="943.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 1.13%)</title><rect x="498.0" y="485" width="13.3" height="15.0" fill="rgb(211,126,17)" rx="2" ry="2" />
<text  x="500.97" y="495.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.13%)</title><rect x="725.7" y="245" width="1.5" height="15.0" fill="rgb(213,104,50)" rx="2" ry="2" />
<text  x="728.69" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.88%)</title><rect x="165.3" y="677" width="10.3" height="15.0" fill="rgb(240,160,45)" rx="2" ry="2" />
<text  x="168.26" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::try_statx::statx (1 samples, 0.13%)</title><rect x="996.3" y="1045" width="1.5" height="15.0" fill="rgb(229,21,4)" rx="2" ry="2" />
<text  x="999.29" y="1055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.25%)</title><rect x="747.9" y="821" width="14.8" height="15.0" fill="rgb(234,191,25)" rx="2" ry="2" />
<text  x="750.87" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_string (11 samples, 1.38%)</title><rect x="746.4" y="901" width="16.3" height="15.0" fill="rgb(221,88,45)" rx="2" ry="2" />
<text  x="749.39" y="911.5" ></text>
</g>
<g >
<title>get_timespec64 (6 samples, 0.75%)</title><rect x="1098.3" y="949" width="8.9" height="15.0" fill="rgb(215,68,22)" rx="2" ry="2" />
<text  x="1101.32" y="959.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.25%)</title><rect x="17.4" y="949" width="3.0" height="15.0" fill="rgb(233,83,22)" rx="2" ry="2" />
<text  x="20.39" y="959.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (3 samples, 0.38%)</title><rect x="286.5" y="709" width="4.5" height="15.0" fill="rgb(253,19,9)" rx="2" ry="2" />
<text  x="289.52" y="719.5" ></text>
</g>
<g >
<title>path_lookupat (1 samples, 0.13%)</title><rect x="996.3" y="901" width="1.5" height="15.0" fill="rgb(239,14,21)" rx="2" ry="2" />
<text  x="999.29" y="911.5" ></text>
</g>
<g >
<title>nom::combinator::map::_$u7b$$u7b$closure$u7d$$u7d$::h0468d2cdddd061de (1 samples, 0.13%)</title><rect x="994.8" y="1045" width="1.5" height="15.0" fill="rgb(225,19,28)" rx="2" ry="2" />
<text  x="997.81" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (1 samples, 0.13%)</title><rect x="1022.9" y="997" width="1.5" height="15.0" fill="rgb(211,186,30)" rx="2" ry="2" />
<text  x="1025.91" y="1007.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.13%)</title><rect x="33.7" y="693" width="1.4" height="15.0" fill="rgb(232,138,53)" rx="2" ry="2" />
<text  x="36.66" y="703.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (6 samples, 0.75%)</title><rect x="762.7" y="853" width="8.8" height="15.0" fill="rgb(232,152,0)" rx="2" ry="2" />
<text  x="765.66" y="863.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.13%)</title><rect x="1022.9" y="981" width="1.5" height="15.0" fill="rgb(240,146,33)" rx="2" ry="2" />
<text  x="1025.91" y="991.5" ></text>
</g>
<g >
<title>__libc_recv (4 samples, 0.50%)</title><rect x="188.9" y="629" width="5.9" height="15.0" fill="rgb(225,117,17)" rx="2" ry="2" />
<text  x="191.92" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.13%)</title><rect x="1188.5" y="1157" width="1.5" height="15.0" fill="rgb(242,161,46)" rx="2" ry="2" />
<text  x="1191.52" y="1167.5" ></text>
</g>
<g >
<title>__libc_recv (52 samples, 6.52%)</title><rect x="449.2" y="693" width="76.9" height="15.0" fill="rgb(250,3,4)" rx="2" ry="2" />
<text  x="452.17" y="703.5" >__libc_r..</text>
</g>
<g >
<title>tcp_sendmsg (3 samples, 0.38%)</title><rect x="765.6" y="725" width="4.5" height="15.0" fill="rgb(245,23,45)" rx="2" ry="2" />
<text  x="768.61" y="735.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.25%)</title><rect x="376.7" y="613" width="3.0" height="15.0" fill="rgb(208,112,6)" rx="2" ry="2" />
<text  x="379.72" y="623.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="981.5" y="757" width="1.5" height="15.0" fill="rgb(224,135,36)" rx="2" ry="2" />
<text  x="984.50" y="767.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::borrow (1 samples, 0.13%)</title><rect x="125.3" y="933" width="1.5" height="15.0" fill="rgb(218,93,10)" rx="2" ry="2" />
<text  x="128.34" y="943.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.13%)</title><rect x="985.9" y="773" width="1.5" height="15.0" fill="rgb(231,64,19)" rx="2" ry="2" />
<text  x="988.94" y="783.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="873.6" y="245" width="1.4" height="15.0" fill="rgb(209,89,52)" rx="2" ry="2" />
<text  x="876.56" y="255.5" ></text>
</g>
<g >
<title>__sys_recvfrom (51 samples, 6.39%)</title><rect x="659.1" y="741" width="75.5" height="15.0" fill="rgb(232,221,42)" rx="2" ry="2" />
<text  x="662.15" y="751.5" >__sys_re..</text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.13%)</title><rect x="67.7" y="901" width="1.4" height="15.0" fill="rgb(228,50,18)" rx="2" ry="2" />
<text  x="70.67" y="911.5" ></text>
</g>
<g >
<title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="60.3" y="949" width="1.5" height="15.0" fill="rgb(244,24,45)" rx="2" ry="2" />
<text  x="63.28" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (6 samples, 0.75%)</title><rect x="407.8" y="789" width="8.8" height="15.0" fill="rgb(218,55,33)" rx="2" ry="2" />
<text  x="410.77" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="824.8" y="853" width="1.4" height="15.0" fill="rgb(238,10,15)" rx="2" ry="2" />
<text  x="827.76" y="863.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.13%)</title><rect x="987.4" y="741" width="1.5" height="15.0" fill="rgb(212,44,32)" rx="2" ry="2" />
<text  x="990.42" y="751.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_bool (4 samples, 0.50%)</title><rect x="817.4" y="917" width="5.9" height="15.0" fill="rgb(218,161,8)" rx="2" ry="2" />
<text  x="820.37" y="927.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.13%)</title><rect x="518.7" y="565" width="1.5" height="15.0" fill="rgb(207,76,20)" rx="2" ry="2" />
<text  x="521.67" y="575.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.25%)</title><rect x="115.0" y="965" width="2.9" height="15.0" fill="rgb(213,68,12)" rx="2" ry="2" />
<text  x="117.99" y="975.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.13%)</title><rect x="987.4" y="773" width="1.5" height="15.0" fill="rgb(225,75,12)" rx="2" ry="2" />
<text  x="990.42" y="783.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (6 samples, 0.75%)</title><rect x="597.0" y="197" width="8.9" height="15.0" fill="rgb(219,73,31)" rx="2" ry="2" />
<text  x="600.04" y="207.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (5 samples, 0.63%)</title><rect x="722.7" y="341" width="7.4" height="15.0" fill="rgb(234,135,14)" rx="2" ry="2" />
<text  x="725.73" y="351.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.13%)</title><rect x="821.8" y="725" width="1.5" height="15.0" fill="rgb(252,35,43)" rx="2" ry="2" />
<text  x="824.80" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.13%)</title><rect x="150.5" y="677" width="1.5" height="15.0" fill="rgb(220,221,22)" rx="2" ry="2" />
<text  x="153.48" y="687.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (4 samples, 0.50%)</title><rect x="188.9" y="661" width="5.9" height="15.0" fill="rgb(245,166,2)" rx="2" ry="2" />
<text  x="191.92" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (5 samples, 0.63%)</title><rect x="23.3" y="949" width="7.4" height="15.0" fill="rgb(247,202,41)" rx="2" ry="2" />
<text  x="26.31" y="959.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="1028.8" y="885" width="1.5" height="15.0" fill="rgb(226,11,5)" rx="2" ry="2" />
<text  x="1031.82" y="895.5" ></text>
</g>
<g >
<title>__libc_send (89 samples, 11.15%)</title><rect x="832.2" y="869" width="131.6" height="15.0" fill="rgb(224,219,51)" rx="2" ry="2" />
<text  x="835.16" y="879.5" >__libc_send</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (12 samples, 1.50%)</title><rect x="382.6" y="773" width="17.8" height="15.0" fill="rgb(232,92,31)" rx="2" ry="2" />
<text  x="385.63" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="737.5" y="949" width="1.5" height="15.0" fill="rgb(245,62,42)" rx="2" ry="2" />
<text  x="740.52" y="959.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.13%)</title><rect x="81.0" y="869" width="1.5" height="15.0" fill="rgb(254,78,47)" rx="2" ry="2" />
<text  x="83.98" y="879.5" ></text>
</g>
<g >
<title>__sys_sendto (4 samples, 0.50%)</title><rect x="765.6" y="773" width="5.9" height="15.0" fill="rgb(208,90,29)" rx="2" ry="2" />
<text  x="768.61" y="783.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.25%)</title><rect x="985.9" y="789" width="3.0" height="15.0" fill="rgb(239,76,17)" rx="2" ry="2" />
<text  x="988.94" y="799.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.13%)</title><rect x="796.7" y="853" width="1.4" height="15.0" fill="rgb(233,72,23)" rx="2" ry="2" />
<text  x="799.67" y="863.5" ></text>
</g>
<g >
<title>__libc_send (1 samples, 0.13%)</title><rect x="826.2" y="789" width="1.5" height="15.0" fill="rgb(242,127,27)" rx="2" ry="2" />
<text  x="829.24" y="799.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="282.1" y="725" width="1.5" height="15.0" fill="rgb(254,223,27)" rx="2" ry="2" />
<text  x="285.08" y="735.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (2 samples, 0.25%)</title><rect x="1017.0" y="1029" width="2.9" height="15.0" fill="rgb(213,118,10)" rx="2" ry="2" />
<text  x="1019.99" y="1039.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.63%)</title><rect x="254.0" y="741" width="7.4" height="15.0" fill="rgb(238,20,5)" rx="2" ry="2" />
<text  x="256.98" y="751.5" ></text>
</g>
<g >
<title>inet_sendmsg (10 samples, 1.25%)</title><rect x="747.9" y="741" width="14.8" height="15.0" fill="rgb(207,131,19)" rx="2" ry="2" />
<text  x="750.87" y="751.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.13%)</title><rect x="682.8" y="645" width="1.5" height="15.0" fill="rgb(253,99,12)" rx="2" ry="2" />
<text  x="685.81" y="655.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.13%)</title><rect x="1187.0" y="1189" width="1.5" height="15.0" fill="rgb(235,171,9)" rx="2" ry="2" />
<text  x="1190.04" y="1199.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.38%)</title><rect x="395.9" y="661" width="4.5" height="15.0" fill="rgb(220,6,8)" rx="2" ry="2" />
<text  x="398.94" y="671.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (663 samples, 83.08%)</title><rect x="10.0" y="1093" width="980.4" height="15.0" fill="rgb(242,181,39)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>__libc_recv (62 samples, 7.77%)</title><rect x="642.9" y="805" width="91.7" height="15.0" fill="rgb(241,27,20)" rx="2" ry="2" />
<text  x="645.88" y="815.5" >__libc_recv</text>
</g>
<g >
<title>security_socket_sendmsg (1 samples, 0.13%)</title><rect x="770.1" y="741" width="1.4" height="15.0" fill="rgb(208,60,45)" rx="2" ry="2" />
<text  x="773.05" y="751.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.13%)</title><rect x="57.3" y="901" width="1.5" height="15.0" fill="rgb(213,178,18)" rx="2" ry="2" />
<text  x="60.32" y="911.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (6 samples, 0.75%)</title><rect x="356.0" y="549" width="8.9" height="15.0" fill="rgb(226,106,23)" rx="2" ry="2" />
<text  x="359.02" y="559.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.13%)</title><rect x="305.7" y="709" width="1.5" height="15.0" fill="rgb(245,142,27)" rx="2" ry="2" />
<text  x="308.74" y="719.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="807.0" y="661" width="1.5" height="15.0" fill="rgb(238,46,50)" rx="2" ry="2" />
<text  x="810.02" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::Serializer&lt;W&gt;::new (1 samples, 0.13%)</title><rect x="988.9" y="965" width="1.5" height="15.0" fill="rgb(252,223,1)" rx="2" ry="2" />
<text  x="991.90" y="975.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::h640bd2c5797e63da (1 samples, 0.13%)</title><rect x="1185.6" y="1157" width="1.4" height="15.0" fill="rgb(240,161,3)" rx="2" ry="2" />
<text  x="1188.56" y="1167.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::try_lock (2 samples, 0.25%)</title><rect x="122.4" y="949" width="2.9" height="15.0" fill="rgb(210,126,54)" rx="2" ry="2" />
<text  x="125.38" y="959.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.13%)</title><rect x="770.1" y="677" width="1.4" height="15.0" fill="rgb(227,73,17)" rx="2" ry="2" />
<text  x="773.05" y="687.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.13%)</title><rect x="555.6" y="709" width="1.5" height="15.0" fill="rgb(226,16,51)" rx="2" ry="2" />
<text  x="558.64" y="719.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::state_machine (1 samples, 0.13%)</title><rect x="997.8" y="1173" width="1.4" height="15.0" fill="rgb(245,217,32)" rx="2" ry="2" />
<text  x="1000.77" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.13%)</title><rect x="117.9" y="949" width="1.5" height="15.0" fill="rgb(210,182,51)" rx="2" ry="2" />
<text  x="120.94" y="959.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="611.8" y="437" width="1.5" height="15.0" fill="rgb(254,207,22)" rx="2" ry="2" />
<text  x="614.83" y="447.5" ></text>
</g>
<g >
<title>__libc_send (6 samples, 0.75%)</title><rect x="974.1" y="869" width="8.9" height="15.0" fill="rgb(242,93,35)" rx="2" ry="2" />
<text  x="977.11" y="879.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_object (4 samples, 0.50%)</title><rect x="983.0" y="933" width="5.9" height="15.0" fill="rgb(222,97,23)" rx="2" ry="2" />
<text  x="985.98" y="943.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock (1 samples, 0.13%)</title><rect x="72.1" y="917" width="1.5" height="15.0" fill="rgb(228,131,2)" rx="2" ry="2" />
<text  x="75.11" y="927.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.13%)</title><rect x="675.4" y="661" width="1.5" height="15.0" fill="rgb(225,13,25)" rx="2" ry="2" />
<text  x="678.41" y="671.5" ></text>
</g>
<g >
<title>core::mem::replace (10 samples, 1.25%)</title><rect x="385.6" y="741" width="14.8" height="15.0" fill="rgb(234,2,7)" rx="2" ry="2" />
<text  x="388.59" y="751.5" ></text>
</g>
<g >
<title>serde_json::read::next_or_eof (53 samples, 6.64%)</title><rect x="322.0" y="805" width="78.4" height="15.0" fill="rgb(247,163,7)" rx="2" ry="2" />
<text  x="325.01" y="815.5" >serde_jso..</text>
</g>
<g >
<title>__wake_up_sync_key (41 samples, 5.14%)</title><rect x="878.0" y="293" width="60.6" height="15.0" fill="rgb(247,135,18)" rx="2" ry="2" />
<text  x="880.99" y="303.5" >__wake..</text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (18 samples, 2.26%)</title><rect x="150.5" y="757" width="26.6" height="15.0" fill="rgb(245,154,8)" rx="2" ry="2" />
<text  x="153.48" y="767.5" >a..</text>
</g>
<g >
<title>__libc_recv (38 samples, 4.76%)</title><rect x="563.0" y="677" width="56.2" height="15.0" fill="rgb(208,62,19)" rx="2" ry="2" />
<text  x="566.03" y="687.5" >__lib..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.25%)</title><rect x="89.8" y="949" width="3.0" height="15.0" fill="rgb(231,28,22)" rx="2" ry="2" />
<text  x="92.85" y="959.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (3 samples, 0.38%)</title><rect x="579.3" y="405" width="4.4" height="15.0" fill="rgb(212,35,47)" rx="2" ry="2" />
<text  x="582.30" y="415.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::Command&gt;::deserialize (407 samples, 51.00%)</title><rect x="135.7" y="981" width="601.8" height="15.0" fill="rgb(220,156,54)" rx="2" ry="2" />
<text  x="138.69" y="991.5" >cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serd..</text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (5 samples, 0.63%)</title><rect x="128.3" y="933" width="7.4" height="15.0" fill="rgb(215,22,53)" rx="2" ry="2" />
<text  x="131.30" y="943.5" ></text>
</g>
<g >
<title>core::alloc::Layout::padding_needed_for (2 samples, 0.25%)</title><rect x="302.8" y="709" width="2.9" height="15.0" fill="rgb(205,195,52)" rx="2" ry="2" />
<text  x="305.78" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.38%)</title><rect x="15.9" y="981" width="4.5" height="15.0" fill="rgb(250,213,33)" rx="2" ry="2" />
<text  x="18.91" y="991.5" ></text>
</g>
<g >
<title>std::sys_common::rwlock::RWLock::read (5 samples, 0.63%)</title><rect x="128.3" y="949" width="7.4" height="15.0" fill="rgb(237,114,18)" rx="2" ry="2" />
<text  x="131.30" y="959.5" ></text>
</g>
<g >
<title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (2 samples, 0.25%)</title><rect x="283.6" y="741" width="2.9" height="15.0" fill="rgb(236,186,53)" rx="2" ry="2" />
<text  x="286.56" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="855.8" y="693" width="1.5" height="15.0" fill="rgb(240,169,21)" rx="2" ry="2" />
<text  x="858.81" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.13%)</title><rect x="1185.6" y="421" width="1.4" height="15.0" fill="rgb(232,73,41)" rx="2" ry="2" />
<text  x="1188.56" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (52 samples, 6.52%)</title><rect x="449.2" y="725" width="76.9" height="15.0" fill="rgb(221,73,50)" rx="2" ry="2" />
<text  x="452.17" y="735.5" >std::sys..</text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (50 samples, 6.27%)</title><rect x="742.0" y="917" width="73.9" height="15.0" fill="rgb(250,65,39)" rx="2" ry="2" />
<text  x="744.95" y="927.5" >serde_js..</text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="826.2" y="821" width="1.5" height="15.0" fill="rgb(248,145,25)" rx="2" ry="2" />
<text  x="829.24" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.13%)</title><rect x="129.8" y="917" width="1.5" height="15.0" fill="rgb(250,130,31)" rx="2" ry="2" />
<text  x="132.77" y="927.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.25%)</title><rect x="957.8" y="741" width="3.0" height="15.0" fill="rgb(217,197,23)" rx="2" ry="2" />
<text  x="960.84" y="751.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (6 samples, 0.75%)</title><rect x="974.1" y="917" width="8.9" height="15.0" fill="rgb(217,143,0)" rx="2" ry="2" />
<text  x="977.11" y="927.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.13%)</title><rect x="1005.2" y="1029" width="1.4" height="15.0" fill="rgb(231,109,34)" rx="2" ry="2" />
<text  x="1008.16" y="1039.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.13%)</title><rect x="104.6" y="901" width="1.5" height="15.0" fill="rgb(234,176,34)" rx="2" ry="2" />
<text  x="107.64" y="911.5" ></text>
</g>
<g >
<title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (6 samples, 0.75%)</title><rect x="64.7" y="965" width="8.9" height="15.0" fill="rgb(245,175,31)" rx="2" ry="2" />
<text  x="67.71" y="975.5" ></text>
</g>
<g >
<title>__ip_local_out (3 samples, 0.38%)</title><rect x="860.3" y="613" width="4.4" height="15.0" fill="rgb(241,182,23)" rx="2" ry="2" />
<text  x="863.25" y="623.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.13%)</title><rect x="57.3" y="837" width="1.5" height="15.0" fill="rgb(222,198,5)" rx="2" ry="2" />
<text  x="60.32" y="847.5" ></text>
</g>
<g >
<title>std::rt::lang_start (126 samples, 15.79%)</title><rect x="999.2" y="1189" width="186.4" height="15.0" fill="rgb(208,77,25)" rx="2" ry="2" />
<text  x="1002.25" y="1199.5" >std::rt::lang_start</text>
</g>
<g >
<title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (18 samples, 2.26%)</title><rect x="150.5" y="789" width="26.6" height="15.0" fill="rgb(254,36,22)" rx="2" ry="2" />
<text  x="153.48" y="799.5" >&lt;..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (47 samples, 5.89%)</title><rect x="870.6" y="373" width="69.5" height="15.0" fill="rgb(205,38,3)" rx="2" ry="2" />
<text  x="873.60" y="383.5" >ip_prot..</text>
</g>
<g >
<title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.25%)</title><rect x="125.3" y="949" width="3.0" height="15.0" fill="rgb(206,136,45)" rx="2" ry="2" />
<text  x="128.34" y="959.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (1 samples, 0.13%)</title><rect x="191.9" y="485" width="1.5" height="15.0" fill="rgb(220,141,26)" rx="2" ry="2" />
<text  x="194.88" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (5 samples, 0.63%)</title><rect x="165.3" y="661" width="7.4" height="15.0" fill="rgb(246,214,48)" rx="2" ry="2" />
<text  x="168.26" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="620.7" y="677" width="1.5" height="15.0" fill="rgb(219,112,48)" rx="2" ry="2" />
<text  x="623.70" y="687.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count::PANIC_COUNT::__getit (1 samples, 0.13%)</title><rect x="81.0" y="837" width="1.5" height="15.0" fill="rgb(236,213,45)" rx="2" ry="2" />
<text  x="83.98" y="847.5" ></text>
</g>
<g >
<title>__rdl_alloc (1 samples, 0.13%)</title><rect x="273.2" y="709" width="1.5" height="15.0" fill="rgb(216,148,52)" rx="2" ry="2" />
<text  x="276.21" y="719.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (2 samples, 0.25%)</title><rect x="747.9" y="709" width="2.9" height="15.0" fill="rgb(236,217,32)" rx="2" ry="2" />
<text  x="750.87" y="719.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read (3 samples, 0.38%)</title><rect x="83.9" y="933" width="4.5" height="15.0" fill="rgb(252,141,14)" rx="2" ry="2" />
<text  x="86.93" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (36 samples, 4.51%)</title><rect x="566.0" y="629" width="53.2" height="15.0" fill="rgb(223,225,40)" rx="2" ry="2" />
<text  x="568.99" y="639.5" >__x64..</text>
</g>
<g >
<title>hash_conntrack_raw (1 samples, 0.13%)</title><rect x="580.8" y="373" width="1.5" height="15.0" fill="rgb(226,71,38)" rx="2" ry="2" />
<text  x="583.78" y="383.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.25%)</title><rect x="540.9" y="741" width="2.9" height="15.0" fill="rgb(236,17,54)" rx="2" ry="2" />
<text  x="543.85" y="751.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.13%)</title><rect x="61.8" y="949" width="1.4" height="15.0" fill="rgb(250,4,22)" rx="2" ry="2" />
<text  x="64.75" y="959.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (2 samples, 0.25%)</title><rect x="619.2" y="725" width="3.0" height="15.0" fill="rgb(238,87,40)" rx="2" ry="2" />
<text  x="622.22" y="735.5" ></text>
</g>
<g >
<title>serde_json::de::ParserNumber::visit (2 samples, 0.25%)</title><rect x="622.2" y="837" width="2.9" height="15.0" fill="rgb(253,75,19)" rx="2" ry="2" />
<text  x="625.18" y="847.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.13%)</title><rect x="603.0" y="85" width="1.4" height="15.0" fill="rgb(244,147,5)" rx="2" ry="2" />
<text  x="605.96" y="95.5" ></text>
</g>
<g >
<title>tcp_recvmsg (47 samples, 5.89%)</title><rect x="663.6" y="693" width="69.5" height="15.0" fill="rgb(248,58,46)" rx="2" ry="2" />
<text  x="666.58" y="703.5" >tcp_rec..</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::try_lock (2 samples, 0.25%)</title><rect x="122.4" y="933" width="2.9" height="15.0" fill="rgb(229,141,54)" rx="2" ry="2" />
<text  x="125.38" y="943.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (2 samples, 0.25%)</title><rect x="156.4" y="677" width="2.9" height="15.0" fill="rgb(247,48,13)" rx="2" ry="2" />
<text  x="159.39" y="687.5" ></text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.25%)</title><rect x="79.5" y="917" width="3.0" height="15.0" fill="rgb(246,219,34)" rx="2" ry="2" />
<text  x="82.50" y="927.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.25%)</title><rect x="659.1" y="725" width="3.0" height="15.0" fill="rgb(234,38,18)" rx="2" ry="2" />
<text  x="662.15" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.38%)</title><rect x="431.4" y="821" width="4.5" height="15.0" fill="rgb(223,144,0)" rx="2" ry="2" />
<text  x="434.43" y="831.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (10 samples, 1.25%)</title><rect x="261.4" y="741" width="14.8" height="15.0" fill="rgb(216,152,30)" rx="2" ry="2" />
<text  x="264.38" y="751.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.13%)</title><rect x="997.8" y="997" width="1.4" height="15.0" fill="rgb(227,174,22)" rx="2" ry="2" />
<text  x="1000.77" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="180.1" y="613" width="1.4" height="15.0" fill="rgb(245,2,51)" rx="2" ry="2" />
<text  x="183.05" y="623.5" ></text>
</g>
<g >
<title>link_path_walk.part.34 (1 samples, 0.13%)</title><rect x="996.3" y="885" width="1.5" height="15.0" fill="rgb(223,95,6)" rx="2" ry="2" />
<text  x="999.29" y="895.5" ></text>
</g>
<g >
<title>__sys_sendto (3 samples, 0.38%)</title><rect x="984.5" y="805" width="4.4" height="15.0" fill="rgb(219,81,8)" rx="2" ry="2" />
<text  x="987.46" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="197.8" y="725" width="1.5" height="15.0" fill="rgb(250,148,46)" rx="2" ry="2" />
<text  x="200.79" y="735.5" ></text>
</g>
<g >
<title>__ip_local_out (6 samples, 0.75%)</title><rect x="707.9" y="565" width="8.9" height="15.0" fill="rgb(232,169,10)" rx="2" ry="2" />
<text  x="710.94" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (45 samples, 5.64%)</title><rect x="243.6" y="757" width="66.6" height="15.0" fill="rgb(254,85,14)" rx="2" ry="2" />
<text  x="246.63" y="767.5" >alloc::..</text>
</g>
<g >
<title>[server] (1 samples, 0.13%)</title><rect x="1024.4" y="1013" width="1.5" height="15.0" fill="rgb(213,221,27)" rx="2" ry="2" />
<text  x="1027.39" y="1023.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.13%)</title><rect x="33.7" y="853" width="1.4" height="15.0" fill="rgb(227,2,19)" rx="2" ry="2" />
<text  x="36.66" y="863.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (4 samples, 0.50%)</title><rect x="276.2" y="725" width="5.9" height="15.0" fill="rgb(223,78,28)" rx="2" ry="2" />
<text  x="279.17" y="735.5" ></text>
</g>
<g >
<title>[ld-2.27.so] (1 samples, 0.13%)</title><rect x="993.3" y="1205" width="1.5" height="15.0" fill="rgb(232,142,30)" rx="2" ry="2" />
<text  x="996.33" y="1215.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="981.5" y="789" width="1.5" height="15.0" fill="rgb(252,122,18)" rx="2" ry="2" />
<text  x="984.50" y="799.5" ></text>
</g>
<g >
<title>core::mem::take (1 samples, 0.13%)</title><rect x="181.5" y="709" width="1.5" height="15.0" fill="rgb(221,181,49)" rx="2" ry="2" />
<text  x="184.53" y="719.5" ></text>
</g>
<g >
<title>serde_json::de::ParserNumber::visit (1 samples, 0.13%)</title><rect x="194.8" y="789" width="1.5" height="15.0" fill="rgb(218,202,5)" rx="2" ry="2" />
<text  x="197.84" y="799.5" ></text>
</g>
<g >
<title>do_nanosleep (47 samples, 5.89%)</title><rect x="1113.1" y="933" width="69.5" height="15.0" fill="rgb(209,69,47)" rx="2" ry="2" />
<text  x="1116.11" y="943.5" >do_nano..</text>
</g>
<g >
<title>&lt;core::iter::LoopState&lt;C,B&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.13%)</title><rect x="54.4" y="933" width="1.4" height="15.0" fill="rgb(228,181,38)" rx="2" ry="2" />
<text  x="57.36" y="943.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (1 samples, 0.13%)</title><rect x="555.6" y="789" width="1.5" height="15.0" fill="rgb(237,217,49)" rx="2" ry="2" />
<text  x="558.64" y="799.5" ></text>
</g>
<g >
<title>serde::de::VariantAccess::newtype_variant (55 samples, 6.89%)</title><rect x="543.8" y="933" width="81.3" height="15.0" fill="rgb(231,136,18)" rx="2" ry="2" />
<text  x="546.81" y="943.5" >serde::de..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="180.1" y="517" width="1.4" height="15.0" fill="rgb(249,103,49)" rx="2" ry="2" />
<text  x="183.05" y="527.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.25%)</title><rect x="521.6" y="581" width="3.0" height="15.0" fill="rgb(235,137,16)" rx="2" ry="2" />
<text  x="524.63" y="591.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.13%)</title><rect x="1099.8" y="933" width="1.5" height="15.0" fill="rgb(252,220,48)" rx="2" ry="2" />
<text  x="1102.80" y="943.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.38%)</title><rect x="51.4" y="949" width="4.4" height="15.0" fill="rgb(246,48,4)" rx="2" ry="2" />
<text  x="54.40" y="959.5" ></text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.25%)</title><rect x="860.3" y="565" width="2.9" height="15.0" fill="rgb(237,175,36)" rx="2" ry="2" />
<text  x="863.25" y="575.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (1 samples, 0.13%)</title><rect x="1185.6" y="1125" width="1.4" height="15.0" fill="rgb(214,64,12)" rx="2" ry="2" />
<text  x="1188.56" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="274.7" y="725" width="1.5" height="15.0" fill="rgb(247,160,4)" rx="2" ry="2" />
<text  x="277.69" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.13%)</title><rect x="180.1" y="645" width="1.4" height="15.0" fill="rgb(238,2,38)" rx="2" ry="2" />
<text  x="183.05" y="655.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (2 samples, 0.25%)</title><rect x="196.3" y="869" width="3.0" height="15.0" fill="rgb(251,154,36)" rx="2" ry="2" />
<text  x="199.32" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.63%)</title><rect x="23.3" y="965" width="7.4" height="15.0" fill="rgb(206,95,54)" rx="2" ry="2" />
<text  x="26.31" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check (2 samples, 0.25%)</title><rect x="48.4" y="949" width="3.0" height="15.0" fill="rgb(240,176,48)" rx="2" ry="2" />
<text  x="51.45" y="959.5" ></text>
</g>
<g >
<title>read_hv_clock_tsc (1 samples, 0.13%)</title><rect x="364.9" y="501" width="1.5" height="15.0" fill="rgb(214,18,19)" rx="2" ry="2" />
<text  x="367.89" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.50%)</title><rect x="409.2" y="773" width="6.0" height="15.0" fill="rgb(223,44,37)" rx="2" ry="2" />
<text  x="412.25" y="783.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (2 samples, 0.25%)</title><rect x="540.9" y="789" width="2.9" height="15.0" fill="rgb(238,189,11)" rx="2" ry="2" />
<text  x="543.85" y="799.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.13%)</title><rect x="987.4" y="757" width="1.5" height="15.0" fill="rgb(208,79,37)" rx="2" ry="2" />
<text  x="990.42" y="767.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1 samples, 0.13%)</title><rect x="994.8" y="1077" width="1.5" height="15.0" fill="rgb(227,201,8)" rx="2" ry="2" />
<text  x="997.81" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="734.6" y="869" width="1.4" height="15.0" fill="rgb(216,95,53)" rx="2" ry="2" />
<text  x="737.56" y="879.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (663 samples, 83.08%)</title><rect x="10.0" y="1189" width="980.4" height="15.0" fill="rgb(253,167,29)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >std::sys_common::thread::start_thread</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.13%)</title><rect x="1185.6" y="933" width="1.4" height="15.0" fill="rgb(235,223,38)" rx="2" ry="2" />
<text  x="1188.56" y="943.5" ></text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 8.27%)</title><rect x="440.3" y="789" width="97.6" height="15.0" fill="rgb(244,33,5)" rx="2" ry="2" />
<text  x="443.30" y="799.5" >&lt;serde_json..</text>
</g>
<g >
<title>skb_page_frag_refill (1 samples, 0.13%)</title><rect x="812.9" y="661" width="1.5" height="15.0" fill="rgb(218,136,22)" rx="2" ry="2" />
<text  x="815.93" y="671.5" ></text>
</g>
<g >
<title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.38%)</title><rect x="67.7" y="949" width="4.4" height="15.0" fill="rgb(232,122,52)" rx="2" ry="2" />
<text  x="70.67" y="959.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (1 samples, 0.13%)</title><rect x="125.3" y="917" width="1.5" height="15.0" fill="rgb(226,33,44)" rx="2" ry="2" />
<text  x="128.34" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 1.00%)</title><rect x="36.6" y="965" width="11.8" height="15.0" fill="rgb(248,180,25)" rx="2" ry="2" />
<text  x="39.62" y="975.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.25%)</title><rect x="619.2" y="709" width="3.0" height="15.0" fill="rgb(222,184,48)" rx="2" ry="2" />
<text  x="622.22" y="719.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.13%)</title><rect x="354.5" y="597" width="1.5" height="15.0" fill="rgb(233,152,53)" rx="2" ry="2" />
<text  x="357.54" y="607.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.38%)</title><rect x="994.8" y="1237" width="4.4" height="15.0" fill="rgb(222,79,35)" rx="2" ry="2" />
<text  x="997.81" y="1247.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.13%)</title><rect x="1009.6" y="885" width="1.5" height="15.0" fill="rgb(238,200,38)" rx="2" ry="2" />
<text  x="1012.60" y="895.5" ></text>
</g>
<g >
<title>yaml_rust::parser::Parser&lt;T&gt;::load_mapping (1 samples, 0.13%)</title><rect x="997.8" y="1221" width="1.4" height="15.0" fill="rgb(224,99,6)" rx="2" ry="2" />
<text  x="1000.77" y="1231.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.13%)</title><rect x="372.3" y="533" width="1.5" height="15.0" fill="rgb(213,156,46)" rx="2" ry="2" />
<text  x="375.28" y="543.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::discard (1 samples, 0.13%)</title><rect x="626.6" y="933" width="1.5" height="15.0" fill="rgb(234,79,41)" rx="2" ry="2" />
<text  x="629.62" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.13%)</title><rect x="33.7" y="645" width="1.4" height="15.0" fill="rgb(227,188,10)" rx="2" ry="2" />
<text  x="36.66" y="655.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.13%)</title><rect x="372.3" y="549" width="1.5" height="15.0" fill="rgb(233,142,39)" rx="2" ry="2" />
<text  x="375.28" y="559.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.13%)</title><rect x="1185.6" y="661" width="1.4" height="15.0" fill="rgb(225,53,32)" rx="2" ry="2" />
<text  x="1188.56" y="671.5" ></text>
</g>
<g >
<title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (2 samples, 0.25%)</title><rect x="622.2" y="821" width="2.9" height="15.0" fill="rgb(228,97,2)" rx="2" ry="2" />
<text  x="625.18" y="831.5" ></text>
</g>
<g >
<title>clone (1 samples, 0.13%)</title><rect x="1185.6" y="1237" width="1.4" height="15.0" fill="rgb(243,210,9)" rx="2" ry="2" />
<text  x="1188.56" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="821.8" y="805" width="1.5" height="15.0" fill="rgb(248,36,17)" rx="2" ry="2" />
<text  x="824.80" y="815.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.13%)</title><rect x="997.8" y="1029" width="1.4" height="15.0" fill="rgb(253,128,52)" rx="2" ry="2" />
<text  x="1000.77" y="1039.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.13%)</title><rect x="1185.6" y="693" width="1.4" height="15.0" fill="rgb(253,205,14)" rx="2" ry="2" />
<text  x="1188.56" y="703.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.25%)</title><rect x="669.5" y="661" width="3.0" height="15.0" fill="rgb(249,68,23)" rx="2" ry="2" />
<text  x="672.50" y="671.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 8.02%)</title><rect x="641.4" y="885" width="94.6" height="15.0" fill="rgb(233,198,12)" rx="2" ry="2" />
<text  x="644.40" y="895.5" >&lt;std::io::B..</text>
</g>
<g >
<title>__sys_sendto (6 samples, 0.75%)</title><rect x="807.0" y="757" width="8.9" height="15.0" fill="rgb(224,159,33)" rx="2" ry="2" />
<text  x="810.02" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::Thread::sleep (103 samples, 12.91%)</title><rect x="1031.8" y="1029" width="152.3" height="15.0" fill="rgb(232,113,37)" rx="2" ry="2" />
<text  x="1034.78" y="1039.5" >std::sys::unix::thr..</text>
</g>
<g >
<title>core::slice::from_raw_parts (2 samples, 0.25%)</title><rect x="159.3" y="645" width="3.0" height="15.0" fill="rgb(228,38,50)" rx="2" ry="2" />
<text  x="162.35" y="655.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.13%)</title><rect x="1185.6" y="741" width="1.4" height="15.0" fill="rgb(237,174,37)" rx="2" ry="2" />
<text  x="1188.56" y="751.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek_or_null (41 samples, 5.14%)</title><rect x="558.6" y="821" width="60.6" height="15.0" fill="rgb(225,151,15)" rx="2" ry="2" />
<text  x="561.60" y="831.5" >serde_..</text>
</g>
<g >
<title>ip_local_deliver_finish (6 samples, 0.75%)</title><rect x="597.0" y="213" width="8.9" height="15.0" fill="rgb(250,71,7)" rx="2" ry="2" />
<text  x="600.04" y="223.5" ></text>
</g>
<g >
<title>config::source::Source::collect_to (1 samples, 0.13%)</title><rect x="996.3" y="1173" width="1.5" height="15.0" fill="rgb(227,228,21)" rx="2" ry="2" />
<text  x="999.29" y="1183.5" ></text>
</g>
<g >
<title>ip_output (54 samples, 6.77%)</title><rect x="864.7" y="613" width="79.8" height="15.0" fill="rgb(224,186,5)" rx="2" ry="2" />
<text  x="867.69" y="623.5" >ip_output</text>
</g>
<g >
<title>std::rt::lang_start_internal (126 samples, 15.79%)</title><rect x="999.2" y="1173" width="186.4" height="15.0" fill="rgb(206,54,15)" rx="2" ry="2" />
<text  x="1002.25" y="1183.5" >std::rt::lang_start_inte..</text>
</g>
<g >
<title>release_sock (1 samples, 0.13%)</title><rect x="807.0" y="693" width="1.5" height="15.0" fill="rgb(206,44,46)" rx="2" ry="2" />
<text  x="810.02" y="703.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.63%)</title><rect x="187.4" y="709" width="7.4" height="15.0" fill="rgb(212,220,27)" rx="2" ry="2" />
<text  x="190.44" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::poison::map_result (2 samples, 0.25%)</title><rect x="69.1" y="933" width="3.0" height="15.0" fill="rgb(233,167,26)" rx="2" ry="2" />
<text  x="72.15" y="943.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.13%)</title><rect x="81.0" y="789" width="1.5" height="15.0" fill="rgb(223,106,39)" rx="2" ry="2" />
<text  x="83.98" y="799.5" ></text>
</g>
<g >
<title>iptable_security_hook (2 samples, 0.25%)</title><rect x="860.3" y="581" width="2.9" height="15.0" fill="rgb(213,103,15)" rx="2" ry="2" />
<text  x="863.25" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (2 samples, 0.25%)</title><rect x="1008.1" y="1045" width="3.0" height="15.0" fill="rgb(231,26,10)" rx="2" ry="2" />
<text  x="1011.12" y="1055.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.25%)</title><rect x="115.0" y="949" width="2.9" height="15.0" fill="rgb(252,226,42)" rx="2" ry="2" />
<text  x="117.99" y="959.5" ></text>
</g>
<g >
<title>core::mem::size_of_val (2 samples, 0.25%)</title><rect x="224.4" y="757" width="3.0" height="15.0" fill="rgb(210,187,35)" rx="2" ry="2" />
<text  x="227.41" y="767.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.13%)</title><rect x="842.5" y="741" width="1.5" height="15.0" fill="rgb(227,228,52)" rx="2" ry="2" />
<text  x="845.51" y="751.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.13%)</title><rect x="304.3" y="693" width="1.4" height="15.0" fill="rgb(250,63,44)" rx="2" ry="2" />
<text  x="307.26" y="703.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.13%)</title><rect x="968.2" y="837" width="1.5" height="15.0" fill="rgb(248,94,10)" rx="2" ry="2" />
<text  x="971.20" y="847.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.13%)</title><rect x="604.4" y="37" width="1.5" height="15.0" fill="rgb(253,102,32)" rx="2" ry="2" />
<text  x="607.44" y="47.5" ></text>
</g>
<g >
<title>config::path::parser::raw_ident (1 samples, 0.13%)</title><rect x="994.8" y="1061" width="1.5" height="15.0" fill="rgb(234,102,24)" rx="2" ry="2" />
<text  x="997.81" y="1071.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (2 samples, 0.25%)</title><rect x="85.4" y="917" width="3.0" height="15.0" fill="rgb(226,202,16)" rx="2" ry="2" />
<text  x="88.41" y="927.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::deserialize_prim_number (9 samples, 1.13%)</title><rect x="183.0" y="805" width="13.3" height="15.0" fill="rgb(243,97,22)" rx="2" ry="2" />
<text  x="186.01" y="815.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (5 samples, 0.63%)</title><rect x="511.3" y="549" width="7.4" height="15.0" fill="rgb(241,116,3)" rx="2" ry="2" />
<text  x="514.28" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.13%)</title><rect x="826.2" y="901" width="1.5" height="15.0" fill="rgb(251,130,44)" rx="2" ry="2" />
<text  x="829.24" y="911.5" ></text>
</g>
<g >
<title>sk_wait_data (16 samples, 2.01%)</title><rect x="487.6" y="565" width="23.7" height="15.0" fill="rgb(253,228,23)" rx="2" ry="2" />
<text  x="490.62" y="575.5" >s..</text>
</g>
<g >
<title>__x64_sys_recvfrom (2 samples, 0.25%)</title><rect x="540.9" y="693" width="2.9" height="15.0" fill="rgb(251,135,33)" rx="2" ry="2" />
<text  x="543.85" y="703.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc (5 samples, 0.63%)</title><rect x="276.2" y="741" width="7.4" height="15.0" fill="rgb(239,48,32)" rx="2" ry="2" />
<text  x="279.17" y="751.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (663 samples, 83.08%)</title><rect x="10.0" y="1077" width="980.4" height="15.0" fill="rgb(249,61,17)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::pop_front (1 samples, 0.13%)</title><rect x="997.8" y="1077" width="1.4" height="15.0" fill="rgb(213,114,42)" rx="2" ry="2" />
<text  x="1000.77" y="1087.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.25%)</title><rect x="941.6" y="533" width="2.9" height="15.0" fill="rgb(237,139,33)" rx="2" ry="2" />
<text  x="944.58" y="543.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (7 samples, 0.88%)</title><rect x="719.8" y="485" width="10.3" height="15.0" fill="rgb(236,22,46)" rx="2" ry="2" />
<text  x="722.77" y="495.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (49 samples, 6.14%)</title><rect x="869.1" y="533" width="72.5" height="15.0" fill="rgb(232,153,19)" rx="2" ry="2" />
<text  x="872.12" y="543.5" >do_softi..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.25%)</title><rect x="980.0" y="853" width="3.0" height="15.0" fill="rgb(246,202,40)" rx="2" ry="2" />
<text  x="983.03" y="863.5" ></text>
</g>
<g >
<title>inet_recvmsg (34 samples, 4.26%)</title><rect x="471.4" y="597" width="50.2" height="15.0" fill="rgb(212,29,30)" rx="2" ry="2" />
<text  x="474.35" y="607.5" >inet_..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.13%)</title><rect x="415.2" y="773" width="1.4" height="15.0" fill="rgb(217,225,8)" rx="2" ry="2" />
<text  x="418.16" y="783.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::new (1 samples, 0.13%)</title><rect x="737.5" y="965" width="1.5" height="15.0" fill="rgb(210,137,6)" rx="2" ry="2" />
<text  x="740.52" y="975.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="1185.6" y="1077" width="1.4" height="15.0" fill="rgb(247,52,13)" rx="2" ry="2" />
<text  x="1188.56" y="1087.5" ></text>
</g>
<g >
<title>core::cell::UnsafeCell&lt;T&gt;::get (2 samples, 0.25%)</title><rect x="131.3" y="917" width="2.9" height="15.0" fill="rgb(250,142,43)" rx="2" ry="2" />
<text  x="134.25" y="927.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.25%)</title><rect x="172.7" y="661" width="2.9" height="15.0" fill="rgb(227,30,10)" rx="2" ry="2" />
<text  x="175.66" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.13%)</title><rect x="240.7" y="773" width="1.5" height="15.0" fill="rgb(224,111,28)" rx="2" ry="2" />
<text  x="243.68" y="783.5" ></text>
</g>
<g >
<title>tcp_rcv_established (45 samples, 5.64%)</title><rect x="873.6" y="325" width="66.5" height="15.0" fill="rgb(229,157,43)" rx="2" ry="2" />
<text  x="876.56" y="335.5" >tcp_rcv..</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2 samples, 0.25%)</title><rect x="196.3" y="901" width="3.0" height="15.0" fill="rgb(228,122,42)" rx="2" ry="2" />
<text  x="199.32" y="911.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="795.2" y="837" width="1.5" height="15.0" fill="rgb(243,197,20)" rx="2" ry="2" />
<text  x="798.19" y="847.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.13%)</title><rect x="98.7" y="901" width="1.5" height="15.0" fill="rgb(205,131,19)" rx="2" ry="2" />
<text  x="101.72" y="911.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.13%)</title><rect x="938.6" y="293" width="1.5" height="15.0" fill="rgb(232,151,54)" rx="2" ry="2" />
<text  x="941.62" y="303.5" ></text>
</g>
<g >
<title>__sys_sendto (1 samples, 0.13%)</title><rect x="1185.6" y="757" width="1.4" height="15.0" fill="rgb(226,29,9)" rx="2" ry="2" />
<text  x="1188.56" y="767.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.13%)</title><rect x="576.3" y="453" width="1.5" height="15.0" fill="rgb(218,183,24)" rx="2" ry="2" />
<text  x="579.34" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.13%)</title><rect x="1187.0" y="1205" width="1.5" height="15.0" fill="rgb(244,183,12)" rx="2" ry="2" />
<text  x="1190.04" y="1215.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.13%)</title><rect x="770.1" y="661" width="1.4" height="15.0" fill="rgb(236,210,47)" rx="2" ry="2" />
<text  x="773.05" y="671.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.13%)</title><rect x="604.4" y="69" width="1.5" height="15.0" fill="rgb(221,91,6)" rx="2" ry="2" />
<text  x="607.44" y="79.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (23 samples, 2.88%)</title><rect x="149.0" y="805" width="34.0" height="15.0" fill="rgb(215,132,39)" rx="2" ry="2" />
<text  x="152.00" y="815.5" >&lt;&amp;..</text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 0.38%)</title><rect x="724.2" y="277" width="4.4" height="15.0" fill="rgb(210,197,13)" rx="2" ry="2" />
<text  x="727.21" y="287.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.13%)</title><rect x="731.6" y="677" width="1.5" height="15.0" fill="rgb(248,153,40)" rx="2" ry="2" />
<text  x="734.60" y="687.5" ></text>
</g>
<g >
<title>ip_local_deliver (5 samples, 0.63%)</title><rect x="722.7" y="357" width="7.4" height="15.0" fill="rgb(244,90,24)" rx="2" ry="2" />
<text  x="725.73" y="367.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.25%)</title><rect x="1008.1" y="1013" width="3.0" height="15.0" fill="rgb(220,136,23)" rx="2" ry="2" />
<text  x="1011.12" y="1023.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (34 samples, 4.26%)</title><rect x="146.0" y="869" width="50.3" height="15.0" fill="rgb(241,61,50)" rx="2" ry="2" />
<text  x="149.04" y="879.5" >&lt;serd..</text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (4 samples, 0.50%)</title><rect x="817.4" y="853" width="5.9" height="15.0" fill="rgb(219,187,32)" rx="2" ry="2" />
<text  x="820.37" y="863.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (89 samples, 11.15%)</title><rect x="832.2" y="901" width="131.6" height="15.0" fill="rgb(211,225,7)" rx="2" ry="2" />
<text  x="835.16" y="911.5" >&lt;&amp;std::net::tcp:..</text>
</g>
<g >
<title>__d_lookup_rcu (1 samples, 0.13%)</title><rect x="996.3" y="837" width="1.5" height="15.0" fill="rgb(205,113,45)" rx="2" ry="2" />
<text  x="999.29" y="847.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (1 samples, 0.13%)</title><rect x="707.9" y="549" width="1.5" height="15.0" fill="rgb(249,11,11)" rx="2" ry="2" />
<text  x="710.94" y="559.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.25%)</title><rect x="801.1" y="869" width="3.0" height="15.0" fill="rgb(245,79,51)" rx="2" ry="2" />
<text  x="804.10" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg (10 samples, 1.25%)</title><rect x="747.9" y="725" width="14.8" height="15.0" fill="rgb(222,123,52)" rx="2" ry="2" />
<text  x="750.87" y="735.5" ></text>
</g>
<g >
<title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 4.89%)</title><rect x="325.0" y="773" width="57.6" height="15.0" fill="rgb(220,179,14)" rx="2" ry="2" />
<text  x="327.96" y="783.5" >&lt;serde..</text>
</g>
<g >
<title>config::source::Source::collect_to (1 samples, 0.13%)</title><rect x="996.3" y="1205" width="1.5" height="15.0" fill="rgb(241,63,50)" rx="2" ry="2" />
<text  x="999.29" y="1215.5" ></text>
</g>
<g >
<title>__libc_send (6 samples, 0.75%)</title><rect x="762.7" y="837" width="8.8" height="15.0" fill="rgb(217,193,9)" rx="2" ry="2" />
<text  x="765.66" y="847.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="33.7" y="597" width="1.4" height="15.0" fill="rgb(206,88,48)" rx="2" ry="2" />
<text  x="36.66" y="607.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.13%)</title><rect x="154.9" y="677" width="1.5" height="15.0" fill="rgb(224,223,39)" rx="2" ry="2" />
<text  x="157.91" y="687.5" ></text>
</g>
<g >
<title>__libc_send (4 samples, 0.50%)</title><rect x="983.0" y="869" width="5.9" height="15.0" fill="rgb(245,20,41)" rx="2" ry="2" />
<text  x="985.98" y="879.5" ></text>
</g>
<g >
<title>std::sys_common::thread::start_thread (1 samples, 0.13%)</title><rect x="1185.6" y="1189" width="1.4" height="15.0" fill="rgb(249,5,39)" rx="2" ry="2" />
<text  x="1188.56" y="1199.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.13%)</title><rect x="61.8" y="965" width="1.4" height="15.0" fill="rgb(234,34,2)" rx="2" ry="2" />
<text  x="64.75" y="975.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_unlock (2 samples, 0.25%)</title><rect x="55.8" y="933" width="3.0" height="15.0" fill="rgb(249,30,16)" rx="2" ry="2" />
<text  x="58.84" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (68 samples, 8.52%)</title><rect x="1083.5" y="981" width="100.6" height="15.0" fill="rgb(231,83,51)" rx="2" ry="2" />
<text  x="1086.53" y="991.5" >do_syscall_64</text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.13%)</title><rect x="996.3" y="933" width="1.5" height="15.0" fill="rgb(242,45,44)" rx="2" ry="2" />
<text  x="999.29" y="943.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.25%)</title><rect x="521.6" y="549" width="3.0" height="15.0" fill="rgb(242,85,7)" rx="2" ry="2" />
<text  x="524.63" y="559.5" ></text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.13%)</title><rect x="381.2" y="709" width="1.4" height="15.0" fill="rgb(231,26,23)" rx="2" ry="2" />
<text  x="384.15" y="719.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (89 samples, 11.15%)</title><rect x="832.2" y="885" width="131.6" height="15.0" fill="rgb(205,110,25)" rx="2" ry="2" />
<text  x="835.16" y="895.5" >std::sys_common:..</text>
</g>
<g >
<title>__sys_sendto (83 samples, 10.40%)</title><rect x="839.5" y="805" width="122.8" height="15.0" fill="rgb(239,176,41)" rx="2" ry="2" />
<text  x="842.55" y="815.5" >__sys_sendto</text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.13%)</title><rect x="1185.6" y="645" width="1.4" height="15.0" fill="rgb(253,145,33)" rx="2" ry="2" />
<text  x="1188.56" y="655.5" ></text>
</g>
<g >
<title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (4 samples, 0.50%)</title><rect x="177.1" y="773" width="5.9" height="15.0" fill="rgb(229,100,6)" rx="2" ry="2" />
<text  x="180.09" y="783.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="617.7" y="565" width="1.5" height="15.0" fill="rgb(234,41,54)" rx="2" ry="2" />
<text  x="620.74" y="575.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.25%)</title><rect x="199.3" y="933" width="2.9" height="15.0" fill="rgb(246,72,54)" rx="2" ry="2" />
<text  x="202.27" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.50%)</title><rect x="983.0" y="901" width="5.9" height="15.0" fill="rgb(209,46,49)" rx="2" ry="2" />
<text  x="985.98" y="911.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.13%)</title><rect x="429.9" y="757" width="1.5" height="15.0" fill="rgb(210,48,12)" rx="2" ry="2" />
<text  x="432.95" y="767.5" ></text>
</g>
<g >
<title>core::mem::align_of (1 samples, 0.13%)</title><rect x="29.2" y="917" width="1.5" height="15.0" fill="rgb(242,131,35)" rx="2" ry="2" />
<text  x="32.22" y="927.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.13%)</title><rect x="1184.1" y="1093" width="1.5" height="15.0" fill="rgb(212,219,54)" rx="2" ry="2" />
<text  x="1187.09" y="1103.5" ></text>
</g>
<g >
<title>process_backlog (48 samples, 6.02%)</title><rect x="869.1" y="485" width="71.0" height="15.0" fill="rgb(227,122,4)" rx="2" ry="2" />
<text  x="872.12" y="495.5" >process_..</text>
</g>
<g >
<title>tcp_clean_rtx_queue (3 samples, 0.38%)</title><rect x="601.5" y="117" width="4.4" height="15.0" fill="rgb(208,166,26)" rx="2" ry="2" />
<text  x="604.48" y="127.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.75%)</title><rect x="422.6" y="789" width="8.8" height="15.0" fill="rgb(205,10,34)" rx="2" ry="2" />
<text  x="425.56" y="799.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.13%)</title><rect x="1022.9" y="965" width="1.5" height="15.0" fill="rgb(221,188,12)" rx="2" ry="2" />
<text  x="1025.91" y="975.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (55 samples, 6.89%)</title><rect x="543.8" y="901" width="81.3" height="15.0" fill="rgb(241,132,16)" rx="2" ry="2" />
<text  x="546.81" y="911.5" >&lt;core::ma..</text>
</g>
<g >
<title>tcp_push (1 samples, 0.13%)</title><rect x="768.6" y="693" width="1.5" height="15.0" fill="rgb(228,11,39)" rx="2" ry="2" />
<text  x="771.57" y="703.5" ></text>
</g>
<g >
<title>inet_recvmsg (35 samples, 4.39%)</title><rect x="566.0" y="581" width="51.7" height="15.0" fill="rgb(226,196,14)" rx="2" ry="2" />
<text  x="568.99" y="591.5" >inet_..</text>
</g>
<g >
<title>core::ptr::slice_from_raw_parts (1 samples, 0.13%)</title><rect x="160.8" y="629" width="1.5" height="15.0" fill="rgb(229,54,36)" rx="2" ry="2" />
<text  x="163.83" y="639.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (2 samples, 0.25%)</title><rect x="540.9" y="853" width="2.9" height="15.0" fill="rgb(254,170,25)" rx="2" ry="2" />
<text  x="543.85" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 5.76%)</title><rect x="242.2" y="773" width="68.0" height="15.0" fill="rgb(217,8,27)" rx="2" ry="2" />
<text  x="245.16" y="783.5" >alloc::..</text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (168 samples, 21.05%)</title><rect x="740.5" y="949" width="248.4" height="15.0" fill="rgb(251,202,44)" rx="2" ry="2" />
<text  x="743.48" y="959.5" >&lt;&amp;mut serde_json::ser::Serializer..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="1188.5" y="1173" width="1.5" height="15.0" fill="rgb(227,57,16)" rx="2" ry="2" />
<text  x="1191.52" y="1183.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.25%)</title><rect x="307.2" y="725" width="3.0" height="15.0" fill="rgb(212,106,18)" rx="2" ry="2" />
<text  x="310.22" y="735.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.13%)</title><rect x="60.3" y="917" width="1.5" height="15.0" fill="rgb(244,113,4)" rx="2" ry="2" />
<text  x="63.28" y="927.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.13%)</title><rect x="604.4" y="85" width="1.5" height="15.0" fill="rgb(238,111,40)" rx="2" ry="2" />
<text  x="607.44" y="95.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="619.2" y="773" width="3.0" height="15.0" fill="rgb(223,216,32)" rx="2" ry="2" />
<text  x="622.22" y="783.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.13%)</title><rect x="768.6" y="677" width="1.5" height="15.0" fill="rgb(232,114,30)" rx="2" ry="2" />
<text  x="771.57" y="687.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (1 samples, 0.13%)</title><rect x="555.6" y="805" width="1.5" height="15.0" fill="rgb(224,10,52)" rx="2" ry="2" />
<text  x="558.64" y="815.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="960.8" y="757" width="1.5" height="15.0" fill="rgb(219,41,50)" rx="2" ry="2" />
<text  x="963.80" y="767.5" ></text>
</g>
<g >
<title>ip_local_out (16 samples, 2.01%)</title><rect x="707.9" y="581" width="23.7" height="15.0" fill="rgb(217,220,43)" rx="2" ry="2" />
<text  x="710.94" y="591.5" >i..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.13%)</title><rect x="119.4" y="949" width="1.5" height="15.0" fill="rgb(224,78,34)" rx="2" ry="2" />
<text  x="122.42" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.13%)</title><rect x="1185.6" y="533" width="1.4" height="15.0" fill="rgb(234,132,51)" rx="2" ry="2" />
<text  x="1188.56" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.13%)</title><rect x="1185.6" y="1173" width="1.4" height="15.0" fill="rgb(244,142,9)" rx="2" ry="2" />
<text  x="1188.56" y="1183.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (52 samples, 6.52%)</title><rect x="449.2" y="709" width="76.9" height="15.0" fill="rgb(220,229,41)" rx="2" ry="2" />
<text  x="452.17" y="719.5" >std::sys..</text>
</g>
<g >
<title>__wake_up_common_lock (41 samples, 5.14%)</title><rect x="878.0" y="277" width="60.6" height="15.0" fill="rgb(209,207,17)" rx="2" ry="2" />
<text  x="880.99" y="287.5" >__wake..</text>
</g>
<g >
<title>exit_mmap (1 samples, 0.13%)</title><rect x="1187.0" y="1141" width="1.5" height="15.0" fill="rgb(229,118,7)" rx="2" ry="2" />
<text  x="1190.04" y="1151.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.13%)</title><rect x="490.6" y="549" width="1.5" height="15.0" fill="rgb(247,194,40)" rx="2" ry="2" />
<text  x="493.58" y="559.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (1 samples, 0.13%)</title><rect x="67.7" y="917" width="1.4" height="15.0" fill="rgb(229,166,15)" rx="2" ry="2" />
<text  x="70.67" y="927.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.13%)</title><rect x="598.5" y="165" width="1.5" height="15.0" fill="rgb(228,57,1)" rx="2" ry="2" />
<text  x="601.52" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.13%)</title><rect x="603.0" y="69" width="1.4" height="15.0" fill="rgb(242,86,15)" rx="2" ry="2" />
<text  x="605.96" y="79.5" ></text>
</g>
<g >
<title>core::slice::from_mut (1 samples, 0.13%)</title><rect x="381.2" y="741" width="1.4" height="15.0" fill="rgb(245,219,34)" rx="2" ry="2" />
<text  x="384.15" y="751.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::borrow (1 samples, 0.13%)</title><rect x="67.7" y="933" width="1.4" height="15.0" fill="rgb(243,163,14)" rx="2" ry="2" />
<text  x="70.67" y="943.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (9 samples, 1.13%)</title><rect x="690.2" y="677" width="13.3" height="15.0" fill="rgb(243,184,42)" rx="2" ry="2" />
<text  x="693.20" y="687.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.25%)</title><rect x="256.9" y="709" width="3.0" height="15.0" fill="rgb(251,39,37)" rx="2" ry="2" />
<text  x="259.94" y="719.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.38%)</title><rect x="357.5" y="501" width="4.4" height="15.0" fill="rgb(245,115,51)" rx="2" ry="2" />
<text  x="360.49" y="511.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.13%)</title><rect x="364.9" y="517" width="1.5" height="15.0" fill="rgb(210,62,52)" rx="2" ry="2" />
<text  x="367.89" y="527.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (52 samples, 6.52%)</title><rect x="1107.2" y="949" width="76.9" height="15.0" fill="rgb(254,34,14)" rx="2" ry="2" />
<text  x="1110.19" y="959.5" >hrtimer_..</text>
</g>
<g >
<title>tcp_v4_do_rcv (4 samples, 0.50%)</title><rect x="600.0" y="165" width="5.9" height="15.0" fill="rgb(249,207,14)" rx="2" ry="2" />
<text  x="603.00" y="175.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.25%)</title><rect x="373.8" y="597" width="2.9" height="15.0" fill="rgb(232,19,22)" rx="2" ry="2" />
<text  x="376.76" y="607.5" ></text>
</g>
<g >
<title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (3 samples, 0.38%)</title><rect x="823.3" y="933" width="4.4" height="15.0" fill="rgb(230,34,3)" rx="2" ry="2" />
<text  x="826.28" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 1.13%)</title><rect x="162.3" y="709" width="13.3" height="15.0" fill="rgb(240,12,41)" rx="2" ry="2" />
<text  x="165.31" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="1028.8" y="965" width="1.5" height="15.0" fill="rgb(209,15,30)" rx="2" ry="2" />
<text  x="1031.82" y="975.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.13%)</title><rect x="849.9" y="709" width="1.5" height="15.0" fill="rgb(245,165,41)" rx="2" ry="2" />
<text  x="852.90" y="719.5" ></text>
</g>
<g >
<title>ip_local_out (57 samples, 7.14%)</title><rect x="860.3" y="629" width="84.2" height="15.0" fill="rgb(253,78,36)" rx="2" ry="2" />
<text  x="863.25" y="639.5" >ip_local_..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="178.6" y="757" width="1.5" height="15.0" fill="rgb(241,216,34)" rx="2" ry="2" />
<text  x="181.57" y="767.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (1 samples, 0.13%)</title><rect x="863.2" y="581" width="1.5" height="15.0" fill="rgb(243,12,20)" rx="2" ry="2" />
<text  x="866.21" y="591.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.13%)</title><rect x="965.2" y="885" width="1.5" height="15.0" fill="rgb(239,178,9)" rx="2" ry="2" />
<text  x="968.24" y="895.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (45 samples, 5.64%)</title><rect x="873.6" y="341" width="66.5" height="15.0" fill="rgb(211,145,1)" rx="2" ry="2" />
<text  x="876.56" y="351.5" >tcp_v4_..</text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.25%)</title><rect x="765.6" y="677" width="3.0" height="15.0" fill="rgb(222,100,5)" rx="2" ry="2" />
<text  x="768.61" y="687.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (47 samples, 5.89%)</title><rect x="870.6" y="389" width="69.5" height="15.0" fill="rgb(207,1,15)" rx="2" ry="2" />
<text  x="873.60" y="399.5" >ip_loca..</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hdf7333673af1a3d8 (663 samples, 83.08%)</title><rect x="10.0" y="1045" width="980.4" height="15.0" fill="rgb(224,213,28)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::hdf7333673af1a3d8</text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.25%)</title><rect x="190.4" y="549" width="3.0" height="15.0" fill="rgb(223,32,54)" rx="2" ry="2" />
<text  x="193.40" y="559.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.25%)</title><rect x="156.4" y="661" width="2.9" height="15.0" fill="rgb(253,215,42)" rx="2" ry="2" />
<text  x="159.39" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 0.13%)</title><rect x="180.1" y="581" width="1.4" height="15.0" fill="rgb(214,157,21)" rx="2" ry="2" />
<text  x="183.05" y="591.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="852.9" y="725" width="1.4" height="15.0" fill="rgb(254,10,14)" rx="2" ry="2" />
<text  x="855.86" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="980.0" y="725" width="1.5" height="15.0" fill="rgb(233,147,54)" rx="2" ry="2" />
<text  x="983.03" y="735.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek_or_null (5 samples, 0.63%)</title><rect x="187.4" y="773" width="7.4" height="15.0" fill="rgb(205,155,32)" rx="2" ry="2" />
<text  x="190.44" y="783.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.13%)</title><rect x="980.0" y="773" width="1.5" height="15.0" fill="rgb(242,44,39)" rx="2" ry="2" />
<text  x="983.03" y="783.5" ></text>
</g>
<g >
<title>ns_to_timespec (1 samples, 0.13%)</title><rect x="568.9" y="565" width="1.5" height="15.0" fill="rgb(207,97,38)" rx="2" ry="2" />
<text  x="571.95" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::raw (1 samples, 0.13%)</title><rect x="379.7" y="677" width="1.5" height="15.0" fill="rgb(221,203,9)" rx="2" ry="2" />
<text  x="382.67" y="687.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (3 samples, 0.38%)</title><rect x="712.4" y="533" width="4.4" height="15.0" fill="rgb(250,125,34)" rx="2" ry="2" />
<text  x="715.38" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.88%)</title><rect x="95.8" y="933" width="10.3" height="15.0" fill="rgb(228,122,26)" rx="2" ry="2" />
<text  x="98.76" y="943.5" ></text>
</g>
<g >
<title>iptable_security_hook (2 samples, 0.25%)</title><rect x="605.9" y="197" width="3.0" height="15.0" fill="rgb(246,34,39)" rx="2" ry="2" />
<text  x="608.91" y="207.5" ></text>
</g>
<g >
<title>&lt;yaml_rust::scanner::Scanner&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="997.8" y="1109" width="1.4" height="15.0" fill="rgb(217,150,38)" rx="2" ry="2" />
<text  x="1000.77" y="1119.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.25%)</title><rect x="540.9" y="757" width="2.9" height="15.0" fill="rgb(211,171,27)" rx="2" ry="2" />
<text  x="543.85" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.13%)</title><rect x="33.7" y="661" width="1.4" height="15.0" fill="rgb(228,133,44)" rx="2" ry="2" />
<text  x="36.66" y="671.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.13%)</title><rect x="292.4" y="709" width="1.5" height="15.0" fill="rgb(211,210,24)" rx="2" ry="2" />
<text  x="295.43" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="1187.0" y="1221" width="1.5" height="15.0" fill="rgb(233,156,8)" rx="2" ry="2" />
<text  x="1190.04" y="1231.5" ></text>
</g>
<g >
<title>nf_hook_slow (4 samples, 0.50%)</title><rect x="710.9" y="549" width="5.9" height="15.0" fill="rgb(221,121,23)" rx="2" ry="2" />
<text  x="713.90" y="559.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (4 samples, 0.50%)</title><rect x="537.9" y="901" width="5.9" height="15.0" fill="rgb(217,153,20)" rx="2" ry="2" />
<text  x="540.89" y="911.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicU32::load (6 samples, 0.75%)</title><rect x="1011.1" y="1045" width="8.8" height="15.0" fill="rgb(246,50,47)" rx="2" ry="2" />
<text  x="1014.08" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (3 samples, 0.38%)</title><rect x="24.8" y="933" width="4.4" height="15.0" fill="rgb(242,155,48)" rx="2" ry="2" />
<text  x="27.79" y="943.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count (1 samples, 0.13%)</title><rect x="81.0" y="885" width="1.5" height="15.0" fill="rgb(253,188,4)" rx="2" ry="2" />
<text  x="83.98" y="895.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::inner (3 samples, 0.38%)</title><rect x="15.9" y="965" width="4.5" height="15.0" fill="rgb(231,210,40)" rx="2" ry="2" />
<text  x="18.91" y="975.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.13%)</title><rect x="814.4" y="693" width="1.5" height="15.0" fill="rgb(231,60,5)" rx="2" ry="2" />
<text  x="817.41" y="703.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.13%)</title><rect x="688.7" y="581" width="1.5" height="15.0" fill="rgb(223,95,44)" rx="2" ry="2" />
<text  x="691.72" y="591.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::recv_with_flags (38 samples, 4.76%)</title><rect x="563.0" y="693" width="56.2" height="15.0" fill="rgb(236,112,42)" rx="2" ry="2" />
<text  x="566.03" y="703.5" >std::..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.13%)</title><rect x="33.7" y="421" width="1.4" height="15.0" fill="rgb(210,206,28)" rx="2" ry="2" />
<text  x="36.66" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.25%)</title><rect x="152.0" y="661" width="2.9" height="15.0" fill="rgb(245,216,37)" rx="2" ry="2" />
<text  x="154.95" y="671.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::read (38 samples, 4.76%)</title><rect x="563.0" y="709" width="56.2" height="15.0" fill="rgb(227,190,43)" rx="2" ry="2" />
<text  x="566.03" y="719.5" >std::..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.25%)</title><rect x="968.2" y="869" width="3.0" height="15.0" fill="rgb(232,33,42)" rx="2" ry="2" />
<text  x="971.20" y="879.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.13%)</title><rect x="524.6" y="629" width="1.5" height="15.0" fill="rgb(233,177,29)" rx="2" ry="2" />
<text  x="527.59" y="639.5" ></text>
</g>
<g >
<title>config::file::source::file::FileSourceFile::find_file (1 samples, 0.13%)</title><rect x="996.3" y="1125" width="1.5" height="15.0" fill="rgb(229,210,8)" rx="2" ry="2" />
<text  x="999.29" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.13%)</title><rect x="274.7" y="709" width="1.5" height="15.0" fill="rgb(253,56,1)" rx="2" ry="2" />
<text  x="277.69" y="719.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="542.3" y="549" width="1.5" height="15.0" fill="rgb(254,187,6)" rx="2" ry="2" />
<text  x="545.33" y="559.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="489.1" y="533" width="1.5" height="15.0" fill="rgb(209,42,5)" rx="2" ry="2" />
<text  x="492.10" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.75%)</title><rect x="807.0" y="789" width="8.9" height="15.0" fill="rgb(205,28,1)" rx="2" ry="2" />
<text  x="810.02" y="799.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.13%)</title><rect x="733.1" y="693" width="1.5" height="15.0" fill="rgb(213,28,36)" rx="2" ry="2" />
<text  x="736.08" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.13%)</title><rect x="1093.9" y="949" width="1.5" height="15.0" fill="rgb(243,141,48)" rx="2" ry="2" />
<text  x="1096.88" y="959.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::stat (1 samples, 0.13%)</title><rect x="996.3" y="1077" width="1.5" height="15.0" fill="rgb(228,87,50)" rx="2" ry="2" />
<text  x="999.29" y="1087.5" ></text>
</g>
<g >
<title>cse403_distributed_hash_table::transport::_IMPL_SERIALIZE_FOR_CommandResponse::&lt;impl serde::ser::Serialize for cse403_distributed_hash_table::transport::CommandResponse&gt;::serialize (168 samples, 21.05%)</title><rect x="740.5" y="965" width="248.4" height="15.0" fill="rgb(217,77,33)" rx="2" ry="2" />
<text  x="743.48" y="975.5" >cse403_distributed_hash_table::tr..</text>
</g>
<g >
<title>core::alloc::Layout::repeat (4 samples, 0.50%)</title><rect x="301.3" y="725" width="5.9" height="15.0" fill="rgb(213,36,42)" rx="2" ry="2" />
<text  x="304.30" y="735.5" ></text>
</g>
<g >
<title>tcp_ack (4 samples, 0.50%)</title><rect x="600.0" y="133" width="5.9" height="15.0" fill="rgb(242,1,40)" rx="2" ry="2" />
<text  x="603.00" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (50 samples, 6.27%)</title><rect x="237.7" y="805" width="74.0" height="15.0" fill="rgb(223,18,18)" rx="2" ry="2" />
<text  x="240.72" y="815.5" >alloc::v..</text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.13%)</title><rect x="821.8" y="757" width="1.5" height="15.0" fill="rgb(236,91,15)" rx="2" ry="2" />
<text  x="824.80" y="767.5" ></text>
</g>
<g >
<title>std::sys::unix::rwlock::RWLock::read_unlock (2 samples, 0.25%)</title><rect x="112.0" y="917" width="3.0" height="15.0" fill="rgb(240,122,4)" rx="2" ry="2" />
<text  x="115.03" y="927.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (6 samples, 0.75%)</title><rect x="597.0" y="181" width="8.9" height="15.0" fill="rgb(225,173,29)" rx="2" ry="2" />
<text  x="600.04" y="191.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.50%)</title><rect x="722.7" y="309" width="5.9" height="15.0" fill="rgb(253,25,26)" rx="2" ry="2" />
<text  x="725.73" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::try_lock (1 samples, 0.13%)</title><rect x="72.1" y="933" width="1.5" height="15.0" fill="rgb(211,82,26)" rx="2" ry="2" />
<text  x="75.11" y="943.5" ></text>
</g>
<g >
<title>tcp_send_fin (1 samples, 0.13%)</title><rect x="33.7" y="789" width="1.4" height="15.0" fill="rgb(238,90,51)" rx="2" ry="2" />
<text  x="36.66" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="1185.6" y="789" width="1.4" height="15.0" fill="rgb(221,217,51)" rx="2" ry="2" />
<text  x="1188.56" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (2 samples, 0.25%)</title><rect x="239.2" y="789" width="3.0" height="15.0" fill="rgb(208,134,38)" rx="2" ry="2" />
<text  x="242.20" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 1.00%)</title><rect x="36.6" y="933" width="11.8" height="15.0" fill="rgb(216,72,6)" rx="2" ry="2" />
<text  x="39.62" y="943.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (18 samples, 2.26%)</title><rect x="150.5" y="773" width="26.6" height="15.0" fill="rgb(214,152,28)" rx="2" ry="2" />
<text  x="153.48" y="783.5" >a..</text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 2.26%)</title><rect x="150.5" y="741" width="26.6" height="15.0" fill="rgb(232,145,7)" rx="2" ry="2" />
<text  x="153.48" y="751.5" >a..</text>
</g>
<g >
<title>net_rx_action (13 samples, 1.63%)</title><rect x="589.6" y="325" width="19.3" height="15.0" fill="rgb(251,28,32)" rx="2" ry="2" />
<text  x="592.65" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (3 samples, 0.38%)</title><rect x="24.8" y="917" width="4.4" height="15.0" fill="rgb(230,173,8)" rx="2" ry="2" />
<text  x="27.79" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70 samples, 8.77%)</title><rect x="1080.6" y="997" width="103.5" height="15.0" fill="rgb(235,199,33)" rx="2" ry="2" />
<text  x="1083.58" y="1007.5" >entry_SYSCAL..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.13%)</title><rect x="705.0" y="629" width="1.5" height="15.0" fill="rgb(244,123,10)" rx="2" ry="2" />
<text  x="707.99" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.25%)</title><rect x="152.0" y="677" width="2.9" height="15.0" fill="rgb(236,172,5)" rx="2" ry="2" />
<text  x="154.95" y="687.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::read (4 samples, 0.50%)</title><rect x="188.9" y="677" width="5.9" height="15.0" fill="rgb(251,60,36)" rx="2" ry="2" />
<text  x="191.92" y="687.5" ></text>
</g>
<g >
<title>nom::combinator::map::_$u7b$$u7b$closure$u7d$$u7d$::hd378f99ca8b55c7f (1 samples, 0.13%)</title><rect x="994.8" y="1093" width="1.5" height="15.0" fill="rgb(235,189,47)" rx="2" ry="2" />
<text  x="997.81" y="1103.5" ></text>
</g>
<g >
<title>config::path::parser::ident (1 samples, 0.13%)</title><rect x="994.8" y="1109" width="1.5" height="15.0" fill="rgb(252,81,18)" rx="2" ry="2" />
<text  x="997.81" y="1119.5" ></text>
</g>
<g >
<title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="180.1" y="709" width="1.4" height="15.0" fill="rgb(239,140,54)" rx="2" ry="2" />
<text  x="183.05" y="719.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.13%)</title><rect x="125.3" y="901" width="1.5" height="15.0" fill="rgb(230,179,21)" rx="2" ry="2" />
<text  x="128.34" y="911.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (2 samples, 0.25%)</title><rect x="540.9" y="869" width="2.9" height="15.0" fill="rgb(248,127,44)" rx="2" ry="2" />
<text  x="543.85" y="879.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.13%)</title><rect x="954.9" y="709" width="1.5" height="15.0" fill="rgb(245,24,28)" rx="2" ry="2" />
<text  x="957.89" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.13%)</title><rect x="32.2" y="901" width="1.5" height="15.0" fill="rgb(219,187,49)" rx="2" ry="2" />
<text  x="35.18" y="911.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.75%)</title><rect x="218.5" y="805" width="8.9" height="15.0" fill="rgb(222,62,25)" rx="2" ry="2" />
<text  x="221.50" y="815.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.25%)</title><rect x="724.2" y="261" width="3.0" height="15.0" fill="rgb(222,182,12)" rx="2" ry="2" />
<text  x="727.21" y="271.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.25%)</title><rect x="24.8" y="901" width="2.9" height="15.0" fill="rgb(226,145,52)" rx="2" ry="2" />
<text  x="27.79" y="911.5" ></text>
</g>
<g >
<title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8 samples, 1.00%)</title><rect x="804.1" y="853" width="11.8" height="15.0" fill="rgb(235,128,44)" rx="2" ry="2" />
<text  x="807.06" y="863.5" ></text>
</g>
<g >
<title>std::sys_common::net::TcpStream::write (6 samples, 0.75%)</title><rect x="974.1" y="885" width="8.9" height="15.0" fill="rgb(251,89,28)" rx="2" ry="2" />
<text  x="977.11" y="895.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.13%)</title><rect x="33.7" y="341" width="1.4" height="15.0" fill="rgb(220,95,21)" rx="2" ry="2" />
<text  x="36.66" y="351.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.54 (2 samples, 0.25%)</title><rect x="571.9" y="485" width="3.0" height="15.0" fill="rgb(238,189,13)" rx="2" ry="2" />
<text  x="574.90" y="495.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (50 samples, 6.27%)</title><rect x="867.6" y="565" width="74.0" height="15.0" fill="rgb(207,56,53)" rx="2" ry="2" />
<text  x="870.64" y="575.5" >__local_..</text>
</g>
<g >
<title>&lt;&amp;str as nom::traits::FindToken&lt;char&gt;&gt;::find_token (1 samples, 0.13%)</title><rect x="994.8" y="901" width="1.5" height="15.0" fill="rgb(228,170,26)" rx="2" ry="2" />
<text  x="997.81" y="911.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.13%)</title><rect x="1182.6" y="933" width="1.5" height="15.0" fill="rgb(223,153,31)" rx="2" ry="2" />
<text  x="1185.61" y="943.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.13%)</title><rect x="863.2" y="565" width="1.5" height="15.0" fill="rgb(247,101,27)" rx="2" ry="2" />
<text  x="866.21" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.13%)</title><rect x="1028.8" y="1013" width="1.5" height="15.0" fill="rgb(220,214,38)" rx="2" ry="2" />
<text  x="1031.82" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::amortized_new_size (7 samples, 0.88%)</title><rect x="286.5" y="741" width="10.4" height="15.0" fill="rgb(214,225,36)" rx="2" ry="2" />
<text  x="289.52" y="751.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_null (1 samples, 0.13%)</title><rect x="824.8" y="885" width="1.4" height="15.0" fill="rgb(218,201,43)" rx="2" ry="2" />
<text  x="827.76" y="895.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.13%)</title><rect x="604.4" y="53" width="1.5" height="15.0" fill="rgb(247,157,34)" rx="2" ry="2" />
<text  x="607.44" y="63.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.13%)</title><rect x="1185.6" y="885" width="1.4" height="15.0" fill="rgb(219,174,46)" rx="2" ry="2" />
<text  x="1188.56" y="895.5" ></text>
</g>
<g >
<title>nf_hook_slow (5 samples, 0.63%)</title><rect x="577.8" y="421" width="7.4" height="15.0" fill="rgb(225,70,12)" rx="2" ry="2" />
<text  x="580.82" y="431.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (2 samples, 0.25%)</title><rect x="957.8" y="773" width="3.0" height="15.0" fill="rgb(215,226,26)" rx="2" ry="2" />
<text  x="960.84" y="783.5" ></text>
</g>
<g >
<title>remove_wait_queue (3 samples, 0.38%)</title><rect x="676.9" y="661" width="4.4" height="15.0" fill="rgb(222,150,27)" rx="2" ry="2" />
<text  x="679.89" y="671.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.13%)</title><rect x="542.3" y="645" width="1.5" height="15.0" fill="rgb(231,142,26)" rx="2" ry="2" />
<text  x="545.33" y="655.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (17 samples, 2.13%)</title><rect x="706.5" y="629" width="25.1" height="15.0" fill="rgb(248,54,5)" rx="2" ry="2" />
<text  x="709.47" y="639.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 6.64%)</title><rect x="656.2" y="789" width="78.4" height="15.0" fill="rgb(224,194,26)" rx="2" ry="2" />
<text  x="659.19" y="799.5" >entry_SYS..</text>
</g>
<g >
<title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.38%)</title><rect x="55.8" y="949" width="4.5" height="15.0" fill="rgb(253,144,17)" rx="2" ry="2" />
<text  x="58.84" y="959.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.50%)</title><rect x="55.8" y="965" width="6.0" height="15.0" fill="rgb(210,164,2)" rx="2" ry="2" />
<text  x="58.84" y="975.5" ></text>
</g>
<g >
<title>ip_queue_xmit (57 samples, 7.14%)</title><rect x="860.3" y="661" width="84.2" height="15.0" fill="rgb(235,185,48)" rx="2" ry="2" />
<text  x="863.25" y="671.5" >ip_queue_..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.13%)</title><rect x="1009.6" y="917" width="1.5" height="15.0" fill="rgb(218,209,30)" rx="2" ry="2" />
<text  x="1012.60" y="927.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.13%)</title><rect x="33.7" y="501" width="1.4" height="15.0" fill="rgb(215,80,33)" rx="2" ry="2" />
<text  x="36.66" y="511.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (71 samples, 8.90%)</title><rect x="632.5" y="933" width="105.0" height="15.0" fill="rgb(221,57,34)" rx="2" ry="2" />
<text  x="635.53" y="943.5" >serde_json::..</text>
</g>
<g >
<title>core::sync::atomic::atomic_sub (2 samples, 0.25%)</title><rect x="112.0" y="885" width="3.0" height="15.0" fill="rgb(212,85,17)" rx="2" ry="2" />
<text  x="115.03" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="33.7" y="933" width="1.4" height="15.0" fill="rgb(214,16,6)" rx="2" ry="2" />
<text  x="36.66" y="943.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="1005.2" y="1045" width="1.4" height="15.0" fill="rgb(230,183,36)" rx="2" ry="2" />
<text  x="1008.16" y="1055.5" ></text>
</g>
<g >
<title>ip_local_deliver (47 samples, 5.89%)</title><rect x="870.6" y="405" width="69.5" height="15.0" fill="rgb(249,4,11)" rx="2" ry="2" />
<text  x="873.60" y="415.5" >ip_loca..</text>
</g>
<g >
<title>finish_task_switch (35 samples, 4.39%)</title><rect x="1130.9" y="885" width="51.7" height="15.0" fill="rgb(218,48,53)" rx="2" ry="2" />
<text  x="1133.85" y="895.5" >finis..</text>
</g>
<g >
<title>do_exit (1 samples, 0.13%)</title><rect x="1187.0" y="1173" width="1.5" height="15.0" fill="rgb(233,121,28)" rx="2" ry="2" />
<text  x="1190.04" y="1183.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.13%)</title><rect x="1184.1" y="1077" width="1.5" height="15.0" fill="rgb(251,111,45)" rx="2" ry="2" />
<text  x="1187.09" y="1087.5" ></text>
</g>
<g >
<title>config::config::Config::refresh (1 samples, 0.13%)</title><rect x="996.3" y="1221" width="1.5" height="15.0" fill="rgb(216,128,45)" rx="2" ry="2" />
<text  x="999.29" y="1231.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_none (2 samples, 0.25%)</title><rect x="823.3" y="917" width="2.9" height="15.0" fill="rgb(220,133,37)" rx="2" ry="2" />
<text  x="826.28" y="927.5" ></text>
</g>
<g >
<title>&lt;&lt;cse403_distributed_hash_table::transport::_IMPL_DESERIALIZE_FOR_Command::&lt;impl serde::de::Deserialize for cse403_distributed_hash_table::transport::Command&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum::__Visitor as serde::de::Visitor&gt;::visit_seq (34 samples, 4.26%)</title><rect x="146.0" y="901" width="50.3" height="15.0" fill="rgb(229,51,47)" rx="2" ry="2" />
<text  x="149.04" y="911.5" >&lt;&lt;cse..</text>
</g>
<g >
<title>__sys_recvfrom (2 samples, 0.25%)</title><rect x="540.9" y="677" width="2.9" height="15.0" fill="rgb(223,44,43)" rx="2" ry="2" />
<text  x="543.85" y="687.5" ></text>
</g>
<g >
<title>core::slice::from_raw_parts (2 samples, 0.25%)</title><rect x="801.1" y="821" width="3.0" height="15.0" fill="rgb(220,193,6)" rx="2" ry="2" />
<text  x="804.10" y="831.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.13%)</title><rect x="61.8" y="933" width="1.4" height="15.0" fill="rgb(250,156,22)" rx="2" ry="2" />
<text  x="64.75" y="943.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (98 samples, 12.28%)</title><rect x="827.7" y="917" width="144.9" height="15.0" fill="rgb(237,48,43)" rx="2" ry="2" />
<text  x="830.72" y="927.5" >std::io::Write::wr..</text>
</g>
<g >
<title>__lock_text_start (41 samples, 5.14%)</title><rect x="878.0" y="261" width="60.6" height="15.0" fill="rgb(239,150,42)" rx="2" ry="2" />
<text  x="880.99" y="271.5" >__lock..</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (3 samples, 0.38%)</title><rect x="539.4" y="885" width="4.4" height="15.0" fill="rgb(213,128,11)" rx="2" ry="2" />
<text  x="542.37" y="895.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (5 samples, 0.63%)</title><rect x="511.3" y="565" width="7.4" height="15.0" fill="rgb(207,196,44)" rx="2" ry="2" />
<text  x="514.28" y="575.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.25%)</title><rect x="373.8" y="581" width="2.9" height="15.0" fill="rgb(237,35,15)" rx="2" ry="2" />
<text  x="376.76" y="591.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 0.13%)</title><rect x="363.4" y="533" width="1.5" height="15.0" fill="rgb(250,132,0)" rx="2" ry="2" />
<text  x="366.41" y="543.5" ></text>
</g>
<g >
<title>&lt;config::path::Expression as core::str::FromStr&gt;::from_str (1 samples, 0.13%)</title><rect x="994.8" y="1141" width="1.5" height="15.0" fill="rgb(253,54,25)" rx="2" ry="2" />
<text  x="997.81" y="1151.5" ></text>
</g>
</g>
</svg>
